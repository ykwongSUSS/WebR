[
  {
    "objectID": "dataframes.html",
    "href": "dataframes.html",
    "title": "dataframes",
    "section": "",
    "text": "textEntry\nimportExport\nfilterSelectArrange\nmutate\ncaseMatch\npivot_longer",
    "crumbs": [
      "DataFrames"
    ]
  },
  {
    "objectID": "yaml.html",
    "href": "yaml.html",
    "title": "yaml",
    "section": "",
    "text": "title: \"yaml\"\nformat: html\nnumber-sections: true\nwarning: false\n\n\ntitle: \"yaml\"\nformat:\n  html: default\n  pdf: \n    pagesize: A4\n    include-in-header:\n      text: |\n        \\usepackage{scrlayer-scrpage}\n        \\rohead{\"yaml\"}\nnumber-sections: true\nwarning: false",
    "crumbs": [
      "Preface",
      "yaml"
    ]
  },
  {
    "objectID": "ggplots/basic5.html",
    "href": "ggplots/basic5.html",
    "title": "ggplot-Basics",
    "section": "",
    "text": "Five named plots\n\n\n\n\nscatter: geom_point()\nline : geom_line()\nbar count: geom_bar()\ncolumn: geom_col()\nfrequency: geom_histogram()",
    "crumbs": [
      "ggPlots",
      "basic5"
    ]
  },
  {
    "objectID": "ggplots/basic5.html#data",
    "href": "ggplots/basic5.html#data",
    "title": "ggplot-Basics",
    "section": "Data",
    "text": "Data\n\ngirth &lt;- c(40,45,53,55,63,65,67)\nheight &lt;- c(56.2,33.3,61.2,38.4,47.4,30.0,40.4)\nage &lt;- c(15,18,28,40,55,65,76)\nsex &lt;- c('M','F','M','F','M','M','F')\ndf &lt;- data.frame(girth,height,age,sex)\ndf\n\n  girth height age sex\n1    40   56.2  15   M\n2    45   33.3  18   F\n3    53   61.2  28   M\n4    55   38.4  40   F\n5    63   47.4  55   M\n6    65   30.0  65   M\n7    67   40.4  76   F\n\n\n\n\n\n\n\n\n\n1. Scatter Plot\n\n\n\n\ngeom_point = Scatter Plot\naes(color=sex)\nlab(title,subtitle,xlabel,ylabel)\n\n\n\n\n# 1. Scatter\nlibrary(tidyverse)\nggplot(df, aes(x=girth, y=height, color=sex))+\n  geom_point(size=2)+\n  labs(\n    title=\"1. Scatter Plot\",\n    subtitle=\"Date: 28 Jul 2024\",\n    x = \"Girth(cm)\",\n    y = \"Height(cm)\"\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2. ScatterLines\n\n\n\n\nxlims, ylims\nmarker (attributes from geom_point())\n\n\n\n\n# 2. ScatterLines\nggplot(df)+\n  xlim(0,100)+\n  ylim(0,80)+\n  \n  geom_point(x=age,y=girth,shape=21, size=4,fill=\"orange\",alpha=0.4)+\n  geom_line(aes(x=age,y=girth,color=\"girth\"),show.legend=FALSE)+\n  geom_point(x=age,y=height,shape=21, size=4,fill=\"yellow\")+\n  geom_line(aes(x=age,y=height,color=\"height\"),show.legend=FALSE)+\n  scale_color_manual(values=c(\"red\",\"blue\"))+\n  \n  theme_bw()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3. BarPlot\n\n\n\n\ncounts categories\nrunif()\n\n\n\n\n\n# barplot\ndirection = c('N','S','E','W','W','E','W','E','E','E','E','S','S','N','N','W','E','E','N','N','N','S','E','W','W','E','W','E','E','E')\nspeed = rnorm(30, 5, 0.2)\ndfWind &lt;- data.frame(direction,speed)\nstr(dfWind)\n\n'data.frame':   30 obs. of  2 variables:\n $ direction: chr  \"N\" \"S\" \"E\" \"W\" ...\n $ speed    : num  5.35 5.07 5.01 5.03 4.84 ...\n\nggplot(dfWind,aes(x=direction, fill=direction))+\n  geom_bar(color=\"gray\")+\n  labs(\n    title=\"3. BarPlot\",\n    subtitle=\"auto counting\"\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n4. ColumnPlot\n\n\n\n\nannotate values : geom_text()\n\n\n\n\nschool &lt;- c(\"NSHD\",\"SHBS\",\"SBIZ\",\"LAW\")\nnumSG &lt;- c(68,140,90,55)\ndf2 &lt;- data.frame(school,numSG)\ndf2\n\n  school numSG\n1   NSHD    68\n2   SHBS   140\n3   SBIZ    90\n4    LAW    55\n\nggplot(df2, aes(x=school, y=numSG, fill=school))+\n  labs(\n    title=\"4.ColumnPlot\",\n   subtitle=\"yValues\")+\n  geom_col(color=\"gray\")+\n  scale_fill_manual(values=c(\"lightgreen\",\"yellow\",\"lightblue\",\"purple\"))+\n  geom_text(aes(label=numSG),nudge_y=10)+\n  ylim(0,180)+\n  theme_bw()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n5. Histogram\n\n\n\n\ngeom_histogram\nbin\n\n\n\n\n  str(dfWind)\n\n'data.frame':   30 obs. of  2 variables:\n $ direction: chr  \"N\" \"S\" \"E\" \"W\" ...\n $ speed    : num  5.35 5.07 5.01 5.03 4.84 ...\n\n  ggplot(dfWind, aes(x=speed))+\n    geom_histogram(bins = 8, fill=\"lightgray\",color=\"black\")+\n    labs(\n      title=\"5. Histogram\",\n      subtitle = \"bins=8\",\n      xlab = \"Wind Speed\",\n      ylab = \"Frequency\"\n    )",
    "crumbs": [
      "ggPlots",
      "basic5"
    ]
  },
  {
    "objectID": "ggplots/facets.html",
    "href": "ggplots/facets.html",
    "title": "Facets",
    "section": "",
    "text": "ggPlot-facets\n\n\n\n\nfacet_wrap (x, ncol)\nfacet_grid (x,y, ncol, nrows)",
    "crumbs": [
      "ggPlots",
      "facets"
    ]
  },
  {
    "objectID": "ggplots/facets.html#data",
    "href": "ggplots/facets.html#data",
    "title": "Facets",
    "section": "2 Data",
    "text": "2 Data\n\nhead(iris)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n\n\nIn order to do facet plot across variables Sepal.Length, Sepal.Width, Petal.Length and Petal.Width, we need to reshape the data to pivot_longer.\n\ncol_order&lt;- c(\"Species\",\"Sepal.Length\",\"Sepal.Width\",\n                        \"Petal.Length\",\"Petal.Width\")\nirisA &lt;- iris[,col_order]\nhead(irisA)\n\n  Species Sepal.Length Sepal.Width Petal.Length Petal.Width\n1  setosa          5.1         3.5          1.4         0.2\n2  setosa          4.9         3.0          1.4         0.2\n3  setosa          4.7         3.2          1.3         0.2\n4  setosa          4.6         3.1          1.5         0.2\n5  setosa          5.0         3.6          1.4         0.2\n6  setosa          5.4         3.9          1.7         0.4\n\niris_long &lt;- irisA %&gt;%\n  pivot_longer(\n  !Species, \n  names_to = \"Leaves\",\n  values_to =\"cm\")\nhead(iris_long)\n\n# A tibble: 6 × 3\n  Species Leaves          cm\n  &lt;fct&gt;   &lt;chr&gt;        &lt;dbl&gt;\n1 setosa  Sepal.Length   5.1\n2 setosa  Sepal.Width    3.5\n3 setosa  Petal.Length   1.4\n4 setosa  Petal.Width    0.2\n5 setosa  Sepal.Length   4.9\n6 setosa  Sepal.Width    3",
    "crumbs": [
      "ggPlots",
      "facets"
    ]
  },
  {
    "objectID": "ggplots/facets.html#facet_wrap",
    "href": "ggplots/facets.html#facet_wrap",
    "title": "Facets",
    "section": "3 facet_wrap",
    "text": "3 facet_wrap\n\nspecify number of columns (ncol=2) and it will wrap to next row of plots after nth (usually 2 to 4) column.\n\n\np &lt;- ggplot(iris_long, aes(x=Species, y=cm))+\n  geom_boxplot(aes(fill=Species))\np+facet_wrap(~Leaves, ncol=2)",
    "crumbs": [
      "ggPlots",
      "facets"
    ]
  },
  {
    "objectID": "ggplots/facets.html#facet_grid",
    "href": "ggplots/facets.html#facet_grid",
    "title": "Facets",
    "section": "4 facet_grid",
    "text": "4 facet_grid\n\nproduces 2-d grid of panels defined by variables for rows and columns.\n\n\nq &lt;- ggplot(iris_long, aes(x=Species, y=cm))+\n  geom_boxplot(aes(fill=Species))\nq + facet_grid(cols = vars(Leaves))",
    "crumbs": [
      "ggPlots",
      "facets"
    ]
  },
  {
    "objectID": "datasets.html",
    "href": "datasets.html",
    "title": "datasets",
    "section": "",
    "text": "library(tidyverse)  # includes package `ggplot2`\n\nYou can list the datasets available in each package using datasets() from library vcdExtras (which includes vcd).",
    "crumbs": [
      "DataSets"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "WebR",
    "section": "",
    "text": "This WebR website is created using Quarto. It is a collection of R snippets useful for my study of R.\nThe website is designed to maximize quick access to frequently asked materials. It is not a tutorial, more like a quick reference.\nThe main chapters for this website are grouped by topics:",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "datasets/trees/trees.html",
    "href": "datasets/trees/trees.html",
    "title": "BaseR: trees",
    "section": "",
    "text": "trees\n\n\n\n\ntidymodels\nbroom"
  },
  {
    "objectID": "datasets/trees/trees.html#dataset",
    "href": "datasets/trees/trees.html#dataset",
    "title": "BaseR: trees",
    "section": "Dataset",
    "text": "Dataset\n\ntreesDF &lt;- data.frame(trees)\nstr(trees)\n\n'data.frame':   31 obs. of  3 variables:\n $ Girth : num  8.3 8.6 8.8 10.5 10.7 10.8 11 11 11.1 11.2 ...\n $ Height: num  70 65 63 72 81 83 66 75 80 75 ...\n $ Volume: num  10.3 10.3 10.2 16.4 18.8 19.7 15.6 18.2 22.6 19.9 ...\n\n\n\n\nstr(trees)\n\nfunction (range = c(1L, 2000L), trans = NULL)"
  },
  {
    "objectID": "datatypes/lists.html",
    "href": "datatypes/lists.html",
    "title": "Lists",
    "section": "",
    "text": "# can mix different types\nlist1 &lt;- list(fruits = c(\"apple\", \"bananas\"),qty=c(120,180),total = 300)\nlist1\n\n$fruits\n[1] \"apple\"   \"bananas\"\n\n$qty\n[1] 120 180\n\n$total\n[1] 300\n\nstr(list1)\n\nList of 3\n $ fruits: chr [1:2] \"apple\" \"bananas\"\n $ qty   : num [1:2] 120 180\n $ total : num 300\n\n\n\nlist1$fruits\n\n[1] \"apple\"   \"bananas\"\n\nlist1$qty\n\n[1] 120 180\n\nlist1$total\n\n[1] 300",
    "crumbs": [
      "Datatypes",
      "lists"
    ]
  },
  {
    "objectID": "datatypes/lists.html#convert-named-list-to-tibbledataframe",
    "href": "datatypes/lists.html#convert-named-list-to-tibbledataframe",
    "title": "Lists",
    "section": "2 Convert named list to tibble/dataframe",
    "text": "2 Convert named list to tibble/dataframe\n\nlibrary(tidyverse)\ndf &lt;- data.frame(fruit=list1$fruit, quantity=list1$qty)\ndf\n\n    fruit quantity\n1   apple      120\n2 bananas      180",
    "crumbs": [
      "Datatypes",
      "lists"
    ]
  },
  {
    "objectID": "datatypes/strings.html",
    "href": "datatypes/strings.html",
    "title": "Strings",
    "section": "",
    "text": "library(tidyverse)\n# single letter single quotes\n# multiple letters use double quotes\n\ns1 &lt;- c(\"I ate\")\nclass(s1)\n\n[1] \"character\"\n\ntypeof(s1)\n\n[1] \"character\"\n\nstr(s1)\n\n chr \"I ate\"",
    "crumbs": [
      "Datatypes",
      "strings"
    ]
  },
  {
    "objectID": "datatypes/strings.html#baser-string-functions",
    "href": "datatypes/strings.html#baser-string-functions",
    "title": "strings",
    "section": "",
    "text": "tolower\ntoupper\nsubstring\npaste\n\n\n\n\n# single letter single quotes\n# multiple letters use double quotes\n\nc1 &lt;- c(\"I believe\")\nstr(c1)\n\n chr \"I believe\"\n\ntypeof(c1)\n\n[1] \"character\"\n\n# lowercase\nc2 &lt;- tolower(c1)\nstr(c2)\n\n chr \"i believe\"\n\n# paste to merge strings -- concat\nc3 &lt;- paste(\"I really\",\"believe\")  \nstr(c3)\n\n chr \"I really believe\"",
    "crumbs": [
      "Datatypes",
      "strings"
    ]
  },
  {
    "objectID": "datatypes/strings.html#tidyverse-string-functions",
    "href": "datatypes/strings.html#tidyverse-string-functions",
    "title": "strings",
    "section": "",
    "text": "library(tidyverse)\n# single letter single quotes\n# multiple letters use double quotes\n\ns1 &lt;- c(\"I believe\")\nstr(s1)\n\n chr \"I believe\"\n\ntypeof(s1)\n\n[1] \"character\"\n\n# lowercase\ns2 &lt;- str_to_lower(s1)\nstr(s2)\n\n chr \"i believe\"\n\n# paste to merge strings -- concat\ns3 &lt;- str_c(\"I really\",\" believe\")  \nstr(s3)\n\n chr \"I really believe\"",
    "crumbs": [
      "Datatypes",
      "strings"
    ]
  },
  {
    "objectID": "datatypes/numbers.html",
    "href": "datatypes/numbers.html",
    "title": "numbers",
    "section": "",
    "text": "# default is double\na &lt;- 2+3\nclass(a)\n\n[1] \"numeric\"\n\ntypeof(a)\n\n[1] \"double\"\n\nstr(a)\n\n num 5\n\n\n\n\n\n\n# convert with as.integer\na1 &lt;- as.integer(a)\nclass(a1)\n\n[1] \"integer\"\n\ntypeof(a1)\n\n[1] \"integer\"\n\nstr(a1)\n\n int 5\n\n# add L if you want integer\nb &lt;- 2L + 3L\ntypeof(b)\n\n[1] \"integer\"\n\n\n\n\n\n\n# float-decimals\nc &lt;- pi/3\nc(c,typeof(c))\n\n[1] \"1.0471975511966\" \"double\"         \n\nstr(c)\n\n num 1.05",
    "crumbs": [
      "Datatypes",
      "numbers"
    ]
  },
  {
    "objectID": "datatypes/numbers.html#num",
    "href": "datatypes/numbers.html#num",
    "title": "numbers",
    "section": "",
    "text": "# default is double\na &lt;- 2+3\nstr(a)\n\n num 5\n\ntypeof(a)\n\n[1] \"double\"\n\nclass(a)\n\n[1] \"numeric\"\n\n# convert with as.integer\na1 &lt;- as.integer(a)\nstr(a1)\n\n int 5\n\ntypeof(a1)\n\n[1] \"integer\"\n\nclass(a1)\n\n[1] \"integer\"\n\n# add L if you want integer\nb &lt;- 2L + 3L\ntypeof(b)\n\n[1] \"integer\"\n\n# float-decimals\nc &lt;- pi/3\nstr(c)\n\n num 1.05\n\nc(c, typeof(c))\n\n[1] \"1.0471975511966\" \"double\"",
    "crumbs": [
      "Datatypes",
      "numbers"
    ]
  },
  {
    "objectID": "ggplots.html",
    "href": "ggplots.html",
    "title": "ggPlots",
    "section": "",
    "text": "0.1 DataTypes\n\nbasics\nregression\nfacets\npatchwork",
    "crumbs": [
      "ggPlots"
    ]
  },
  {
    "objectID": "dataframes/transform/data-join.html",
    "href": "dataframes/transform/data-join.html",
    "title": "data-join",
    "section": "",
    "text": "1. Data\n\n\nCode\nlibrary(tidyverse)\n\nx &lt;- tribble(\n  ~key, ~val_x,\n  1, \"x1\",\n  2, \"x2\",\n  3, \"x3\"\n)\ny &lt;- tribble(\n  ~key, ~val_y,\n  1, \"y1\",\n  2, \"y2\",\n  4, \"y3\"\n)\nx\n\n\n# A tibble: 3 × 2\n    key val_x\n  &lt;dbl&gt; &lt;chr&gt;\n1     1 x1   \n2     2 x2   \n3     3 x3   \n\n\nCode\ny\n\n\n# A tibble: 3 × 2\n    key val_y\n  &lt;dbl&gt; &lt;chr&gt;\n1     1 y1   \n2     2 y2   \n3     4 y3   \n\n\n\n\n1a. full_join()\n\n\nCode\nfull_join(x,y)\n\n\n# A tibble: 4 × 3\n    key val_x val_y\n  &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;\n1     1 x1    y1   \n2     2 x2    y2   \n3     3 x3    &lt;NA&gt; \n4     4 &lt;NA&gt;  y3   \n\n\n\n\n1b. left_join()\n\n\nCode\nleft_join(x,y)\n\n\n# A tibble: 3 × 3\n    key val_x val_y\n  &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;\n1     1 x1    y1   \n2     2 x2    y2   \n3     3 x3    &lt;NA&gt; \n\n\n\n\n1c. right_join()\n\n\nCode\nright_join(x,y)\n\n\n# A tibble: 3 × 3\n    key val_x val_y\n  &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;\n1     1 x1    y1   \n2     2 x2    y2   \n3     4 &lt;NA&gt;  y3   \n\n\n\n\n1d. inner_join()\n\n\nCode\ninner_join(x,y)\n\n\n# A tibble: 2 × 3\n    key val_x val_y\n  &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;\n1     1 x1    y1   \n2     2 x2    y2"
  },
  {
    "objectID": "dataframes/transform/data-count.html",
    "href": "dataframes/transform/data-count.html",
    "title": "data-count",
    "section": "",
    "text": "1. Count categories\n\nlibrary(tidyverse)\n\nid&lt;- paste(\"SD\",101:110,sep=\"\") # paste() is in BaseR\nltrgrades &lt;- c(\"C+\",\"F\",\"B\",\"A+\",\"B\",\"B-\",\"A\",\"C\",\"B-\",\"B-\")\ngdclass &lt;- fct_inorder(c(\"F\",\"D\",\"D+\",\"C\",\"C+\",\"B-\",\"B\",\"B+\",\"A-\",\"A\",\"A+\"))\n\n# recode ltrgrades into the gdclass levels\nlgrades &lt;- factor(ltrgrades, levels=gdclass)\n\n# form dataframe with the gdclass levels\ndf &lt;- data.frame(id,lgrades)\ndf\n\n      id lgrades\n1  SD101      C+\n2  SD102       F\n3  SD103       B\n4  SD104      A+\n5  SD105       B\n6  SD106      B-\n7  SD107       A\n8  SD108       C\n9  SD109      B-\n10 SD110      B-\n\nstr(df)\n\n'data.frame':   10 obs. of  2 variables:\n $ id     : chr  \"SD101\" \"SD102\" \"SD103\" \"SD104\" ...\n $ lgrades: Factor w/ 11 levels \"F\",\"D\",\"D+\",\"C\",..: 5 1 7 11 7 6 10 4 6 6\n\n\n\n\n2. Count Occurrences of values in ltrgrades column\n\ndt &lt;- table(df$lgrades)  # gives the counting\ndt\n\n\n F  D D+  C C+ B-  B B+ A-  A A+ \n 1  0  0  1  1  3  2  0  0  1  1 \n\ndf2 &lt;- data.frame(dt)    # regroup as a dataframe\nnames(df2)&lt;-c(\"grade\",\"freq\")\ndf2\n\n   grade freq\n1      F    1\n2      D    0\n3     D+    0\n4      C    1\n5     C+    1\n6     B-    3\n7      B    2\n8     B+    0\n9     A-    0\n10     A    1\n11    A+    1"
  },
  {
    "objectID": "dataframes/pivot_longer.html",
    "href": "dataframes/pivot_longer.html",
    "title": "pivot_longer",
    "section": "",
    "text": "library(tidyverse)",
    "crumbs": [
      "DataFrames",
      "pivot_longer"
    ]
  },
  {
    "objectID": "dataframes/pivot_longer.html#libraries",
    "href": "dataframes/pivot_longer.html#libraries",
    "title": "pivot_longer",
    "section": "",
    "text": "library(tidyverse)",
    "crumbs": [
      "DataFrames",
      "pivot_longer"
    ]
  },
  {
    "objectID": "dataframes/pivot_longer.html#data1---students",
    "href": "dataframes/pivot_longer.html#data1---students",
    "title": "pivot_longer",
    "section": "2 Data1 - students",
    "text": "2 Data1 - students\n\nstudents &lt;- data.frame(\n  math = c(90,85,92),\n  science = c(95,88,91),\n  history = c(87,92,78)\n)\nstudents\n\n  math science history\n1   90      95      87\n2   85      88      92\n3   92      91      78\n\n\n\nstudents_long &lt;- students %&gt;%\n  pivot_longer(\n    col=colnames(students),\n    names_to = \"subject\",\n    values_to = \"score\"\n)\nstudents_long\n\n# A tibble: 9 × 2\n  subject score\n  &lt;chr&gt;   &lt;dbl&gt;\n1 math       90\n2 science    95\n3 history    87\n4 math       85\n5 science    88\n6 history    92\n7 math       92\n8 science    91\n9 history    78",
    "crumbs": [
      "DataFrames",
      "pivot_longer"
    ]
  },
  {
    "objectID": "dataframes/pivot_longer.html#data2---iris",
    "href": "dataframes/pivot_longer.html#data2---iris",
    "title": "pivot_longer",
    "section": "3 Data2 - iris",
    "text": "3 Data2 - iris\n\n# move Species to the first column\nhead(iris)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n\niris1 &lt;- iris[,c(5,1,2,3,4)]\nhead(iris1)\n\n  Species Sepal.Length Sepal.Width Petal.Length Petal.Width\n1  setosa          5.1         3.5          1.4         0.2\n2  setosa          4.9         3.0          1.4         0.2\n3  setosa          4.7         3.2          1.3         0.2\n4  setosa          4.6         3.1          1.5         0.2\n5  setosa          5.0         3.6          1.4         0.2\n6  setosa          5.4         3.9          1.7         0.4\n\n\n\niris_long &lt;- iris1 %&gt;%\n  pivot_longer(\n    !Species,\n    names_to = \"Leaf\",\n    values_to = \"cm\"\n  )\nhead(iris_long)\n\n# A tibble: 6 × 3\n  Species Leaf            cm\n  &lt;fct&gt;   &lt;chr&gt;        &lt;dbl&gt;\n1 setosa  Sepal.Length   5.1\n2 setosa  Sepal.Width    3.5\n3 setosa  Petal.Length   1.4\n4 setosa  Petal.Width    0.2\n5 setosa  Sepal.Length   4.9\n6 setosa  Sepal.Width    3",
    "crumbs": [
      "DataFrames",
      "pivot_longer"
    ]
  },
  {
    "objectID": "dataframes/caseMatch.html",
    "href": "dataframes/caseMatch.html",
    "title": "caseMatch",
    "section": "",
    "text": "library(tidyverse)\ndf &lt;- data.frame(\n  Disease = c(0,0,1,1,0),\n  bioMarker = c(31.9,32.0,39.0,32.3,41.0)\n)\ndf\n\n  Disease bioMarker\n1       0      31.9\n2       0      32.0\n3       1      39.0\n4       1      32.3\n5       0      41.0",
    "crumbs": [
      "DataFrames",
      "caseMatch"
    ]
  },
  {
    "objectID": "dataframes/caseMatch.html#data",
    "href": "dataframes/caseMatch.html#data",
    "title": "caseMatch",
    "section": "",
    "text": "library(tidyverse)\ndf &lt;- data.frame(\n  Disease = c(0,0,1,1,0),\n  bioMarker = c(31.9,32.0,39.0,32.3,41.0)\n)\ndf\n\n  Disease bioMarker\n1       0      31.9\n2       0      32.0\n3       1      39.0\n4       1      32.3\n5       0      41.0",
    "crumbs": [
      "DataFrames",
      "caseMatch"
    ]
  },
  {
    "objectID": "dataframes/caseMatch.html#use-case_match-to-recode",
    "href": "dataframes/caseMatch.html#use-case_match-to-recode",
    "title": "caseMatch",
    "section": "2 Use case_match to recode",
    "text": "2 Use case_match to recode\n\nreplacing recode function on a vector (not dataframe)\n\n\nlibrary(tidyverse)\ndf$Disease &lt;- case_match(\n                  df$Disease,\n                  0 ~ \"noCancer\",\n                  1 ~ \"Cancer\"\n              )\ndf\n\n   Disease bioMarker\n1 noCancer      31.9\n2 noCancer      32.0\n3   Cancer      39.0\n4   Cancer      32.3\n5 noCancer      41.0",
    "crumbs": [
      "DataFrames",
      "caseMatch"
    ]
  },
  {
    "objectID": "dataframes/wrangling/df-arrange-sort.html",
    "href": "dataframes/wrangling/df-arrange-sort.html",
    "title": "df-arrange-sort",
    "section": "",
    "text": "data\n\n\nCode\nlibrary(tidyverse)\nname = c(\"Emily\",\"David\",\"Mark\",\"Ruth\", \"Sylvia\", \"Rebecca\",\"Tom\",\"Gary\",\"Peter\",\"Mary\")\ngender = factor(c(\"F\",\"M\",\"M\",\"F\",\"F\",\"F\",\"M\",\"M\",\"M\",\"F\"))\nage = c(24,30,39,40,54,22,18,6,66,9)\ndf &lt;- tibble(name, gender, age)\ndf\n\n\n# A tibble: 10 × 3\n   name    gender   age\n   &lt;chr&gt;   &lt;fct&gt;  &lt;dbl&gt;\n 1 Emily   F         24\n 2 David   M         30\n 3 Mark    M         39\n 4 Ruth    F         40\n 5 Sylvia  F         54\n 6 Rebecca F         22\n 7 Tom     M         18\n 8 Gary    M          6\n 9 Peter   M         66\n10 Mary    F          9\n\n\n\n\nbaseR:: order() - sorting\n\n\nCode\n# minus for desc\ndf[order(-age),]\n\n\n# A tibble: 10 × 3\n   name    gender   age\n   &lt;chr&gt;   &lt;fct&gt;  &lt;dbl&gt;\n 1 Peter   M         66\n 2 Sylvia  F         54\n 3 Ruth    F         40\n 4 Mark    M         39\n 5 David   M         30\n 6 Emily   F         24\n 7 Rebecca F         22\n 8 Tom     M         18\n 9 Mary    F          9\n10 Gary    M          6\n\n\n\n\ntidyverse:: arrange()\n\n\nCode\n# needs tidyverse\narrange(df,-age)\n\n\n# A tibble: 10 × 3\n   name    gender   age\n   &lt;chr&gt;   &lt;fct&gt;  &lt;dbl&gt;\n 1 Peter   M         66\n 2 Sylvia  F         54\n 3 Ruth    F         40\n 4 Mark    M         39\n 5 David   M         30\n 6 Emily   F         24\n 7 Rebecca F         22\n 8 Tom     M         18\n 9 Mary    F          9\n10 Gary    M          6"
  },
  {
    "objectID": "dataframes/wrangling/df-grep.html",
    "href": "dataframes/wrangling/df-grep.html",
    "title": "df-grep",
    "section": "",
    "text": "library(tidyverse)\nname = c(\"Emily\",\"David\",\"Mark\",\"Ruth\", \"Sylvia\", \"Rebecca\",\"Tom\",\"Gary\",\"Peter\",\"Mary\")\ngender = factor(c(\"F\",\"M\",\"M\",\"F\",\"F\",\"F\",\"M\",\"M\",\"M\",\"F\"))\n\ndf1 &lt;- tibble(name, gender)\ndf1\n\n# A tibble: 10 × 2\n   name    gender\n   &lt;chr&gt;   &lt;fct&gt; \n 1 Emily   F     \n 2 David   M     \n 3 Mark    M     \n 4 Ruth    F     \n 5 Sylvia  F     \n 6 Rebecca F     \n 7 Tom     M     \n 8 Gary    M     \n 9 Peter   M     \n10 Mary    F     \n\n\n\n# using filter with a name condition\nfilter(df1, name==\"Ruth\")\n\n# A tibble: 1 × 2\n  name  gender\n  &lt;chr&gt; &lt;fct&gt; \n1 Ruth  F     \n\n\n\n# use slice with pos found with grep\nslice(df1, grep(\"Ruth\", df1$name))\n\n# A tibble: 1 × 2\n  name  gender\n  &lt;chr&gt; &lt;fct&gt; \n1 Ruth  F     \n\n\n\n\n\n# grep gives pos\nname\n\n [1] \"Emily\"   \"David\"   \"Mark\"    \"Ruth\"    \"Sylvia\"  \"Rebecca\" \"Tom\"    \n [8] \"Gary\"    \"Peter\"   \"Mary\"   \n\nf &lt;- grep(\"[Ee]\",name)\nf\n\n[1] 1 6 9\n\nname[f]\n\n[1] \"Emily\"   \"Rebecca\" \"Peter\"  \n\n\n\n\n\n\n# grepl returns boolean\ng &lt;- grepl(\"[Ee]\",name)\ng\n\n [1]  TRUE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE\n\nsum(g)\n\n[1] 3\n\n# returns selected names\nname[f]\n\n[1] \"Emily\"   \"Rebecca\" \"Peter\""
  },
  {
    "objectID": "dataframes/wrangling/df-grep.html#find-position-of-item-in-a-vector.",
    "href": "dataframes/wrangling/df-grep.html#find-position-of-item-in-a-vector.",
    "title": "df-grep",
    "section": "",
    "text": "library(tidyverse)\nname = c(\"Emily\",\"David\",\"Mark\",\"Ruth\", \"Sylvia\", \"Rebecca\",\"Tom\",\"Gary\",\"Peter\",\"Mary\")\ngender = factor(c(\"F\",\"M\",\"M\",\"F\",\"F\",\"F\",\"M\",\"M\",\"M\",\"F\"))\n\ndf1 &lt;- tibble(name, gender)\ndf1\n\n# A tibble: 10 × 2\n   name    gender\n   &lt;chr&gt;   &lt;fct&gt; \n 1 Emily   F     \n 2 David   M     \n 3 Mark    M     \n 4 Ruth    F     \n 5 Sylvia  F     \n 6 Rebecca F     \n 7 Tom     M     \n 8 Gary    M     \n 9 Peter   M     \n10 Mary    F     \n\n\n\n# using filter with a name condition\nfilter(df1, name==\"Ruth\")\n\n# A tibble: 1 × 2\n  name  gender\n  &lt;chr&gt; &lt;fct&gt; \n1 Ruth  F     \n\n\n\n# use slice with pos found with grep\nslice(df1, grep(\"Ruth\", df1$name))\n\n# A tibble: 1 × 2\n  name  gender\n  &lt;chr&gt; &lt;fct&gt; \n1 Ruth  F     \n\n\n\n\n\n# grep gives pos\nname\n\n [1] \"Emily\"   \"David\"   \"Mark\"    \"Ruth\"    \"Sylvia\"  \"Rebecca\" \"Tom\"    \n [8] \"Gary\"    \"Peter\"   \"Mary\"   \n\nf &lt;- grep(\"[Ee]\",name)\nf\n\n[1] 1 6 9\n\nname[f]\n\n[1] \"Emily\"   \"Rebecca\" \"Peter\"  \n\n\n\n\n\n\n# grepl returns boolean\ng &lt;- grepl(\"[Ee]\",name)\ng\n\n [1]  TRUE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE\n\nsum(g)\n\n[1] 3\n\n# returns selected names\nname[f]\n\n[1] \"Emily\"   \"Rebecca\" \"Peter\""
  },
  {
    "objectID": "dataframes/wrangling/df-grep.html#search-for-a-term-on-a-dataframe",
    "href": "dataframes/wrangling/df-grep.html#search-for-a-term-on-a-dataframe",
    "title": "df-grep",
    "section": "2. Search for a term on a dataframe",
    "text": "2. Search for a term on a dataframe\n\nData: urls downloads\n\ndf &lt;- read.table(header=TRUE, text=\"\n  bookid url                 \n  242   http://some.edu.sg/isg/SASS/PSY352/ver1_3/PSY352_v1_3.epub\n  345   http://some.edu.sg/isg/SASS/PSY363/ver1_9_0/PSY363_v1_9_0.epub\n  456   http://some.edu.sg/isg_jutoh/epub/SHBS/PSY305_Study%2BGuide.epub\n  463   http://some.edu.sg/isg/SST/ICT133/ver1_0_0/ICT133_v1_0_0.epub\n  644   http://some.edu.sg/isg/SST/ICT114/ver1_1_0/ICT114_v1_1.epub\n  662   http://some.edu.sg/isg/SST/ICT114/ver1_1_0/ICT114_v1_1.epub\n  677   http://some.edu.sg/isg/SST/ICT133/ver1_0_0/ICT133_v1_0_0.epub\n  842   http://some.edu.sg/isg/NSHD/HRM357/ver1_6_0/HRM357_v1_6_0.epub\n  864   http://some.edu.sg/isg_jutoh/epub/NSHD/HRM261_Study%2BGuide.epub\n  954   http://some.edu.sg/isg_jutoh/epub/NSHD/HRM263_Study%2BGuide.epub\n\")\n\ndf\n\n   bookid                                                              url\n1     242       http://some.edu.sg/isg/SASS/PSY352/ver1_3/PSY352_v1_3.epub\n2     345   http://some.edu.sg/isg/SASS/PSY363/ver1_9_0/PSY363_v1_9_0.epub\n3     456 http://some.edu.sg/isg_jutoh/epub/SHBS/PSY305_Study%2BGuide.epub\n4     463    http://some.edu.sg/isg/SST/ICT133/ver1_0_0/ICT133_v1_0_0.epub\n5     644      http://some.edu.sg/isg/SST/ICT114/ver1_1_0/ICT114_v1_1.epub\n6     662      http://some.edu.sg/isg/SST/ICT114/ver1_1_0/ICT114_v1_1.epub\n7     677    http://some.edu.sg/isg/SST/ICT133/ver1_0_0/ICT133_v1_0_0.epub\n8     842   http://some.edu.sg/isg/NSHD/HRM357/ver1_6_0/HRM357_v1_6_0.epub\n9     864 http://some.edu.sg/isg_jutoh/epub/NSHD/HRM261_Study%2BGuide.epub\n10    954 http://some.edu.sg/isg_jutoh/epub/NSHD/HRM263_Study%2BGuide.epub\n\n\n\n\n\n\n\n\nQuestion:\n\n\n\nQ: Find all rows with item: isg_jutoh\n\n\n\n\n2a. using slice - grep for pos\n\ng2 &lt;- grep(\"isg_jutoh\",df$url)\ng2\n\n[1]  3  9 10\n\n# slice with pos\nslice(df, g2)\n\n  bookid                                                              url\n1    456 http://some.edu.sg/isg_jutoh/epub/SHBS/PSY305_Study%2BGuide.epub\n2    864 http://some.edu.sg/isg_jutoh/epub/NSHD/HRM261_Study%2BGuide.epub\n3    954 http://some.edu.sg/isg_jutoh/epub/NSHD/HRM263_Study%2BGuide.epub\n\n\n\n\n2b. using subset - grepl for boolean\n\ng3 &lt;- grepl(\"isg_jutoh\", df$url)\ng3\n\n [1] FALSE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE\n\n# subset for TRUE\ndf[g3,]\n\n   bookid                                                              url\n3     456 http://some.edu.sg/isg_jutoh/epub/SHBS/PSY305_Study%2BGuide.epub\n9     864 http://some.edu.sg/isg_jutoh/epub/NSHD/HRM261_Study%2BGuide.epub\n10    954 http://some.edu.sg/isg_jutoh/epub/NSHD/HRM263_Study%2BGuide.epub\n\n\n\nstr_subset(df$url,\"isg_jutoh\")\n\n[1] \"http://some.edu.sg/isg_jutoh/epub/SHBS/PSY305_Study%2BGuide.epub\"\n[2] \"http://some.edu.sg/isg_jutoh/epub/NSHD/HRM261_Study%2BGuide.epub\"\n[3] \"http://some.edu.sg/isg_jutoh/epub/NSHD/HRM263_Study%2BGuide.epub\""
  },
  {
    "objectID": "dataframes/mutate.html",
    "href": "dataframes/mutate.html",
    "title": "mutate",
    "section": "",
    "text": "library(tidyverse)\n\nID &lt;- str_c(\"SD\",101:110)\nTest1 &lt;- c(67,23,60,78,55,67,75,36,45,56)\nPractical &lt;- c(45,23,56,90,87,55,88,55,76,60)\nFinalExam &lt;- c(56,32,74,87,65,66,84,53,65,64)\ndf &lt;- data.frame(ID, Test1, Practical, FinalExam)\ndf\n\n      ID Test1 Practical FinalExam\n1  SD101    67        45        56\n2  SD102    23        23        32\n3  SD103    60        56        74\n4  SD104    78        90        87\n5  SD105    55        87        65\n6  SD106    67        55        66\n7  SD107    75        88        84\n8  SD108    36        55        53\n9  SD109    45        76        65\n10 SD110    56        60        64",
    "crumbs": [
      "DataFrames",
      "mutate"
    ]
  },
  {
    "objectID": "dataframes/mutate.html#dataset---marks",
    "href": "dataframes/mutate.html#dataset---marks",
    "title": "mutate",
    "section": "",
    "text": "library(tidyverse)\n\nID &lt;- str_c(\"SD\",101:110)\nTest1 &lt;- c(67,23,60,78,55,67,75,36,45,56)\nPractical &lt;- c(45,23,56,90,87,55,88,55,76,60)\nFinalExam &lt;- c(56,32,74,87,65,66,84,53,65,64)\ndf &lt;- data.frame(ID, Test1, Practical, FinalExam)\ndf\n\n      ID Test1 Practical FinalExam\n1  SD101    67        45        56\n2  SD102    23        23        32\n3  SD103    60        56        74\n4  SD104    78        90        87\n5  SD105    55        87        65\n6  SD106    67        55        66\n7  SD107    75        88        84\n8  SD108    36        55        53\n9  SD109    45        76        65\n10 SD110    56        60        64",
    "crumbs": [
      "DataFrames",
      "mutate"
    ]
  },
  {
    "objectID": "dataframes/mutate.html#add-new-calculated-column---mutate",
    "href": "dataframes/mutate.html#add-new-calculated-column---mutate",
    "title": "mutate",
    "section": "2 add new calculated column - mutate",
    "text": "2 add new calculated column - mutate\nThe new column is based on weighted average of: (Test1:20%, Practical:20% and FinalExam:60%).\n\ndf1 &lt;- mutate(df,\n              TotScore = 0.2*Test1+0.2*Practical+0.6*FinalExam)\ndf1\n\n      ID Test1 Practical FinalExam TotScore\n1  SD101    67        45        56     56.0\n2  SD102    23        23        32     28.4\n3  SD103    60        56        74     67.6\n4  SD104    78        90        87     85.8\n5  SD105    55        87        65     67.4\n6  SD106    67        55        66     64.0\n7  SD107    75        88        84     83.0\n8  SD108    36        55        53     50.0\n9  SD109    45        76        65     63.2\n10 SD110    56        60        64     61.6",
    "crumbs": [
      "DataFrames",
      "mutate"
    ]
  },
  {
    "objectID": "dataframes/textEntry.html",
    "href": "dataframes/textEntry.html",
    "title": "textEntry",
    "section": "",
    "text": "# strings indicated in quotes\n\ns = c(\"SBIZ\",\"NSHD\",\"SHBS\",\"SST\")\np = c(23,25,14,13)\ndf1 &lt;- data.frame(sch=s,pgm=p)\ndf1\n\n   sch pgm\n1 SBIZ  23\n2 NSHD  25\n3 SHBS  14\n4  SST  13\n\nstr(df1)\n\n'data.frame':   4 obs. of  2 variables:\n $ sch: chr  \"SBIZ\" \"NSHD\" \"SHBS\" \"SST\"\n $ pgm: num  23 25 14 13",
    "crumbs": [
      "DataFrames",
      "textEntry"
    ]
  },
  {
    "objectID": "dataframes/filterSelectArrange.html",
    "href": "dataframes/filterSelectArrange.html",
    "title": "df-FilterSelectArrange",
    "section": "",
    "text": "library(tidyverse)\n\nID &lt;- str_c(\"SD\",101:110)\nTest1 &lt;- c(67,23,60,78,55,67,75,36,45,56)\nPractical &lt;- c(45,23,56,90,87,55,88,55,76,60)\nFinalExam &lt;- c(56,32,74,87,65,66,84,43,65,64)\ndf &lt;- data.frame(ID, Test1, Practical, FinalExam)\ndf\n\n      ID Test1 Practical FinalExam\n1  SD101    67        45        56\n2  SD102    23        23        32\n3  SD103    60        56        74\n4  SD104    78        90        87\n5  SD105    55        87        65\n6  SD106    67        55        66\n7  SD107    75        88        84\n8  SD108    36        55        43\n9  SD109    45        76        65\n10 SD110    56        60        64",
    "crumbs": [
      "DataFrames",
      "filterSelectArrange"
    ]
  },
  {
    "objectID": "dataframes/filterSelectArrange.html#dataset",
    "href": "dataframes/filterSelectArrange.html#dataset",
    "title": "df-FilterSelectArrange",
    "section": "",
    "text": "library(tidyverse)\n\nID &lt;- str_c(\"SD\",101:110)\nTest1 &lt;- c(67,23,60,78,55,67,75,36,45,56)\nPractical &lt;- c(45,23,56,90,87,55,88,55,76,60)\nFinalExam &lt;- c(56,32,74,87,65,66,84,43,65,64)\ndf &lt;- data.frame(ID, Test1, Practical, FinalExam)\ndf\n\n      ID Test1 Practical FinalExam\n1  SD101    67        45        56\n2  SD102    23        23        32\n3  SD103    60        56        74\n4  SD104    78        90        87\n5  SD105    55        87        65\n6  SD106    67        55        66\n7  SD107    75        88        84\n8  SD108    36        55        43\n9  SD109    45        76        65\n10 SD110    56        60        64",
    "crumbs": [
      "DataFrames",
      "filterSelectArrange"
    ]
  },
  {
    "objectID": "dataframes/filterSelectArrange.html#choose-rows",
    "href": "dataframes/filterSelectArrange.html#choose-rows",
    "title": "df-FilterSelectArrange",
    "section": "2 Choose Rows",
    "text": "2 Choose Rows\n\n2.1 Choose Rows by row number - slice\n\nhead(df,3)\n\n     ID Test1 Practical FinalExam\n1 SD101    67        45        56\n2 SD102    23        23        32\n3 SD103    60        56        74\n\ntail(df,3)\n\n      ID Test1 Practical FinalExam\n8  SD108    36        55        43\n9  SD109    45        76        65\n10 SD110    56        60        64\n\nslice(df, 3:6)\n\n     ID Test1 Practical FinalExam\n1 SD103    60        56        74\n2 SD104    78        90        87\n3 SD105    55        87        65\n4 SD106    67        55        66\n\ndf[3:6,]\n\n     ID Test1 Practical FinalExam\n3 SD103    60        56        74\n4 SD104    78        90        87\n5 SD105    55        87        65\n6 SD106    67        55        66\n\n\n\n\n\n2.2 Choose Rows by Criteria - filter()\n\nfilter(df, FinalExam&lt;50)\n\n     ID Test1 Practical FinalExam\n1 SD102    23        23        32\n2 SD108    36        55        43",
    "crumbs": [
      "DataFrames",
      "filterSelectArrange"
    ]
  },
  {
    "objectID": "dataframes/filterSelectArrange.html#choose-columns---select",
    "href": "dataframes/filterSelectArrange.html#choose-columns---select",
    "title": "df-FilterSelectArrange",
    "section": "3 Choose Columns - select()",
    "text": "3 Choose Columns - select()\n\nnames(df)\n\n[1] \"ID\"        \"Test1\"     \"Practical\" \"FinalExam\"\n\nhead(df)\n\n     ID Test1 Practical FinalExam\n1 SD101    67        45        56\n2 SD102    23        23        32\n3 SD103    60        56        74\n4 SD104    78        90        87\n5 SD105    55        87        65\n6 SD106    67        55        66\n\ndf[,3:4]\n\n   Practical FinalExam\n1         45        56\n2         23        32\n3         56        74\n4         90        87\n5         87        65\n6         55        66\n7         88        84\n8         55        43\n9         76        65\n10        60        64\n\ndf %&gt;% select(\"Practical\",\"FinalExam\")\n\n   Practical FinalExam\n1         45        56\n2         23        32\n3         56        74\n4         90        87\n5         87        65\n6         55        66\n7         88        84\n8         55        43\n9         76        65\n10        60        64",
    "crumbs": [
      "DataFrames",
      "filterSelectArrange"
    ]
  },
  {
    "objectID": "dataframes/filterSelectArrange.html#sort-column---arrange",
    "href": "dataframes/filterSelectArrange.html#sort-column---arrange",
    "title": "df-FilterSelectArrange",
    "section": "4 Sort Column - arrange()",
    "text": "4 Sort Column - arrange()\n\narrange(df,desc(FinalExam))\n\n      ID Test1 Practical FinalExam\n1  SD104    78        90        87\n2  SD107    75        88        84\n3  SD103    60        56        74\n4  SD106    67        55        66\n5  SD105    55        87        65\n6  SD109    45        76        65\n7  SD110    56        60        64\n8  SD101    67        45        56\n9  SD108    36        55        43\n10 SD102    23        23        32\n\n\n\n# default for arrange is ascending\ndf %&gt;% \n  select(ID, FinalExam) %&gt;%\n  arrange(FinalExam)\n\n      ID FinalExam\n1  SD102        32\n2  SD108        43\n3  SD101        56\n4  SD110        64\n5  SD105        65\n6  SD109        65\n7  SD106        66\n8  SD103        74\n9  SD107        84\n10 SD104        87\n\n\n\n4.1 Extract Maximum Value of a Column\n\nwhen you pipe function parameter is not the first variable, use dot\n\n\ndf$FinalExam %&gt;%\n  max() %&gt;%\n  str_c(\"Max value = \", .)\n\n[1] \"Max value = 87\"",
    "crumbs": [
      "DataFrames",
      "filterSelectArrange"
    ]
  },
  {
    "objectID": "dataframes/wrangling/wrangling.html",
    "href": "dataframes/wrangling/wrangling.html",
    "title": "wrangling",
    "section": "",
    "text": "df-arrange-sort\nfct_inorder"
  },
  {
    "objectID": "dataframes/wrangling/wrangling.html#sort-or-arrange",
    "href": "dataframes/wrangling/wrangling.html#sort-or-arrange",
    "title": "wrangling",
    "section": "",
    "text": "df-arrange-sort\nfct_inorder"
  },
  {
    "objectID": "dataframes/wrangling/wrangling.html#search",
    "href": "dataframes/wrangling/wrangling.html#search",
    "title": "wrangling",
    "section": "Search",
    "text": "Search\n\ndf-grep\ndf-regex"
  },
  {
    "objectID": "dataframes/wrangling/wrangling.html#replace",
    "href": "dataframes/wrangling/wrangling.html#replace",
    "title": "wrangling",
    "section": "Replace",
    "text": "Replace"
  },
  {
    "objectID": "dataframes/wrangling/df-regex.html#data",
    "href": "dataframes/wrangling/df-regex.html#data",
    "title": "df-regex",
    "section": "1. Data",
    "text": "1. Data\n\n\n   bookid                                                              url\n1     242       http://some.edu.sg/isg/SASS/PSY352/ver1_3/PSY352_v1_3.epub\n2     345   http://some.edu.sg/isg/SASS/PSY363/ver1_9_0/PSY363_v1_9_0.epub\n3     456 http://some.edu.sg/isg_jutoh/epub/SHBS/PSY305_Study%2BGuide.epub\n4     463    http://some.edu.sg/isg/SST/ICT133/ver1_0_0/ICT133_v1_0_0.epub\n5     644      http://some.edu.sg/isg/SST/ICT114/ver1_1_0/ICT114_v1_1.epub\n6     662      http://some.edu.sg/isg/SST/ICT114/ver1_1_0/ICT114_v1_1.epub\n7     677    http://some.edu.sg/isg/SST/ICT133/ver1_0_0/ICT133_v1_0_0.epub\n8     842   http://some.edu.sg/isg/NSHD/HRM357/ver1_6_0/HRM357_v1_6_0.epub\n9     864 http://some.edu.sg/isg_jutoh/epub/NSHD/HRM261_Study%2BGuide.epub\n10    954 http://some.edu.sg/isg_jutoh/epub/NSHD/HRM263_Study%2BGuide.epub\n\n\n\n\n1. Basic Match\n\n\n1a. str_detect returns the boolean T if found\n\nlibrary(tidyverse)\ndf\n\n   bookid                                                              url\n1     242       http://some.edu.sg/isg/SASS/PSY352/ver1_3/PSY352_v1_3.epub\n2     345   http://some.edu.sg/isg/SASS/PSY363/ver1_9_0/PSY363_v1_9_0.epub\n3     456 http://some.edu.sg/isg_jutoh/epub/SHBS/PSY305_Study%2BGuide.epub\n4     463    http://some.edu.sg/isg/SST/ICT133/ver1_0_0/ICT133_v1_0_0.epub\n5     644      http://some.edu.sg/isg/SST/ICT114/ver1_1_0/ICT114_v1_1.epub\n6     662      http://some.edu.sg/isg/SST/ICT114/ver1_1_0/ICT114_v1_1.epub\n7     677    http://some.edu.sg/isg/SST/ICT133/ver1_0_0/ICT133_v1_0_0.epub\n8     842   http://some.edu.sg/isg/NSHD/HRM357/ver1_6_0/HRM357_v1_6_0.epub\n9     864 http://some.edu.sg/isg_jutoh/epub/NSHD/HRM261_Study%2BGuide.epub\n10    954 http://some.edu.sg/isg_jutoh/epub/NSHD/HRM263_Study%2BGuide.epub\n\n# detect returns boolean TRUE if found\n# regex: str_detect(df$url, regex(\"isg_jutoh\"))\n\nb &lt;- str_detect(df$url, \"isg_jutoh\")\nb\n\n [1] FALSE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE\n\n# returns the df based on match b to df\ndf[b,]\n\n   bookid                                                              url\n3     456 http://some.edu.sg/isg_jutoh/epub/SHBS/PSY305_Study%2BGuide.epub\n9     864 http://some.edu.sg/isg_jutoh/epub/NSHD/HRM261_Study%2BGuide.epub\n10    954 http://some.edu.sg/isg_jutoh/epub/NSHD/HRM263_Study%2BGuide.epub\n\n\n\n\n1b. str_which returns the search terms pos\n\nc &lt;- str_which(df$url, \"isg_jutoh\")\nc\n\n[1]  3  9 10\n\ndf[c,]\n\n   bookid                                                              url\n3     456 http://some.edu.sg/isg_jutoh/epub/SHBS/PSY305_Study%2BGuide.epub\n9     864 http://some.edu.sg/isg_jutoh/epub/NSHD/HRM261_Study%2BGuide.epub\n10    954 http://some.edu.sg/isg_jutoh/epub/NSHD/HRM263_Study%2BGuide.epub\n\nslice(df,c)\n\n  bookid                                                              url\n1    456 http://some.edu.sg/isg_jutoh/epub/SHBS/PSY305_Study%2BGuide.epub\n2    864 http://some.edu.sg/isg_jutoh/epub/NSHD/HRM261_Study%2BGuide.epub\n3    954 http://some.edu.sg/isg_jutoh/epub/NSHD/HRM263_Study%2BGuide.epub\n\n\n\n\n1c. str_subset returns the df with matching search term\n\ne &lt;- str_subset(df$url, \"isg_jutoh\")\ne\n\n[1] \"http://some.edu.sg/isg_jutoh/epub/SHBS/PSY305_Study%2BGuide.epub\"\n[2] \"http://some.edu.sg/isg_jutoh/epub/NSHD/HRM261_Study%2BGuide.epub\"\n[3] \"http://some.edu.sg/isg_jutoh/epub/NSHD/HRM263_Study%2BGuide.epub\"\n\nstr(e)\n\n chr [1:3] \"http://some.edu.sg/isg_jutoh/epub/SHBS/PSY305_Study%2BGuide.epub\" ...\n\ndf2 &lt;- data.frame(e)\ndf2\n\n                                                                 e\n1 http://some.edu.sg/isg_jutoh/epub/SHBS/PSY305_Study%2BGuide.epub\n2 http://some.edu.sg/isg_jutoh/epub/NSHD/HRM261_Study%2BGuide.epub\n3 http://some.edu.sg/isg_jutoh/epub/NSHD/HRM263_Study%2BGuide.epub"
  },
  {
    "objectID": "dataframes/wrangling/df-regex.html#replace",
    "href": "dataframes/wrangling/df-regex.html#replace",
    "title": "df-regex",
    "section": "2. Replace",
    "text": "2. Replace\n\ns1 &lt;- c(\"The quick brown fox jumps over the lazy dog\")\nstr_replace(s1, \"lazy\", \"dozy\")\n\n[1] \"The quick brown fox jumps over the dozy dog\"\n\n\n\n\n2a. str_subset to retrieve the matching rows\nReplacing an “errant” symbol (%) in text\n\n# find the symbol\nstr_subset(df$url,\"\\\\%\")\n\n[1] \"http://some.edu.sg/isg_jutoh/epub/SHBS/PSY305_Study%2BGuide.epub\"\n[2] \"http://some.edu.sg/isg_jutoh/epub/NSHD/HRM261_Study%2BGuide.epub\"\n[3] \"http://some.edu.sg/isg_jutoh/epub/NSHD/HRM263_Study%2BGuide.epub\"\n\n\n\n\n2b. Using regex\n\nstr_subset(df$url, regex(\"[%,+]\"))\n\n[1] \"http://some.edu.sg/isg_jutoh/epub/SHBS/PSY305_Study%2BGuide.epub\"\n[2] \"http://some.edu.sg/isg_jutoh/epub/NSHD/HRM261_Study%2BGuide.epub\"\n[3] \"http://some.edu.sg/isg_jutoh/epub/NSHD/HRM263_Study%2BGuide.epub\"\n\n\n\n\n2c. str_replace to replace the errant symbols\nReplacing “errant” symbol on original df\n\ndf\n\n   bookid                                                              url\n1     242       http://some.edu.sg/isg/SASS/PSY352/ver1_3/PSY352_v1_3.epub\n2     345   http://some.edu.sg/isg/SASS/PSY363/ver1_9_0/PSY363_v1_9_0.epub\n3     456 http://some.edu.sg/isg_jutoh/epub/SHBS/PSY305_Study%2BGuide.epub\n4     463    http://some.edu.sg/isg/SST/ICT133/ver1_0_0/ICT133_v1_0_0.epub\n5     644      http://some.edu.sg/isg/SST/ICT114/ver1_1_0/ICT114_v1_1.epub\n6     662      http://some.edu.sg/isg/SST/ICT114/ver1_1_0/ICT114_v1_1.epub\n7     677    http://some.edu.sg/isg/SST/ICT133/ver1_0_0/ICT133_v1_0_0.epub\n8     842   http://some.edu.sg/isg/NSHD/HRM357/ver1_6_0/HRM357_v1_6_0.epub\n9     864 http://some.edu.sg/isg_jutoh/epub/NSHD/HRM261_Study%2BGuide.epub\n10    954 http://some.edu.sg/isg_jutoh/epub/NSHD/HRM263_Study%2BGuide.epub\n\ndf$url &lt;- str_replace(df$url,\"\\\\%2B\",\"_\")\ndf\n\n   bookid                                                            url\n1     242     http://some.edu.sg/isg/SASS/PSY352/ver1_3/PSY352_v1_3.epub\n2     345 http://some.edu.sg/isg/SASS/PSY363/ver1_9_0/PSY363_v1_9_0.epub\n3     456 http://some.edu.sg/isg_jutoh/epub/SHBS/PSY305_Study_Guide.epub\n4     463  http://some.edu.sg/isg/SST/ICT133/ver1_0_0/ICT133_v1_0_0.epub\n5     644    http://some.edu.sg/isg/SST/ICT114/ver1_1_0/ICT114_v1_1.epub\n6     662    http://some.edu.sg/isg/SST/ICT114/ver1_1_0/ICT114_v1_1.epub\n7     677  http://some.edu.sg/isg/SST/ICT133/ver1_0_0/ICT133_v1_0_0.epub\n8     842 http://some.edu.sg/isg/NSHD/HRM357/ver1_6_0/HRM357_v1_6_0.epub\n9     864 http://some.edu.sg/isg_jutoh/epub/NSHD/HRM261_Study_Guide.epub\n10    954 http://some.edu.sg/isg_jutoh/epub/NSHD/HRM263_Study_Guide.epub"
  },
  {
    "objectID": "dataframes/importExport.html",
    "href": "dataframes/importExport.html",
    "title": "importExport",
    "section": "",
    "text": "(reads .csv file, readr does not have “read_xls”)\n\nlibrary(tidyverse)\nlibrary(here)\n# returns a tibble\ntb1 &lt;- read_csv(here(\"assets\",\"data.csv\"),col_names=FALSE)\nhead(tb1)\n\n# A tibble: 6 × 3\n     X1     X2    X3\n  &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;\n1     2   3400     0\n2     3   6200     0\n3     4  60000     0\n4     6 113000    50\n5     8 155000    50\n6    11 175000  6000",
    "crumbs": [
      "DataFrames",
      "importExport."
    ]
  },
  {
    "objectID": "dataframes/transform/transform.html",
    "href": "dataframes/transform/transform.html",
    "title": "transform",
    "section": "",
    "text": "Computations\n\ndata-mutate （new column)\ndata-cut (assign grades to marks)\ndata-count (count occurrences in an array)\n\n\n\nJoins\n\ndata-join (merging dataframes)"
  },
  {
    "objectID": "dataframes/transform/data-cut.html",
    "href": "dataframes/transform/data-cut.html",
    "title": "data-cut",
    "section": "",
    "text": "1. dataset - marks\n\nlibrary(tidyverse)\n\nID &lt;- str_c(\"SD\",101:110)\nTest1 &lt;- c(67,23,60,78,55,67,75,36,45,56)\nPractical &lt;- c(45,23,56,90,87,55,88,55,76,60)\nFinalExam &lt;- c(56,32,74,87,65,66,84,53,65,64)\nTotScore &lt;- 0.2*Test1+0.2*Practical+0.6*FinalExam\ndf &lt;- data.frame(ID, Test1, Practical, FinalExam, TotScore)\ndf\n\n      ID Test1 Practical FinalExam TotScore\n1  SD101    67        45        56     56.0\n2  SD102    23        23        32     28.4\n3  SD103    60        56        74     67.6\n4  SD104    78        90        87     85.8\n5  SD105    55        87        65     67.4\n6  SD106    67        55        66     64.0\n7  SD107    75        88        84     83.0\n8  SD108    36        55        53     50.0\n9  SD109    45        76        65     63.2\n10 SD110    56        60        64     61.6\n\n\n\n\n2. dataset - GradeTable\n\n\n\n\n\n\n\n3. Define the “cuts”\nlike a lookup table\n\ngletters &lt;- c(\"F\",\"D\",\"D+\",\"C\",\"C+\",\"B-\",\"B\",\"B+\",\"A-\",\"A\",\"A+\")\ncutScores &lt;- c(0,40,44,49,54,59,64,69,74,79,84,100)\n\nltrGrades &lt;- cut(df$TotScore, cutScores,right=TRUE, labels=gletters)\ndf$TotScore\n\n [1] 56.0 28.4 67.6 85.8 67.4 64.0 83.0 50.0 63.2 61.6\n\nltrGrades\n\n [1] C+ F  B  A+ B  B- A  C  B- B-\nLevels: F D D+ C C+ B- B B+ A- A A+\n\n\n\n\n4. Mutate ltrGrades to dataframe df\n\ndf&lt;-mutate(df,Grades=ltrGrades)\ndf\n\n      ID Test1 Practical FinalExam TotScore Grades\n1  SD101    67        45        56     56.0     C+\n2  SD102    23        23        32     28.4      F\n3  SD103    60        56        74     67.6      B\n4  SD104    78        90        87     85.8     A+\n5  SD105    55        87        65     67.4      B\n6  SD106    67        55        66     64.0     B-\n7  SD107    75        88        84     83.0      A\n8  SD108    36        55        53     50.0      C\n9  SD109    45        76        65     63.2     B-\n10 SD110    56        60        64     61.6     B-"
  },
  {
    "objectID": "dataframes/transform/pivot_longer.html",
    "href": "dataframes/transform/pivot_longer.html",
    "title": "df-data-pivot_longer",
    "section": "",
    "text": "library(tidyverse)\n\n\nExamples of pivot_longer\n\n\nData1 - students\n\nstudents &lt;- data.frame(\n  name = c(\"Alice\",\"Bob\",\"Charles\"),\n  math = c(90,85,92),\n  science = c(95,88,91),\n  history = c(87,92,78)\n)\nstudents\n\n     name math science history\n1   Alice   90      95      87\n2     Bob   85      88      92\n3 Charles   92      91      78\n\n\n\nstudents_long &lt;- students %&gt;%\n  pivot_longer(\n    !name,\n    names_to = \"subject\",\n    values_to = \"score\"\n)\nstudents_long\n\n# A tibble: 9 × 3\n  name    subject score\n  &lt;chr&gt;   &lt;chr&gt;   &lt;dbl&gt;\n1 Alice   math       90\n2 Alice   science    95\n3 Alice   history    87\n4 Bob     math       85\n5 Bob     science    88\n6 Bob     history    92\n7 Charles math       92\n8 Charles science    91\n9 Charles history    78\n\n\n\n\nData2 - iris\n\nhead(iris)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n\nirisA &lt;- iris[,c(5,1,2,3,4)]\nhead(irisA)\n\n  Species Sepal.Length Sepal.Width Petal.Length Petal.Width\n1  setosa          5.1         3.5          1.4         0.2\n2  setosa          4.9         3.0          1.4         0.2\n3  setosa          4.7         3.2          1.3         0.2\n4  setosa          4.6         3.1          1.5         0.2\n5  setosa          5.0         3.6          1.4         0.2\n6  setosa          5.4         3.9          1.7         0.4\n\n\n\niris_long &lt;- irisA %&gt;%\n  pivot_longer(\n    !Species,\n    names_to = \"Leaf\",\n    values_to = \"cm\"\n  )\nhead(iris_long)\n\n# A tibble: 6 × 3\n  Species Leaf            cm\n  &lt;fct&gt;   &lt;chr&gt;        &lt;dbl&gt;\n1 setosa  Sepal.Length   5.1\n2 setosa  Sepal.Width    3.5\n3 setosa  Petal.Length   1.4\n4 setosa  Petal.Width    0.2\n5 setosa  Sepal.Length   4.9\n6 setosa  Sepal.Width    3"
  },
  {
    "objectID": "datatypes/matrices.html",
    "href": "datatypes/matrices.html",
    "title": "Matrices",
    "section": "",
    "text": "# define rows and cols\n# default by cols\n\nM &lt;- matrix(c(1, 2, 3, 4, 5, 6), nrow=2, ncol=3,\n            dimnames = list(c(\"r1\",\"r2\"),\n                            c(\"c1\",\"c2\",\"c3\")))\nM\n\n   c1 c2 c3\nr1  1  3  5\nr2  2  4  6\n\nstr(M)\n\n num [1:2, 1:3] 1 2 3 4 5 6\n - attr(*, \"dimnames\")=List of 2\n  ..$ : chr [1:2] \"r1\" \"r2\"\n  ..$ : chr [1:3] \"c1\" \"c2\" \"c3\"\n\n\n\n# uses byrow=TRUE\nN &lt;- matrix(c(11:22), byrow=TRUE, ncol=4,\n            dimnames = list(c(\"R1\",\"R2\",\"R3\"),\n                            c(\"C1\",\"C2\",\"C3\",\"C4\")))\nN\n\n   C1 C2 C3 C4\nR1 11 12 13 14\nR2 15 16 17 18\nR3 19 20 21 22",
    "crumbs": [
      "Datatypes",
      "matrices"
    ]
  },
  {
    "objectID": "datatypes/matrices.html#vectors",
    "href": "datatypes/matrices.html#vectors",
    "title": "Matrices",
    "section": "",
    "text": "vec = c(1, 2, 3, 5)\nvec &lt;- vec + 1\nvec\n\n[1] 2 3 4 6\n\nstr(vec)\n\n num [1:4] 2 3 4 6",
    "crumbs": [
      "Datatypes",
      "matrices"
    ]
  },
  {
    "objectID": "datatypes/matrices.html#matrices",
    "href": "datatypes/matrices.html#matrices",
    "title": "Matrices",
    "section": "",
    "text": "M &lt;- matrix(c(1, 2, 3, 4, 5, 6), nrow=2, ncol=3,\n            dimnames = list(c(\"r1\",\"r2\"),\n                            c(\"c1\",\"c2\",\"c3\")))\nM\n\n   c1 c2 c3\nr1  1  3  5\nr2  2  4  6\n\nstr(M)\n\n num [1:2, 1:3] 1 2 3 4 5 6\n - attr(*, \"dimnames\")=List of 2\n  ..$ : chr [1:2] \"r1\" \"r2\"\n  ..$ : chr [1:3] \"c1\" \"c2\" \"c3\"\n\n# baseR\nt(M)\n\n   r1 r2\nc1  1  2\nc2  3  4\nc3  5  6",
    "crumbs": [
      "Datatypes",
      "matrices"
    ]
  },
  {
    "objectID": "datatypes/dates.html",
    "href": "datatypes/dates.html",
    "title": "Dates",
    "section": "",
    "text": "Before importing from Excel it is a good idea to custom-format in Excel the dates as yyyy-mm-dd (e.g. 2021-05-12). It will make things consistent and easier.\nuse here::here() to establish the working directory\nlibrary(lubridate) is part of tidyverse.\nUse str()to check if Dates are recognized correctly before filtering\n\n\nlibrary(tidyverse)\nlibrary(here)\ndf1 &lt;- read_csv(here::here(\"./assets/vaccines.csv\"))\ndf1\n\n# A tibble: 10 × 3\n   Date       OneDose TwoDose\n   &lt;date&gt;       &lt;dbl&gt;   &lt;dbl&gt;\n 1 2021-01-11    3400       0\n 2 2021-01-12    6200       0\n 3 2021-01-22   60000       0\n 4 2021-01-27  113000      50\n 5 2021-01-31  155000      50\n 6 2021-02-02  175000    6000\n 7 2021-02-10  250000    6000\n 8 2021-02-18  250000  110000\n 9 2021-03-01  317715  207324\n10 2021-03-04  350000  215000\n\n\n\n\n\nfilter(df1, Date&gt;=\"2021-02-02\" & Date &lt; \"2021-03-01\")\n\n# A tibble: 3 × 3\n  Date       OneDose TwoDose\n  &lt;date&gt;       &lt;dbl&gt;   &lt;dbl&gt;\n1 2021-02-02  175000    6000\n2 2021-02-10  250000    6000\n3 2021-02-18  250000  110000\n\n\n\nfilter(df1, Date &gt; \"2021-01-31\")\n\n# A tibble: 5 × 3\n  Date       OneDose TwoDose\n  &lt;date&gt;       &lt;dbl&gt;   &lt;dbl&gt;\n1 2021-02-02  175000    6000\n2 2021-02-10  250000    6000\n3 2021-02-18  250000  110000\n4 2021-03-01  317715  207324\n5 2021-03-04  350000  215000",
    "crumbs": [
      "Datatypes",
      "dates"
    ]
  },
  {
    "objectID": "datatypes/dates.html#filtering-with-dates",
    "href": "datatypes/dates.html#filtering-with-dates",
    "title": "Dates",
    "section": "",
    "text": "Before importing from Excel it is a good idea to custom-format in Excel the dates as yyyy-mm-dd (e.g. 2021-05-12). It will make things consistent and easier.\nuse here::here() to establish the working directory\nlibrary(lubridate) is part of tidyverse.\nUse str()to check if Dates are recognized correctly before filtering\n\n\nlibrary(tidyverse)\nlibrary(here)\ndf1 &lt;- read_csv(here::here(\"./assets/vaccines.csv\"))\ndf1\n\n# A tibble: 10 × 3\n   Date       OneDose TwoDose\n   &lt;date&gt;       &lt;dbl&gt;   &lt;dbl&gt;\n 1 2021-01-11    3400       0\n 2 2021-01-12    6200       0\n 3 2021-01-22   60000       0\n 4 2021-01-27  113000      50\n 5 2021-01-31  155000      50\n 6 2021-02-02  175000    6000\n 7 2021-02-10  250000    6000\n 8 2021-02-18  250000  110000\n 9 2021-03-01  317715  207324\n10 2021-03-04  350000  215000\n\n\n\n\n\nfilter(df1, Date&gt;=\"2021-02-02\" & Date &lt; \"2021-03-01\")\n\n# A tibble: 3 × 3\n  Date       OneDose TwoDose\n  &lt;date&gt;       &lt;dbl&gt;   &lt;dbl&gt;\n1 2021-02-02  175000    6000\n2 2021-02-10  250000    6000\n3 2021-02-18  250000  110000\n\n\n\nfilter(df1, Date &gt; \"2021-01-31\")\n\n# A tibble: 5 × 3\n  Date       OneDose TwoDose\n  &lt;date&gt;       &lt;dbl&gt;   &lt;dbl&gt;\n1 2021-02-02  175000    6000\n2 2021-02-10  250000    6000\n3 2021-02-18  250000  110000\n4 2021-03-01  317715  207324\n5 2021-03-04  350000  215000",
    "crumbs": [
      "Datatypes",
      "dates"
    ]
  },
  {
    "objectID": "datatypes/dates.html#calculating-age-from-dates",
    "href": "datatypes/dates.html#calculating-age-from-dates",
    "title": "Dates",
    "section": "2 Calculating age from Dates",
    "text": "2 Calculating age from Dates\n\nlibrary(tidyverse)\nlibrary(eeptools)\ndf2 &lt;- read_csv(\"name, dob\n                CUMBERBATCH Benedict, 1976-07-19\n                FOX Megan, 1986-05-16\n                HANKS Tom, 1956-07-09\n                SANDLER Adam, 1966-09-09\n                SMITH Will, 1968-09-25\n                STONE Emma, 1988-11-06\")\ndf3 &lt;- arrange(df2, -desc(dob))\ndf4 &lt;- df3 %&gt;% \n         mutate(age=age_calc(dob, units=\"years\")) %&gt;%\n         mutate(mth=month(dob))\ndf4$mth &lt;- month.abb[df4$mth]\ndf4\n\n# A tibble: 6 × 4\n  name                 dob          age mth  \n  &lt;chr&gt;                &lt;date&gt;     &lt;dbl&gt; &lt;chr&gt;\n1 HANKS Tom            1956-07-09  68.6 Jul  \n2 SANDLER Adam         1966-09-09  58.4 Sep  \n3 SMITH Will           1968-09-25  56.4 Sep  \n4 CUMBERBATCH Benedict 1976-07-19  48.6 Jul  \n5 FOX Megan            1986-05-16  38.7 May  \n6 STONE Emma           1988-11-06  36.3 Nov",
    "crumbs": [
      "Datatypes",
      "dates"
    ]
  },
  {
    "objectID": "datatypes/factors.html",
    "href": "datatypes/factors.html",
    "title": "Factors",
    "section": "",
    "text": "library(tidyverse)",
    "crumbs": [
      "Datatypes",
      "factors"
    ]
  },
  {
    "objectID": "datatypes/factors.html#ordering-of-factors",
    "href": "datatypes/factors.html#ordering-of-factors",
    "title": "Factors",
    "section": "3 Ordering of factors",
    "text": "3 Ordering of factors\n\n3.1 tidyverse:: as_factor is better\n\n3.1.1 (default to alphabetical)\n\n# factor levels normally arranged alphabetically\nbloodtypes &lt;- c(\"O\",\"A\",\"B\",\"AB\")\nb1 &lt;- factor(bloodtypes)\nlevels(b1)\n\n[1] \"A\"  \"AB\" \"B\"  \"O\" \n\nb2 &lt;- as.factor(bloodtypes)\nlevels(b2)\n\n[1] \"A\"  \"AB\" \"B\"  \"O\" \n\n\n\nthe Levels default to an alphabetical sequence, but\nif I want to list factors Levels by the order in which they first appear\n\nyou can define levels explicitly with factor() ’\nyou can use as_factor from tidyverse which will retain the order\n\nhence, good idea to use as_factor\n\n\n\n3.1.2 (specify factor order)\n\n# method 1\n# specified levels\nbt1 &lt;- factor(bloodtypes,\n          levels=c(\"O\",\"A\",\"B\",\"AB\"))\nlevels(bt1)\n\n[1] \"O\"  \"A\"  \"B\"  \"AB\"\n\n# method 2\n# using as_factor (instead of as.factor from baseR) \n# will retain the original factor order.\n# better than using relevel or fct_reorder\nbt2 &lt;- as_factor(bloodtypes)\nlevels(bt2)\n\n[1] \"O\"  \"A\"  \"B\"  \"AB\"",
    "crumbs": [
      "Datatypes",
      "factors"
    ]
  },
  {
    "objectID": "datatypes/factors.html#renaming-factors",
    "href": "datatypes/factors.html#renaming-factors",
    "title": "Factors",
    "section": "5 Renaming Factors",
    "text": "5 Renaming Factors\n\ntb3&lt;-read_csv(\"\nDept, Views\nNational Cancer Center, 683\nNational Heart Center Singapore, 697\nNational Eye Center, 534\n\")\ntb3$Dept &lt;- as_factor(tb3$Dept)   # retains order\nlevels(tb3$Dept)\n\n[1] \"National Cancer Center\"          \"National Heart Center Singapore\"\n[3] \"National Eye Center\"            \n\n\n\ntb3$Dept &lt;- fct_recode(tb3$Dept,\n           NCC=\"National Cancer Center\",\n           NHCS = \"National Heart Center Singapore\",\n           NEC = \"National Eye Center\")\nlevels(tb3$Dept)\n\n[1] \"NCC\"  \"NHCS\" \"NEC\" \n\ntb3\n\n# A tibble: 3 × 2\n  Dept  Views\n  &lt;fct&gt; &lt;dbl&gt;\n1 NCC     683\n2 NHCS    697\n3 NEC     534",
    "crumbs": [
      "Datatypes",
      "factors"
    ]
  },
  {
    "objectID": "datatypes/tables.html",
    "href": "datatypes/tables.html",
    "title": "tables-frequency",
    "section": "",
    "text": "library(tidyverse)\n# fct_inorder is in tidyverse\nid&lt;- str_c(\"SD\",101:110,sep=\"\")\nltrgrades &lt;- c(\"C+\",\"F\",\"B\",\"A+\",\"B\",\"B-\",\"A\",\"C\",\"B-\",\"B-\")\ngdlevels &lt;- fct_inorder(c(\"A+\",\"A\",\"A-\",\"B+\",\"B\",\"B-\",\"C+\",\"C\",\"D+\",\"D\",\"F\"))\ngender &lt;- factor(c(\"M\",\"F\",\"F\",\"F\",\"M\",\"F\",\"M\",\"M\",\"M\",\"M\"))\n\nlgrades &lt;- factor(ltrgrades, levels=gdlevels)\ntb &lt;- tibble(id,gender, lgrades)\ntb\n\n# A tibble: 10 × 3\n   id    gender lgrades\n   &lt;chr&gt; &lt;fct&gt;  &lt;fct&gt;  \n 1 SD101 M      C+     \n 2 SD102 F      F      \n 3 SD103 F      B      \n 4 SD104 F      A+     \n 5 SD105 M      B      \n 6 SD106 F      B-     \n 7 SD107 M      A      \n 8 SD108 M      C      \n 9 SD109 M      B-     \n10 SD110 M      B-     \n\n\n\n1. Frequency table (also called a contingency table)\n\n# use table function to count frequency in lgrades\ntab1 &lt;- table(tb$lgrades) \ntab1\n\n\nA+  A A- B+  B B- C+  C D+  D  F \n 1  1  0  0  2  3  1  1  0  0  1 \n\n\n\n# redo table back into a dataframe\ndf2 &lt;- data.frame(tab1)\nnames(df2) &lt;- c(\"grades\",\"freq\")\ndf2\n\n   grades freq\n1      A+    1\n2       A    1\n3      A-    0\n4      B+    0\n5       B    2\n6      B-    3\n7      C+    1\n8       C    1\n9      D+    0\n10      D    0\n11      F    1\n\n\n\n\n2. Two-way Contingency table (gender-grades)\n\ntwoWay &lt;- table(tb$gender,tb$lgrades)\ntwoWay\n\n   \n    A+ A A- B+ B B- C+ C D+ D F\n  F  1 0  0  0 1  1  0 0  0 0 1\n  M  0 1  0  0 1  2  1 1  0 0 0\n\n\n\n\n3. Look up - filter\nfind those that have B-\n\nfilter(tb,lgrades==\"B-\")\n\n# A tibble: 3 × 3\n  id    gender lgrades\n  &lt;chr&gt; &lt;fct&gt;  &lt;fct&gt;  \n1 SD106 F      B-     \n2 SD109 M      B-     \n3 SD110 M      B-",
    "crumbs": [
      "Datatypes",
      "tables"
    ]
  },
  {
    "objectID": "datasets/penguins/penguins.html#penguins-dataset",
    "href": "datasets/penguins/penguins.html#penguins-dataset",
    "title": "Penguins",
    "section": "Penguins Dataset",
    "text": "Penguins Dataset\n\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n\n\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           &lt;fct&gt; Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            &lt;fct&gt; Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm &lt;int&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       &lt;int&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               &lt;fct&gt; male, female, female, NA, female, male, female, male…\n$ year              &lt;int&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\n\nDrop Missing or `na.omit()`\n\npenguins &lt;- na.omit(penguins)\n\n\n\nScatterplot\n\nggplot(penguins, aes(x=flipper_length_mm, y=body_mass_g, color=species))+\n  geom_point()+\n  geom_smooth(method=\"lm\",se=FALSE)+\n  ggtitle(\"Body Mass (gm) of penguins\")\n\n\n\n\n\n\n\n\n\n\n\n\nBox Plots\n\nggplot(penguins, aes(x=species, y=body_mass_g,color=species))+\n  geom_boxplot()+\n  ggtitle(\"Body mass of penguins\")\n\n\n\n\n\n\n\n\n\n\nDensity Plots\n\nlibrary(ggridges)\nggplot(penguins, aes(x=body_mass_g, y=species,fill=species))+\n  geom_density_ridges()+\n  theme_bw()",
    "crumbs": [
      "DataSets",
      "penguins"
    ]
  },
  {
    "objectID": "datasets/trees/yaml-Sample.html",
    "href": "datasets/trees/yaml-Sample.html",
    "title": "Sample Templates",
    "section": "",
    "text": "---\n\ntitle: \"yaml-Sample\"\nwarning: FALSE\nformat: \n  pdf:\n    papersize: B5\n    \n---"
  },
  {
    "objectID": "datasets/trees/yaml-Sample.html#yaml-sample",
    "href": "datasets/trees/yaml-Sample.html#yaml-sample",
    "title": "Sample Templates",
    "section": "",
    "text": "---\n\ntitle: \"yaml-Sample\"\nwarning: FALSE\nformat: \n  pdf:\n    papersize: B5\n    \n---"
  },
  {
    "objectID": "datasets/trees/yaml-Sample.html#r-sample",
    "href": "datasets/trees/yaml-Sample.html#r-sample",
    "title": "Sample Templates",
    "section": "R-Sample",
    "text": "R-Sample\n\necho and warning off when loading a library\n---{r}\n\n#| echo: FALSE\n#| warning: FALSE\nlibrary(tidyverse)\n\n---"
  },
  {
    "objectID": "datasets/iris/iris.html",
    "href": "datasets/iris/iris.html",
    "title": "Iris",
    "section": "",
    "text": "iris-image",
    "crumbs": [
      "DataSets",
      "iris"
    ]
  },
  {
    "objectID": "datasets/iris/iris.html#plot-sepal-and-petal-measurements-for-the-3-species",
    "href": "datasets/iris/iris.html#plot-sepal-and-petal-measurements-for-the-3-species",
    "title": "Iris",
    "section": "Plot Sepal and Petal measurements for the 3 species",
    "text": "Plot Sepal and Petal measurements for the 3 species\n\ns1 &lt;- ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width,color=Species))+\n        geom_point(show.legend=FALSE)+\n        xlim(0,10)+\n        ylim(0,5.0)\np1 &lt;- ggplot(iris, aes(x=Petal.Length, y=Petal.Width,color=Species))+\n        geom_point()\n\nlibrary(patchwork)\n  s1 + p1 +\n    theme(legend.position=\"bottom\")",
    "crumbs": [
      "DataSets",
      "iris"
    ]
  },
  {
    "objectID": "datasets/iris/iris.html#boxplot-of-the-petal.length-and-petal.width-across-species",
    "href": "datasets/iris/iris.html#boxplot-of-the-petal.length-and-petal.width-across-species",
    "title": "Iris",
    "section": "Boxplot of the Petal.Length and Petal.Width across Species",
    "text": "Boxplot of the Petal.Length and Petal.Width across Species\n\npl &lt;- ggplot(iris, aes(x=Species,y=Petal.Length, color=Species))+\n        geom_boxplot(show.legend=FALSE)+\n        theme_bw()+\n        ylim(0,8)\npw &lt;- ggplot(iris, aes(x=Species,y=Petal.Width, color=Species))+\n        geom_boxplot(show.legend=FALSE)+\n        theme_bw()+\n        ylim(0,8)\n\npl+pw",
    "crumbs": [
      "DataSets",
      "iris"
    ]
  },
  {
    "objectID": "datasets/iris/iris.html#pairwise-comparisons",
    "href": "datasets/iris/iris.html#pairwise-comparisons",
    "title": "Iris",
    "section": "Pairwise Comparisons",
    "text": "Pairwise Comparisons\n\niris &lt;- iris[sample(1:nrow(iris)),]\nplot(iris, col = iris$Species)\n\n\n\n\n\n\n\n\n\n\nsummary(iris)\n\n  Sepal.Length    Sepal.Width     Petal.Length    Petal.Width   \n Min.   :4.300   Min.   :2.000   Min.   :1.000   Min.   :0.100  \n 1st Qu.:5.100   1st Qu.:2.800   1st Qu.:1.600   1st Qu.:0.300  \n Median :5.800   Median :3.000   Median :4.350   Median :1.300  \n Mean   :5.843   Mean   :3.057   Mean   :3.758   Mean   :1.199  \n 3rd Qu.:6.400   3rd Qu.:3.300   3rd Qu.:5.100   3rd Qu.:1.800  \n Max.   :7.900   Max.   :4.400   Max.   :6.900   Max.   :2.500  \n       Species  \n setosa    :50  \n versicolor:50  \n virginica :50",
    "crumbs": [
      "DataSets",
      "iris"
    ]
  },
  {
    "objectID": "datasets/iris/iris.html#ggridges-for-density-plots",
    "href": "datasets/iris/iris.html#ggridges-for-density-plots",
    "title": "Iris",
    "section": "ggRidges for density plots",
    "text": "ggRidges for density plots\n\nlibrary(ggridges)\n\n\nggplot(iris, aes(x=Petal.Length, y=Species,fill=Species))+\n  geom_density_ridges()+\n  xlim(0,8)+\n  theme_bw()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvline for median\n\n\n\ngeom_density_ridges(quantile_lines=TRUE,quantile=2)\n\n\n\n\n\n\nor just use geom_density()\n\nirisvi &lt;- filter(iris, Species == \"virginica\")\nirisse &lt;- filter(iris, Species == 'setosa')\n\ndvi &lt;- ggplot(irisvi,aes(Sepal.Length))+\n  geom_density(fill=\"lightblue\")+\n  theme_bw()\ndse &lt;- ggplot(irisse,aes(Sepal.Length))+\n  geom_density(fill='pink')+\n  theme_bw()\ndvi+dse",
    "crumbs": [
      "DataSets",
      "iris"
    ]
  },
  {
    "objectID": "datasets/iris/iris.html#regression-for-speciesversicolor",
    "href": "datasets/iris/iris.html#regression-for-speciesversicolor",
    "title": "Iris",
    "section": "Regression for Species=Versicolor",
    "text": "Regression for Species=Versicolor\n\nirisV &lt;- filter(iris, Species==\"versicolor\")\nhead(irisV)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width    Species\n1          5.5         2.3          4.0         1.3 versicolor\n2          5.8         2.7          3.9         1.2 versicolor\n3          5.6         2.9          3.6         1.3 versicolor\n4          5.6         2.7          4.2         1.3 versicolor\n5          5.1         2.5          3.0         1.1 versicolor\n6          6.3         2.3          4.4         1.3 versicolor",
    "crumbs": [
      "DataSets",
      "iris"
    ]
  },
  {
    "objectID": "datasets/iris/iris.html#regressionplot-for-versicolor",
    "href": "datasets/iris/iris.html#regressionplot-for-versicolor",
    "title": "Iris",
    "section": "RegressionPlot for versicolor",
    "text": "RegressionPlot for versicolor\n\nggplot(irisV, aes(x=Sepal.Width, y=Sepal.Length))+\n  geom_point(color=\"brown\")+\n  geom_smooth(method=\"lm\",se=FALSE)+\n  ggtitle(\"Simple Regression\")\n\n`geom_smooth()` using formula = 'y ~ x'",
    "crumbs": [
      "DataSets",
      "iris"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "workflow.html",
    "href": "workflow.html",
    "title": "workflow",
    "section": "",
    "text": "this workflow.qmd file is part of WebR but,\nit is not in_quarto.yml so it does not appear on WebR"
  },
  {
    "objectID": "workflow.html#editing-qmd-and-save-as-html",
    "href": "workflow.html#editing-qmd-and-save-as-html",
    "title": "workflow",
    "section": "",
    "text": "this workflow.qmd file is part of WebR but,\nit is not in_quarto.yml so it does not appear on WebR"
  },
  {
    "objectID": "workflow.html#github-desktop",
    "href": "workflow.html#github-desktop",
    "title": "workflow",
    "section": "2 Github Desktop",
    "text": "2 Github Desktop\n\nlocal github desktop repository linked to internet github repo via ykwongsuss.github.io\nonce editing on RStudio is done, the html goes to folder: webR/_site.\nThe _site is rsync to github desktop: ykwongsuss.github.io\nin terminal&gt; ./rsyncg.sh # shell command or in full\nrsync -ahP ~/quartoWeb/WebR/_site/ ~/Documents/Github/ykwongsuss.github.io 2&gt; ~/quartoWeb/WebR/rSyncErrors.txt\nchanges to local repo will be reflected in github desktop\nwrite a compulsory summary entry (usually date) and commit to main on github.\ncheck webR on github URL: ykwongsuss.github.io"
  },
  {
    "objectID": "ggplots/regression.html",
    "href": "ggplots/regression.html",
    "title": "ggplot-Regression",
    "section": "",
    "text": "Regression with ggplot\n\n\n\n\ngeom_smooth\nse=FALSE\nlm(Y~X)",
    "crumbs": [
      "ggPlots",
      "regression"
    ]
  },
  {
    "objectID": "ggplots/regression.html#data",
    "href": "ggplots/regression.html#data",
    "title": "ggplot-Regression",
    "section": "1 Data",
    "text": "1 Data\n\nweight &lt;- c(6.2,7.2,7.6,8.3,8.6,9.2,9.5,10.0,10.4,10.6,11.1,\n            6.9,7.6,8.4,8.8,9.3,9.6,10.1,10.5,10.8,11.4,11.7)\nage &lt;- c(4,6,8,10,12,14,16,18,20,22,24,\n         4,6,8,10,12,14,16,18,20,22,24)\nsex &lt;- c('F','F','F','F','F','F','F','F','F','F','F',\n         'M','M','M','M','M','M','M','M','M','M','M')\ndf &lt;- data.frame(weight,age,sex)\nstr(df)\n\n'data.frame':   22 obs. of  3 variables:\n $ weight: num  6.2 7.2 7.6 8.3 8.6 9.2 9.5 10 10.4 10.6 ...\n $ age   : num  4 6 8 10 12 14 16 18 20 22 ...\n $ sex   : chr  \"F\" \"F\" \"F\" \"F\" ...",
    "crumbs": [
      "ggPlots",
      "regression"
    ]
  },
  {
    "objectID": "ggplots/regression.html#sorted-scatterplot-by-sex",
    "href": "ggplots/regression.html#sorted-scatterplot-by-sex",
    "title": "ggplot-Regression",
    "section": "2 Sorted Scatterplot by sex",
    "text": "2 Sorted Scatterplot by sex\n\ndf1 &lt;- arrange(df,-desc(age))\nggplot(df1, aes(x=age, y=weight,col=sex))+\n  geom_point()",
    "crumbs": [
      "ggPlots",
      "regression"
    ]
  },
  {
    "objectID": "ggplots/regression.html#regression-on-male-data",
    "href": "ggplots/regression.html#regression-on-male-data",
    "title": "ggplot-Regression",
    "section": "3 Regression on male data",
    "text": "3 Regression on male data\n\ndf2 &lt;- df1 %&gt;%\n         filter(sex=='M')\nggplot(df2,aes(x=age,y=weight))+\n  xlim(2,24)+\n  geom_point()+\n  geom_smooth(method=\"lm\")+\n  labs(\n   title=\"Weight for Males\"\n  )\n\n\n\n\n\n\n\nmodel &lt;- lm(weight~age, data=df2)\nsummary(model)\n\n\nCall:\nlm(formula = weight ~ age, data = df2)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.35455 -0.12455  0.02545  0.12545  0.22545 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 6.334545   0.136201   46.51 4.92e-12 ***\nage         0.230000   0.008866   25.94 9.06e-10 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.186 on 9 degrees of freedom\nMultiple R-squared:  0.9868,    Adjusted R-squared:  0.9853 \nF-statistic:   673 on 1 and 9 DF,  p-value: 9.062e-10",
    "crumbs": [
      "ggPlots",
      "regression"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "References\n\nIsmay, C., and A. Y. Kim. 2019. Statistical Inference via Data Science: A ModernDive into r and the Tidyverse. https://doi.org/10.1201/9780367409913: Chapman; Hall/CRC.\n\n\nKuhn, Max, and Julia Silge. 2022. Tidy Modeling with r. \" O’Reilly Media, Inc.\".\n\n\nWickham, Hadley, Mine Çetinkaya-Rundel, and Garrett Grolemund. 2023. R for Data Science. 2nd ed. \" O’Reilly Media, Inc.\".",
    "crumbs": [
      "References"
    ]
  },
  {
    "objectID": "datatypes.html",
    "href": "datatypes.html",
    "title": "datatypes",
    "section": "",
    "text": "numbers\nstrings\nfactors\ndates\nlists\nmatrices\ntables",
    "crumbs": [
      "Datatypes"
    ]
  },
  {
    "objectID": "housekeeping.html",
    "href": "housekeeping.html",
    "title": "workflow",
    "section": "",
    "text": "edit QuartoWeb/WebR on RStudio qmd\nopen with Project file: WebR.Rproj\nupdated html files is found in folder: WebR/_site"
  },
  {
    "objectID": "housekeeping.html#editing-qmd-and-save-as-html",
    "href": "housekeeping.html#editing-qmd-and-save-as-html",
    "title": "workflow",
    "section": "",
    "text": "edit QuartoWeb/WebR on RStudio qmd\nopen with Project file: WebR.Rproj\nupdated html files is found in folder: WebR/_site"
  },
  {
    "objectID": "housekeeping.html#github-desktop",
    "href": "housekeeping.html#github-desktop",
    "title": "workflow",
    "section": "2 Github Desktop",
    "text": "2 Github Desktop\n\nlocal github desktop repository linked to internet github repo via ykwongsuss.github.io\nonce editing on RStudio is done, the html goes to folder: webR/_site.\nThe _site is rsync to ykwong/Documents/Github/ykwongsuss.github.io\nin terminal: rsync -ahP ~/quartoWeb/WebR/_site/ ~/Documents/Github/ykwongsuss.github.io 2&gt; ~/quartoWeb/WebR/rSyncErrors.txt\nchanges to local repo will be reflected in github desktop\nwrite a compulsory summary entry (usually date) and commit to main on github.\ncheck webR on github URL: ykwongsuss.github.io"
  },
  {
    "objectID": "yaml.html#chapter-yaml-for-each-qmd-file.",
    "href": "yaml.html#chapter-yaml-for-each-qmd-file.",
    "title": "yaml",
    "section": "",
    "text": "---\ntitle: \"yaml\"\nformat: html\neditor: visual\nwarning: FALSE\nnumber-sections: true\n---",
    "crumbs": [
      "Preface",
      "yaml"
    ]
  },
  {
    "objectID": "yaml.html#navigation-sidebar-config-in-_quarto.yml",
    "href": "yaml.html#navigation-sidebar-config-in-_quarto.yml",
    "title": "YAML",
    "section": "2 Navigation sidebar config in _quarto.yml",
    "text": "2 Navigation sidebar config in _quarto.yml\n---\nproject:\n  type: website\n\nwebsite:\n  title: \"WebR\"\n  page-navigation: true\n  sidebar:\n    search: true\n    contents:\n      - text: Introduction \n        href: index.qmd\n          contents: \n            - text: YAML\n              href: yaml.qmd\n            - text: Workflow\n              href: workflow.qmd\n     - section: \"Datatypes\"\n       href: datatypes.qmd\n         contents:\n          - text: numbers\n            href: datatypes/numbers.qmd\n          - text: strings\n            href: datatypes/strings.qmd\n...\n---",
    "crumbs": [
      "Preface",
      "YAML"
    ]
  },
  {
    "objectID": "yaml.html#navigation-sidebar-in-_quarto.yml",
    "href": "yaml.html#navigation-sidebar-in-_quarto.yml",
    "title": "yaml",
    "section": "6 Navigation sidebar in _quarto.yml",
    "text": "6 Navigation sidebar in _quarto.yml\n---\nproject:\n  type: website\n\nwebsite:\n  title: \"WebR\"\n  page-navigation: true\n  sidebar:\n    search: true\n    contents:\n      - section: Preface \n        href: index.qmd\n          contents: \n            - text: YAML\n              href: yaml.qmd\n     - section: Datatypes\n       href: datatypes.qmd\n         contents:\n          - text: numbers\n            href: datatypes/numbers.qmd\n          - text: strings\n            href: datatypes/strings.qmd\n...\n---",
    "crumbs": [
      "Preface",
      "yaml"
    ]
  },
  {
    "objectID": "dataframes/textEntry.html#using-baserdata.frame",
    "href": "dataframes/textEntry.html#using-baserdata.frame",
    "title": "textEntry",
    "section": "",
    "text": "# strings indicated in quotes\n\ns = c(\"SBIZ\",\"NSHD\",\"SHBS\",\"SST\")\np = c(23,25,14,13)\ndf1 &lt;- data.frame(sch=s,pgm=p)\ndf1\n\n   sch pgm\n1 SBIZ  23\n2 NSHD  25\n3 SHBS  14\n4  SST  13\n\nstr(df1)\n\n'data.frame':   4 obs. of  2 variables:\n $ sch: chr  \"SBIZ\" \"NSHD\" \"SHBS\" \"SST\"\n $ pgm: num  23 25 14 13",
    "crumbs": [
      "DataFrames",
      "textEntry"
    ]
  },
  {
    "objectID": "dataframes/textEntry.html#using-baserread.table",
    "href": "dataframes/textEntry.html#using-baserread.table",
    "title": "textEntry",
    "section": "2 Using BaseR::read.table",
    "text": "2 Using BaseR::read.table\n\n# note that parameters include `header=` and `text=`\n# and so don't need quotes. \n\ndf&lt;-read.table(header = TRUE, text = \"\nsch pgms\nSBIZ 23\nNSHD 25\nSHBS 14\nSST 13\n\")\ndf\n\n   sch pgms\n1 SBIZ   23\n2 NSHD   25\n3 SHBS   14\n4  SST   13\n\nstr(df)\n\n'data.frame':   4 obs. of  2 variables:\n $ sch : chr  \"SBIZ\" \"NSHD\" \"SHBS\" \"SST\"\n $ pgms: int  23 25 14 13",
    "crumbs": [
      "DataFrames",
      "textEntry"
    ]
  },
  {
    "objectID": "dataframes/textEntry.html#using-tidyversetibble",
    "href": "dataframes/textEntry.html#using-tidyversetibble",
    "title": "textEntry",
    "section": "3 Using tidyverse::tibble()",
    "text": "3 Using tidyverse::tibble()\n\nlibrary(tidyverse)\n# quotes required\n\ntb1 &lt;- tibble(\nsch = c(\"SBIZ\",\"NSHD\",\"SHBS\",\"SST\"),\npgms = c(23,25,14,13)  \n)\ntb1\n\n# A tibble: 4 × 2\n  sch    pgms\n  &lt;chr&gt; &lt;dbl&gt;\n1 SBIZ     23\n2 NSHD     25\n3 SHBS     14\n4 SST      13\n\n\n\n3.1 4a. using tribble() - a transposed tibble\n\ntb2&lt;-tribble(\n  ~sch, ~pgms,\n  \"SBIZ\", 23,\n  \"NSHD\", 25,\n  \"SHBS\", 14,\n  \"SST\", 13\n)\ntb2\n\n# A tibble: 4 × 2\n  sch    pgms\n  &lt;chr&gt; &lt;dbl&gt;\n1 SBIZ     23\n2 NSHD     25\n3 SHBS     14\n4 SST      13\n\n\n\n\n3.2 4b. tribble() with dates\n\ntb3 &lt;- tribble (\n  ~date, ~weight,\n  \"2020-02-22\", 13,\n  \"2021-03-02\", 15,\n  \"2022-04-11\", 18,\n  \"2023-03-10\", 23\n)\ntb3$date &lt;- as.Date(tb3$date)\ntb3\n\n# A tibble: 4 × 2\n  date       weight\n  &lt;date&gt;      &lt;dbl&gt;\n1 2020-02-22     13\n2 2021-03-02     15\n3 2022-04-11     18\n4 2023-03-10     23\n\n\n\n\n3.3 5. Using read_csv from tidyverse::readr\n\nrc &lt;- read_csv(\"sch, pgms\n         SBIZ, 23\n         NSHD, 25\n         SHBS, 14\n         SST,  13\n         \")\nrc\n\n# A tibble: 4 × 2\n  sch    pgms\n  &lt;chr&gt; &lt;dbl&gt;\n1 SBIZ     23\n2 NSHD     25\n3 SHBS     14\n4 SST      13",
    "crumbs": [
      "DataFrames",
      "textEntry"
    ]
  },
  {
    "objectID": "dataframes/textEntry.html#baserread.table",
    "href": "dataframes/textEntry.html#baserread.table",
    "title": "textEntry",
    "section": "2 BaseR::read.table",
    "text": "2 BaseR::read.table\n\n# note that parameters include `header=` and `text=`\n# and so don't need quotes. \n\ndf2&lt;-read.table(header = TRUE, text = \"\nsch pgms\nSBIZ 23\nNSHD 25\nSHBS 14\nSST 13\n\")\ndf2\n\n   sch pgms\n1 SBIZ   23\n2 NSHD   25\n3 SHBS   14\n4  SST   13\n\nstr(df2)\n\n'data.frame':   4 obs. of  2 variables:\n $ sch : chr  \"SBIZ\" \"NSHD\" \"SHBS\" \"SST\"\n $ pgms: int  23 25 14 13",
    "crumbs": [
      "DataFrames",
      "textEntry"
    ]
  },
  {
    "objectID": "dataframes/textEntry.html#tidyversetibble",
    "href": "dataframes/textEntry.html#tidyversetibble",
    "title": "textEntry",
    "section": "4 tidyverse::tibble()",
    "text": "4 tidyverse::tibble()\n\n# quotes required\n\ntb1 &lt;- tibble(\nsch = c(\"SBIZ\",\"NSHD\",\"SHBS\",\"SST\"),\npgms = c(23,25,14,13)  \n)\ntb1\n\n# A tibble: 4 × 2\n  sch    pgms\n  &lt;chr&gt; &lt;dbl&gt;\n1 SBIZ     23\n2 NSHD     25\n3 SHBS     14\n4 SST      13",
    "crumbs": [
      "DataFrames",
      "textEntry"
    ]
  },
  {
    "objectID": "dataframes/textEntry.html#tribble---transposed-tibble",
    "href": "dataframes/textEntry.html#tribble---transposed-tibble",
    "title": "textEntry",
    "section": "5 tribble() - transposed tibble",
    "text": "5 tribble() - transposed tibble\n\ntb2&lt;-tribble(\n  ~sch, ~pgms,\n  \"SBIZ\", 23,\n  \"NSHD\", 25,\n  \"SHBS\", 14,\n  \"SST\", 13\n)\ntb2\n\n# A tibble: 4 × 2\n  sch    pgms\n  &lt;chr&gt; &lt;dbl&gt;\n1 SBIZ     23\n2 NSHD     25\n3 SHBS     14\n4 SST      13\n\n\n\n5.1 tribble() with dates\n\ntb3 &lt;- tribble (\n  ~date, ~weight,\n  \"2020-02-22\", 13,\n  \"2021-03-02\", 15,\n  \"2022-04-11\", 18,\n  \"2023-03-10\", 23\n)\ntb3$date &lt;- as.Date(tb3$date)\ntb3\n\n# A tibble: 4 × 2\n  date       weight\n  &lt;date&gt;      &lt;dbl&gt;\n1 2020-02-22     13\n2 2021-03-02     15\n3 2022-04-11     18\n4 2023-03-10     23\n\n\n\n\n5.2 Copy and paste a bunch of numbers from a pdf textbook\n\n# the numbers are copied and pasted\ntb4 &lt;- read_table(col_names = FALSE, \"\n82 96 99 102 103 103 106 107 108 108 108\n108 109 110 110 111 113 113 113 113 115 115\n118 118 119 121 122 122 127 132 136\n\")\ntb4\n\n# A tibble: 3 × 11\n     X1    X2    X3    X4    X5    X6    X7    X8    X9   X10   X11\n  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1    82    96    99   102   103   103   106   107   108   108   108\n2   108   109   110   110   111   113   113   113   113   115   115\n3   118   118   119   121   122   122   127   132   136    NA    NA\n\nv &lt;- tb4[!is.na(tb4)]\nv\n\n [1]  82 108 118  96 109 118  99 110 119 102 110 121 103 111 122 103 113 122 106\n[20] 113 127 107 113 132 108 113 136 108 115 108 115",
    "crumbs": [
      "DataFrames",
      "textEntry"
    ]
  },
  {
    "objectID": "dataframes/textEntry.html#baserdata.frame",
    "href": "dataframes/textEntry.html#baserdata.frame",
    "title": "textEntry",
    "section": "",
    "text": "# strings indicated in quotes\n\ns = c(\"SBIZ\",\"NSHD\",\"SHBS\",\"SST\")\np = c(23,25,14,13)\ndf1 &lt;- data.frame(sch=s,pgm=p)\ndf1\n\n   sch pgm\n1 SBIZ  23\n2 NSHD  25\n3 SHBS  14\n4  SST  13\n\nstr(df1)\n\n'data.frame':   4 obs. of  2 variables:\n $ sch: chr  \"SBIZ\" \"NSHD\" \"SHBS\" \"SST\"\n $ pgm: num  23 25 14 13",
    "crumbs": [
      "DataFrames",
      "textEntry"
    ]
  },
  {
    "objectID": "dataframes/textEntry.html#tidyverseread_csv",
    "href": "dataframes/textEntry.html#tidyverseread_csv",
    "title": "textEntry",
    "section": "3 tidyverse::read_csv",
    "text": "3 tidyverse::read_csv\n\nlibrary(tidyverse)\nrc &lt;- read_csv(\"sch, pgms\n         SBIZ, 23\n         NSHD, 25\n         SHBS, 14\n         SST,  13\n         \")\nrc\n\n# A tibble: 4 × 2\n  sch    pgms\n  &lt;chr&gt; &lt;dbl&gt;\n1 SBIZ     23\n2 NSHD     25\n3 SHBS     14\n4 SST      13",
    "crumbs": [
      "DataFrames",
      "textEntry"
    ]
  },
  {
    "objectID": "dataframes/importExport.html#using-package-readr-from-tidyverse",
    "href": "dataframes/importExport.html#using-package-readr-from-tidyverse",
    "title": "importExport",
    "section": "",
    "text": "(use this for csv files, readr does not have “read_xls”)\n\nlibrary(tidyverse)\ndf1 &lt;- read_csv(\"../assets/data.csv\")\n\n\n\n(note: reads both .csv or .xlsx files. Note also the pwd)\n\nlibrary(rio)\n\ndf2 &lt;- import(\"../assets/datesData.xlsx\")\ntibble(df2)\n\n# A tibble: 10 × 3\n   Date                OneDose TwoDose\n   &lt;dttm&gt;                &lt;dbl&gt;   &lt;dbl&gt;\n 1 2021-01-11 00:00:00    3400       0\n 2 2021-01-12 00:00:00    6200       0\n 3 2021-01-22 00:00:00   60000       0\n 4 2021-01-27 00:00:00  113000      50\n 5 2021-01-31 00:00:00  155000      50\n 6 2021-02-02 00:00:00  175000    6000\n 7 2021-02-10 00:00:00  250000    6000\n 8 2021-02-18 00:00:00  250000  110000\n 9 2021-03-01 00:00:00  317715  207324\n10 2021-03-04 00:00:00  350000  215000\n\n\n\ndf3 &lt;- import(\"../assets/datesData.csv\")\ntibble(df3)\n\n# A tibble: 10 × 3\n   Date       OneDose TwoDose\n   &lt;IDate&gt;      &lt;int&gt;   &lt;int&gt;\n 1 2021-01-11    3400       0\n 2 2021-01-12    6200       0\n 3 2021-01-22   60000       0\n 4 2021-01-27  113000      50\n 5 2021-01-31  155000      50\n 6 2021-02-02  175000    6000\n 7 2021-02-10  250000    6000\n 8 2021-02-18  250000  110000\n 9 2021-03-01  317715  207324\n10 2021-03-04  350000  215000\n\n\n\n\n\n(can export to .xlsx or .csv file)\n\nexport(df3, \"../assets//vaccines.csv\")",
    "crumbs": [
      "DataFrames",
      "importExport."
    ]
  },
  {
    "objectID": "dataframes/importExport.html#use-this-for-csv-files-readr-does-not-have-read_xls",
    "href": "dataframes/importExport.html#use-this-for-csv-files-readr-does-not-have-read_xls",
    "title": "importExport",
    "section": "2 (use this for csv files, readr does not have “read_xls”)",
    "text": "2 (use this for csv files, readr does not have “read_xls”)\n\nlibrary(tidyverse)\ndf1 &lt;- read_csv(\"../assets/data.csv\")\n\n\n2.1 2. Using package rio (not part of tidyverse)\n(note: reads both .csv or .xlsx files. Note also the pwd)\n\nlibrary(rio)\n\ndf2 &lt;- import(\"../assets/datesData.xlsx\")\ntibble(df2)\n\n# A tibble: 10 × 3\n   Date                OneDose TwoDose\n   &lt;dttm&gt;                &lt;dbl&gt;   &lt;dbl&gt;\n 1 2021-01-11 00:00:00    3400       0\n 2 2021-01-12 00:00:00    6200       0\n 3 2021-01-22 00:00:00   60000       0\n 4 2021-01-27 00:00:00  113000      50\n 5 2021-01-31 00:00:00  155000      50\n 6 2021-02-02 00:00:00  175000    6000\n 7 2021-02-10 00:00:00  250000    6000\n 8 2021-02-18 00:00:00  250000  110000\n 9 2021-03-01 00:00:00  317715  207324\n10 2021-03-04 00:00:00  350000  215000\n\n\n\ndf3 &lt;- import(\"../assets/datesData.csv\")\ntibble(df3)\n\n# A tibble: 10 × 3\n   Date       OneDose TwoDose\n   &lt;IDate&gt;      &lt;int&gt;   &lt;int&gt;\n 1 2021-01-11    3400       0\n 2 2021-01-12    6200       0\n 3 2021-01-22   60000       0\n 4 2021-01-27  113000      50\n 5 2021-01-31  155000      50\n 6 2021-02-02  175000    6000\n 7 2021-02-10  250000    6000\n 8 2021-02-18  250000  110000\n 9 2021-03-01  317715  207324\n10 2021-03-04  350000  215000\n\n\n\n\n2.2 3. package rio - export\n(can export to .xlsx or .csv file)\n\nexport(df3, \"../assets//vaccines.csv\")",
    "crumbs": [
      "DataFrames",
      "importExport."
    ]
  },
  {
    "objectID": "dataframes/importExport.html#tidyverseread_csv",
    "href": "dataframes/importExport.html#tidyverseread_csv",
    "title": "importExport",
    "section": "",
    "text": "(reads .csv file, readr does not have “read_xls”)\n\nlibrary(tidyverse)\nlibrary(here)\n# returns a tibble\ntb1 &lt;- read_csv(here(\"assets\",\"data.csv\"),col_names=FALSE)\nhead(tb1)\n\n# A tibble: 6 × 3\n     X1     X2    X3\n  &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;\n1     2   3400     0\n2     3   6200     0\n3     4  60000     0\n4     6 113000    50\n5     8 155000    50\n6    11 175000  6000",
    "crumbs": [
      "DataFrames",
      "importExport."
    ]
  },
  {
    "objectID": "dataframes/importExport.html#rioimport",
    "href": "dataframes/importExport.html#rioimport",
    "title": "importExport",
    "section": "3 rio::import",
    "text": "3 rio::import\n(note: reads both .csv or .xlsx files.)\n\nlibrary(rio)\n# returns dataframe\ndf2 &lt;- import(here(\"assets/datesData.xlsx\"))\nhead(df2)\n\n        Date OneDose TwoDose\n1 2021-01-11    3400       0\n2 2021-01-12    6200       0\n3 2021-01-22   60000       0\n4 2021-01-27  113000      50\n5 2021-01-31  155000      50\n6 2021-02-02  175000    6000\n\ndf3 &lt;- import(here(\"assets/datesData.csv\"))\ndf3\n\n         Date OneDose TwoDose\n1  2021-01-11    3400       0\n2  2021-01-12    6200       0\n3  2021-01-22   60000       0\n4  2021-01-27  113000      50\n5  2021-01-31  155000      50\n6  2021-02-02  175000    6000\n7  2021-02-10  250000    6000\n8  2021-02-18  250000  110000\n9  2021-03-01  317715  207324\n10 2021-03-04  350000  215000\n\n\n\n3.1 3. package rio - export\n(can export to .xlsx or .csv file)\n\nexport(df3, here(\"assets/vaccines.csv\"))",
    "crumbs": [
      "DataFrames",
      "importExport."
    ]
  },
  {
    "objectID": "dataframes/importExport.html#tidyversewrite_csv",
    "href": "dataframes/importExport.html#tidyversewrite_csv",
    "title": "importExport",
    "section": "2 tidyverse::write_csv",
    "text": "2 tidyverse::write_csv\n\ndf1 &lt;- data.frame(tb1) \nwrite_csv(tb1, here(\"assets/datawrite.csv\"), col_names=FALSE)",
    "crumbs": [
      "DataFrames",
      "importExport."
    ]
  },
  {
    "objectID": "datatypes/lists.html#mix-types",
    "href": "datatypes/lists.html#mix-types",
    "title": "lists",
    "section": "",
    "text": "# can mix different types\nh &lt;- list(fruits = c(\"apple\", \"bananas\"),quantity = c(3,4))\nh\n\n$fruits\n[1] \"apple\"   \"bananas\"\n\n$quantity\n[1] 3 4\n\nh[1]\n\n$fruits\n[1] \"apple\"   \"bananas\"\n\n\n\nh$fruits\n\n[1] \"apple\"   \"bananas\"\n\n# named list\nh$fruits\n\n[1] \"apple\"   \"bananas\"\n\nh$quantity\n\n[1] 3 4",
    "crumbs": [
      "Datatypes",
      "lists"
    ]
  },
  {
    "objectID": "datatypes/lists.html#mix-types-with-different-lengths",
    "href": "datatypes/lists.html#mix-types-with-different-lengths",
    "title": "Lists",
    "section": "",
    "text": "# can mix different types\nlist1 &lt;- list(fruits = c(\"apple\", \"bananas\"),qty=c(120,180),total = 300)\nlist1\n\n$fruits\n[1] \"apple\"   \"bananas\"\n\n$qty\n[1] 120 180\n\n$total\n[1] 300\n\nstr(list1)\n\nList of 3\n $ fruits: chr [1:2] \"apple\" \"bananas\"\n $ qty   : num [1:2] 120 180\n $ total : num 300\n\n\n\nlist1$fruits\n\n[1] \"apple\"   \"bananas\"\n\nlist1$qty\n\n[1] 120 180\n\nlist1$total\n\n[1] 300",
    "crumbs": [
      "Datatypes",
      "lists"
    ]
  },
  {
    "objectID": "yaml.html#chapter-yamlfor-each-qmd-file.",
    "href": "yaml.html#chapter-yamlfor-each-qmd-file.",
    "title": "yaml",
    "section": "",
    "text": "---\ntitle: \"WebR\"\nformat:\n  html: default\n  pdf: pagesize: A4\n    include-in-header:\n      text: |\n        \\usepackage{scrlayer-scrpage}\n        \\rohead{\"Right Header\"}\nnumber-sections: true\nbibliography: ../References/WebR.bib\nnocite: |\n  @*\nwarning: false\n---",
    "crumbs": [
      "Preface",
      "yaml"
    ]
  },
  {
    "objectID": "datasets/baseRData/baseRData.html",
    "href": "datasets/baseRData/baseRData.html",
    "title": "baseR Datasets",
    "section": "",
    "text": "# 50 obs. of 2 variables\nhead(cars)\n\n  speed dist\n1     4    2\n2     4   10\n3     7    4\n4     7   22\n5     8   16\n6     9   10",
    "crumbs": [
      "DataSets",
      "baseRData"
    ]
  },
  {
    "objectID": "datasets/baseRData/baseRData.html#libraries",
    "href": "datasets/baseRData/baseRData.html#libraries",
    "title": "baseRData",
    "section": "",
    "text": "head(cars)\n\n  speed dist\n1     4    2\n2     4   10\n3     7    4\n4     7   22\n5     8   16\n6     9   10\n\nhead(faithful)\n\n  eruptions waiting\n1     3.600      79\n2     1.800      54\n3     3.333      74\n4     2.283      62\n5     4.533      85\n6     2.883      55\n\nhead(trees)\n\n  Girth Height Volume\n1   8.3     70   10.3\n2   8.6     65   10.3\n3   8.8     63   10.2\n4  10.5     72   16.4\n5  10.7     81   18.8\n6  10.8     83   19.7\n\nhead(airquality)\n\n  Ozone Solar.R Wind Temp Month Day\n1    41     190  7.4   67     5   1\n2    36     118  8.0   72     5   2\n3    12     149 12.6   74     5   3\n4    18     313 11.5   62     5   4\n5    NA      NA 14.3   56     5   5\n6    28      NA 14.9   66     5   6\n\nhead(mtcars)\n\n                   mpg cyl disp  hp drat    wt  qsec vs am gear carb\nMazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\nHornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\nHornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2\nValiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1\n\n\n\ndata()"
  },
  {
    "objectID": "examples.html",
    "href": "examples.html",
    "title": "examples",
    "section": "",
    "text": "0.1 DataTypes\n\nkikoWeights\ngrades\nvaccinations\niStudyGuides",
    "crumbs": [
      "Examples"
    ]
  },
  {
    "objectID": "examples/kikoWeight.html",
    "href": "examples/kikoWeight.html",
    "title": "kikoWeight",
    "section": "",
    "text": "library(tidyverse)\nlibrary(eeptools)\nlibrary(ggthemes)\n\n\n\n\n\ntb &lt;- tribble (\n  ~date, ~kg,\n  \"2020-08-20\", 4.8,\n  \"2020-09-20\", 5.5,\n  \"2020-09-26\", 6.0,\n  \"2020-10-12\", 6.8,\n  \"2020-11-03\", 7.3,\n  \"2020-12-26\", 8.3,\n  \"2021-01-08\", 8.5,\n  \"2021-02-22\", 9.1,\n  \"2021-03-28\", 9.7,\n  \"2021-04-17\", 10.1,\n  \"2021-08-02\", 10.5,\n  \"2022-01-21\", 11.3,\n  \"2022-04-02\", 12.2,\n)\n\ndob = as.Date(\"2020-04-17\")\ntb$date &lt;- as.Date(tb$date)\n\n\ntb &lt;- tb %&gt;%\n      mutate(age=age_calc(dob,tb$date, units=\"months\"))\ntb\n\n# A tibble: 13 × 3\n   date          kg   age\n   &lt;date&gt;     &lt;dbl&gt; &lt;dbl&gt;\n 1 2020-08-20   4.8  4.10\n 2 2020-09-20   5.5  5.1 \n 3 2020-09-26   6    5.3 \n 4 2020-10-12   6.8  5.82\n 5 2020-11-03   7.3  6.55\n 6 2020-12-26   8.3  8.29\n 7 2021-01-08   8.5  8.71\n 8 2021-02-22   9.1 10.2 \n 9 2021-03-28   9.7 11.4 \n10 2021-04-17  10.1 12   \n11 2021-08-02  10.5 15.5 \n12 2022-01-21  11.3 21.1 \n13 2022-04-02  12.2 23.5 \n\n\n\n\n\n\n# library(ggthemes)\np1&lt;-ggplot(tb, aes(x=age, y=kg))+\n  geom_line(color=\"blue\")+\n  geom_point()+\n  theme_clean()+\n  labs(title=\"Kiko's Weight\",\n       subtitle=\"Birthday: 17 Apr 2020\",\n       x=\"Age in months\",\n       y=\"Kilograms\")+\n  scale_x_continuous(limits=c(4,26),\n                     breaks=c(seq(4,24, by=2)))+\n  annotate(\"text\",24.0,12.5,label=\"02Apr22\")\np1"
  },
  {
    "objectID": "examples/kikoWeight.html#kikoweights",
    "href": "examples/kikoWeight.html#kikoweights",
    "title": "kikoWeight",
    "section": "",
    "text": "library(tidyverse)\nlibrary(eeptools)\nlibrary(ggthemes)\n\n\n\n\n\ntb &lt;- tribble (\n  ~date, ~kg,\n  \"2020-08-20\", 4.8,\n  \"2020-09-20\", 5.5,\n  \"2020-09-26\", 6.0,\n  \"2020-10-12\", 6.8,\n  \"2020-11-03\", 7.3,\n  \"2020-12-26\", 8.3,\n  \"2021-01-08\", 8.5,\n  \"2021-02-22\", 9.1,\n  \"2021-03-28\", 9.7,\n  \"2021-04-17\", 10.1,\n  \"2021-08-02\", 10.5,\n  \"2022-01-21\", 11.3,\n  \"2022-04-02\", 12.2,\n)\n\ndob = as.Date(\"2020-04-17\")\ntb$date &lt;- as.Date(tb$date)\n\n\ntb &lt;- tb %&gt;%\n      mutate(age=age_calc(dob,tb$date, units=\"months\"))\ntb\n\n# A tibble: 13 × 3\n   date          kg   age\n   &lt;date&gt;     &lt;dbl&gt; &lt;dbl&gt;\n 1 2020-08-20   4.8  4.10\n 2 2020-09-20   5.5  5.1 \n 3 2020-09-26   6    5.3 \n 4 2020-10-12   6.8  5.82\n 5 2020-11-03   7.3  6.55\n 6 2020-12-26   8.3  8.29\n 7 2021-01-08   8.5  8.71\n 8 2021-02-22   9.1 10.2 \n 9 2021-03-28   9.7 11.4 \n10 2021-04-17  10.1 12   \n11 2021-08-02  10.5 15.5 \n12 2022-01-21  11.3 21.1 \n13 2022-04-02  12.2 23.5 \n\n\n\n\n\n\n# library(ggthemes)\np1&lt;-ggplot(tb, aes(x=age, y=kg))+\n  geom_line(color=\"blue\")+\n  geom_point()+\n  theme_clean()+\n  labs(title=\"Kiko's Weight\",\n       subtitle=\"Birthday: 17 Apr 2020\",\n       x=\"Age in months\",\n       y=\"Kilograms\")+\n  scale_x_continuous(limits=c(4,26),\n                     breaks=c(seq(4,24, by=2)))+\n  annotate(\"text\",24.0,12.5,label=\"02Apr22\")\np1"
  },
  {
    "objectID": "examples/grades.html",
    "href": "examples/grades.html",
    "title": "grades",
    "section": "",
    "text": "library(tidyverse)\nlibrary(stats)\n\n\n\n\n\na &lt;- str_c(\"SD\",101:110)\nset.seed(6)\nb &lt;- round(rnorm(n=10, mean=10, sd=3),0)\nc &lt;- round(runif(n=10, min=10, max=50),0)\nd &lt;- round(rnorm(n=10, mean=60, sd=10),0)\ndf1 &lt;- data.frame(ID=a, Test1=b, Test2=c, Exam=d)\n\n\ndf2 &lt;- mutate(df1,\n          TotScore = Test1+0.4*Test2+0.6*Exam)\ndf2\n\n      ID Test1 Test2 Exam TotScore\n1  SD101    11    48   61     66.8\n2  SD102     8    43   77     71.4\n3  SD103    13    15   49     48.4\n4  SD104    15    20   57     57.2\n5  SD105    10    40   82     75.2\n6  SD106    11    23   65     59.2\n7  SD107     6    24   46     43.2\n8  SD108    12    47   80     78.8\n9  SD109    10    21   48     47.2\n10 SD110     7    27   62     55.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngletters&lt;-c(\"F\",\"D\",\"D+\",\"C\",\"C+\",\"B-\",\"B\",\"B+\",\"A-\",\"A\",\"A+\")\nletter.grades&lt;-cut(df2$TotScore, c(0,40,44,49,54,59,64,69,74,79,84,100),right=TRUE, labels=gletters)\nletter.grades\n\n [1] B  B+ D+ C+ A- B- D  A- D+ C+\nLevels: F D D+ C C+ B- B B+ A- A A+\n\n\n\n\n\n\ndf3&lt;-data.frame(StdID=df2$ID,TotScore=df2$TotScore,Grade=letter.grades)\ndf3\n\n   StdID TotScore Grade\n1  SD101     66.8     B\n2  SD102     71.4    B+\n3  SD103     48.4    D+\n4  SD104     57.2    C+\n5  SD105     75.2    A-\n6  SD106     59.2    B-\n7  SD107     43.2     D\n8  SD108     78.8    A-\n9  SD109     47.2    D+\n10 SD110     55.0    C+\n\n\n\n\n\n\ntab1 &lt;- table(df3$Grade)\ntab1\n\n\n F  D D+  C C+ B-  B B+ A-  A A+ \n 0  1  2  0  2  1  1  1  2  0  0",
    "crumbs": [
      "Examples",
      "grades"
    ]
  },
  {
    "objectID": "examples/grades.html#libraries",
    "href": "examples/grades.html#libraries",
    "title": "grades",
    "section": "",
    "text": "library(tidyverse)\nlibrary(stats)",
    "crumbs": [
      "Examples",
      "grades"
    ]
  },
  {
    "objectID": "examples/grades.html#data",
    "href": "examples/grades.html#data",
    "title": "grades",
    "section": "",
    "text": "a &lt;- str_c(\"SD\",101:110)\nset.seed(6)\nb &lt;- round(rnorm(n=10, mean=10, sd=3),0)\nc &lt;- round(runif(n=10, min=10, max=50),0)\nd &lt;- round(rnorm(n=10, mean=60, sd=10),0)\ndf1 &lt;- data.frame(ID=a, Test1=b, Test2=c, Exam=d)\n\n\ndf2 &lt;- mutate(df1,\n          TotScore = Test1+0.4*Test2+0.6*Exam)\ndf2\n\n      ID Test1 Test2 Exam TotScore\n1  SD101    11    48   61     66.8\n2  SD102     8    43   77     71.4\n3  SD103    13    15   49     48.4\n4  SD104    15    20   57     57.2\n5  SD105    10    40   82     75.2\n6  SD106    11    23   65     59.2\n7  SD107     6    24   46     43.2\n8  SD108    12    47   80     78.8\n9  SD109    10    21   48     47.2\n10 SD110     7    27   62     55.0",
    "crumbs": [
      "Examples",
      "grades"
    ]
  },
  {
    "objectID": "examples/grades.html#cut-intervals",
    "href": "examples/grades.html#cut-intervals",
    "title": "grades",
    "section": "",
    "text": "gletters&lt;-c(\"F\",\"D\",\"D+\",\"C\",\"C+\",\"B-\",\"B\",\"B+\",\"A-\",\"A\",\"A+\")\nletter.grades&lt;-cut(df2$TotScore, c(0,40,44,49,54,59,64,69,74,79,84,100),right=TRUE, labels=gletters)\nletter.grades\n\n [1] B  B+ D+ C+ A- B- D  A- D+ C+\nLevels: F D D+ C C+ B- B B+ A- A A+",
    "crumbs": [
      "Examples",
      "grades"
    ]
  },
  {
    "objectID": "examples/grades.html#lettergrades",
    "href": "examples/grades.html#lettergrades",
    "title": "grades",
    "section": "",
    "text": "df3&lt;-data.frame(StdID=df2$ID,TotScore=df2$TotScore,Grade=letter.grades)\ndf3\n\n   StdID TotScore Grade\n1  SD101     62.8    B-\n2  SD102     66.8     B\n3  SD103     37.4     F\n4  SD104     30.6     F\n5  SD105     15.6     F\n6  SD106     46.8    D+\n7  SD107     44.8    D+\n8  SD108     92.2    A+\n9  SD109     38.6     F\n10 SD110     76.0    A-",
    "crumbs": [
      "Examples",
      "grades"
    ]
  },
  {
    "objectID": "examples/grades.html#assign-lettergrades",
    "href": "examples/grades.html#assign-lettergrades",
    "title": "grades",
    "section": "",
    "text": "df3&lt;-data.frame(StdID=df2$ID,TotScore=df2$TotScore,Grade=letter.grades)\ndf3\n\n   StdID TotScore Grade\n1  SD101     66.8     B\n2  SD102     71.4    B+\n3  SD103     48.4    D+\n4  SD104     57.2    C+\n5  SD105     75.2    A-\n6  SD106     59.2    B-\n7  SD107     43.2     D\n8  SD108     78.8    A-\n9  SD109     47.2    D+\n10 SD110     55.0    C+",
    "crumbs": [
      "Examples",
      "grades"
    ]
  },
  {
    "objectID": "examples/kikoWeights.html",
    "href": "examples/kikoWeights.html",
    "title": "kikoWeight",
    "section": "",
    "text": "library(tidyverse)\nlibrary(eeptools)\nlibrary(ggthemes)\n\n\n\n\n\ntb &lt;- tribble (\n  ~date, ~kg,\n  \"2020-08-20\", 4.8,\n  \"2020-09-20\", 5.5,\n  \"2020-09-26\", 6.0,\n  \"2020-10-12\", 6.8,\n  \"2020-11-03\", 7.3,\n  \"2020-12-26\", 8.3,\n  \"2021-01-08\", 8.5,\n  \"2021-02-22\", 9.1,\n  \"2021-03-28\", 9.7,\n  \"2021-04-17\", 10.1,\n  \"2021-08-02\", 10.5,\n  \"2022-01-21\", 11.3,\n  \"2022-04-02\", 12.2,\n)\n\ndob = as.Date(\"2020-04-17\")\ntb$date &lt;- as.Date(tb$date)\n\n\ntb &lt;- tb %&gt;%\n      mutate(age=age_calc(dob,tb$date, units=\"months\"))\ntb\n\n# A tibble: 13 × 3\n   date          kg   age\n   &lt;date&gt;     &lt;dbl&gt; &lt;dbl&gt;\n 1 2020-08-20   4.8  4.10\n 2 2020-09-20   5.5  5.1 \n 3 2020-09-26   6    5.3 \n 4 2020-10-12   6.8  5.82\n 5 2020-11-03   7.3  6.55\n 6 2020-12-26   8.3  8.29\n 7 2021-01-08   8.5  8.71\n 8 2021-02-22   9.1 10.2 \n 9 2021-03-28   9.7 11.4 \n10 2021-04-17  10.1 12   \n11 2021-08-02  10.5 15.5 \n12 2022-01-21  11.3 21.1 \n13 2022-04-02  12.2 23.5 \n\n\n\n\n\n\n# library(ggthemes)\np1&lt;-ggplot(tb, aes(x=age, y=kg))+\n  geom_line(color=\"blue\")+\n  geom_point()+\n  theme_clean()+\n  labs(title=\"Kiko's Weight\",\n       subtitle=\"Birthday: 17 Apr 2020\",\n       x=\"Age in months\",\n       y=\"Kilograms\")+\n  scale_x_continuous(limits=c(4,26),\n                     breaks=c(seq(4,24, by=2)))+\n  annotate(\"text\",24.0,12.5,label=\"02Apr22\")\np1",
    "crumbs": [
      "Examples",
      "kikoWeights"
    ]
  },
  {
    "objectID": "examples/kikoWeights.html#kikoweights",
    "href": "examples/kikoWeights.html#kikoweights",
    "title": "kikoWeight",
    "section": "",
    "text": "library(tidyverse)\nlibrary(eeptools)\nlibrary(ggthemes)\n\n\n\n\n\ntb &lt;- tribble (\n  ~date, ~kg,\n  \"2020-08-20\", 4.8,\n  \"2020-09-20\", 5.5,\n  \"2020-09-26\", 6.0,\n  \"2020-10-12\", 6.8,\n  \"2020-11-03\", 7.3,\n  \"2020-12-26\", 8.3,\n  \"2021-01-08\", 8.5,\n  \"2021-02-22\", 9.1,\n  \"2021-03-28\", 9.7,\n  \"2021-04-17\", 10.1,\n  \"2021-08-02\", 10.5,\n  \"2022-01-21\", 11.3,\n  \"2022-04-02\", 12.2,\n)\n\ndob = as.Date(\"2020-04-17\")\ntb$date &lt;- as.Date(tb$date)\n\n\ntb &lt;- tb %&gt;%\n      mutate(age=age_calc(dob,tb$date, units=\"months\"))\ntb\n\n# A tibble: 13 × 3\n   date          kg   age\n   &lt;date&gt;     &lt;dbl&gt; &lt;dbl&gt;\n 1 2020-08-20   4.8  4.10\n 2 2020-09-20   5.5  5.1 \n 3 2020-09-26   6    5.3 \n 4 2020-10-12   6.8  5.82\n 5 2020-11-03   7.3  6.55\n 6 2020-12-26   8.3  8.29\n 7 2021-01-08   8.5  8.71\n 8 2021-02-22   9.1 10.2 \n 9 2021-03-28   9.7 11.4 \n10 2021-04-17  10.1 12   \n11 2021-08-02  10.5 15.5 \n12 2022-01-21  11.3 21.1 \n13 2022-04-02  12.2 23.5 \n\n\n\n\n\n\n# library(ggthemes)\np1&lt;-ggplot(tb, aes(x=age, y=kg))+\n  geom_line(color=\"blue\")+\n  geom_point()+\n  theme_clean()+\n  labs(title=\"Kiko's Weight\",\n       subtitle=\"Birthday: 17 Apr 2020\",\n       x=\"Age in months\",\n       y=\"Kilograms\")+\n  scale_x_continuous(limits=c(4,26),\n                     breaks=c(seq(4,24, by=2)))+\n  annotate(\"text\",24.0,12.5,label=\"02Apr22\")\np1",
    "crumbs": [
      "Examples",
      "kikoWeights"
    ]
  },
  {
    "objectID": "examples/grades.html#count-in-each-letter-grade",
    "href": "examples/grades.html#count-in-each-letter-grade",
    "title": "grades",
    "section": "",
    "text": "tab1 &lt;- table(df3$Grade)\ntab1\n\n\n F  D D+  C C+ B-  B B+ A-  A A+ \n 0  1  2  0  2  1  1  1  2  0  0",
    "crumbs": [
      "Examples",
      "grades"
    ]
  },
  {
    "objectID": "datatypes/factors.html#defining-factors",
    "href": "datatypes/factors.html#defining-factors",
    "title": "Factors",
    "section": "2 Defining factors",
    "text": "2 Defining factors\n\n# usual to convert strings to factors\nch &lt;- c(\"plus\",\"minus\")\nch\n\n[1] \"plus\"  \"minus\"\n\n# note: levels are alphabetically placed\nfch &lt;- factor(ch)\nfch\n\n[1] plus  minus\nLevels: minus plus\n\n# or using `as.factor` from BaseR\nas.factor(ch)\n\n[1] plus  minus\nLevels: minus plus",
    "crumbs": [
      "Datatypes",
      "factors"
    ]
  },
  {
    "objectID": "datatypes/strings.html#tidyverse-string-functions-1",
    "href": "datatypes/strings.html#tidyverse-string-functions-1",
    "title": "strings",
    "section": "2 tidyverse string functions",
    "text": "2 tidyverse string functions\n\n\n\n\n\n\nstr_c\nstr_length\nstr_sub\nstr_trim\n\n\n\n\nlibrary(tidyverse)\n\ns0 &lt;- str_c(\"  I almost believe \")\nstr(s0)\n\n chr \"  I almost believe \"\n\nstr_length(s0)\n\n[1] 19\n\n# remove spaces\ns1 &lt;- str_trim(s0, side=\"both\")\ns1\n\n[1] \"I almost believe\"\n\nstr_length(s1)\n\n[1] 16\n\n\n\n\n2.1 strsplit (returns a list)\n\n# output of website crawling\nt0 &lt;- \"get%better%every%day\"\nt1 &lt;- strsplit(t0,split='%')\nt1\n\n[[1]]\n[1] \"get\"    \"better\" \"every\"  \"day\"   \n\ntypeof(t1)\n\n[1] \"list\"\n\n\n\n\n2.2 split into chars\n\nu0 &lt;- c(\"The quick brown fox jumps over the lazy dog\")\nu1 &lt;- strsplit(u0, \"\")\nu1\n\n[[1]]\n [1] \"T\" \"h\" \"e\" \" \" \"q\" \"u\" \"i\" \"c\" \"k\" \" \" \"b\" \"r\" \"o\" \"w\" \"n\" \" \" \"f\" \"o\" \"x\"\n[20] \" \" \"j\" \"u\" \"m\" \"p\" \"s\" \" \" \"o\" \"v\" \"e\" \"r\" \" \" \"t\" \"h\" \"e\" \" \" \"l\" \"a\" \"z\"\n[39] \"y\" \" \" \"d\" \"o\" \"g\"\n\n\n\n\n2.3 split into words\n\nu2 &lt;- strsplit(u0, \" \")\nu2\n\n[[1]]\n[1] \"The\"   \"quick\" \"brown\" \"fox\"   \"jumps\" \"over\"  \"the\"   \"lazy\"  \"dog\"  \n\n\n\n\n2.4 regex can be used in strsplit\n\nv0 &lt;- \"all16i5need6is4a%long8vacation\"\nv1 &lt;- strsplit(v0,split=\"[0-9,%]+\")\nv1\n\n[[1]]\n[1] \"all\"      \"i\"        \"need\"     \"is\"       \"a\"        \"long\"     \"vacation\"",
    "crumbs": [
      "Datatypes",
      "strings"
    ]
  },
  {
    "objectID": "datatypes/strings.html#tidyverse-stringr",
    "href": "datatypes/strings.html#tidyverse-stringr",
    "title": "Strings",
    "section": "",
    "text": "library(tidyverse)\n# single letter single quotes\n# multiple letters use double quotes\n\ns1 &lt;- c(\"I ate\")\nclass(s1)\n\n[1] \"character\"\n\ntypeof(s1)\n\n[1] \"character\"\n\nstr(s1)\n\n chr \"I ate\"",
    "crumbs": [
      "Datatypes",
      "strings"
    ]
  },
  {
    "objectID": "datatypes/fct_inorder.html",
    "href": "datatypes/fct_inorder.html",
    "title": "fct_inorder",
    "section": "",
    "text": "Dataset\n\nlibrary(tidyverse)\ntb &lt;- tribble(\n  ~cancer, ~cases, ~sex,\n  \"Colorectal\", 66, \"M\",\n   \"Liver\", 29, \"M\",\n   \"Skin\", 21, \"M\",\n   \"Kidney\", 17, \"M\",\n   \"Colorectal\", 12, \"F\",\n   \"Skin\", 17, \"F\",\n)\ntb$cancer &lt;- tb$cancer |&gt; factor()\ntb$sex &lt;- tb$sex |&gt; factor()\ntb\n\n# A tibble: 6 × 3\n  cancer     cases sex  \n  &lt;fct&gt;      &lt;dbl&gt; &lt;fct&gt;\n1 Colorectal    66 M    \n2 Liver         29 M    \n3 Skin          21 M    \n4 Kidney        17 M    \n5 Colorectal    12 F    \n6 Skin          17 F    \n\n\n\n\n\n\n\n\nNote\n\n\n\nDefault factor levels are placed alphabetically and are so plotted on ggplot2. To change the sequence use fct_inorder\n\n\n\nlevels(tb$cancer)\n\n[1] \"Colorectal\" \"Kidney\"     \"Liver\"      \"Skin\"      \n\ntb$cancer &lt;- fct_inorder(tb$cancer)\nlevels(tb$cancer)\n\n[1] \"Colorectal\" \"Liver\"      \"Skin\"       \"Kidney\"    \n\n\n\n\n\n\n\n\nNote\n\n\n\nThere’s also fct_inseq and fct_infreq (by number of observations with each level). They are found in the forcats package under tidyverse. Ref: https://forcats.tidyverse.org/reference/fct_inorder.html"
  },
  {
    "objectID": "tables/tables.html",
    "href": "tables/tables.html",
    "title": "tables",
    "section": "",
    "text": "rm(list=ls())\nlibrary(tidyverse)"
  },
  {
    "objectID": "tables/tables.html#libraries",
    "href": "tables/tables.html#libraries",
    "title": "tables",
    "section": "",
    "text": "rm(list=ls())\nlibrary(tidyverse)"
  },
  {
    "objectID": "tables/tables.html#simple-matrix",
    "href": "tables/tables.html#simple-matrix",
    "title": "tables",
    "section": "Simple Matrix",
    "text": "Simple Matrix\n\n# Matrix: using nrows\nM &lt;- matrix(\n c(327,50,31,192),nrow=2,byrow=TRUE)\ncolnames(M) &lt;- c(\"Disease\",\"NoDisease\")\nrownames(M) &lt;- c(\"Positive\",\"Negative\")\nM\n\n         Disease NoDisease\nPositive     327        50\nNegative      31       192\n\n# using cbind (or rbind)\nN &lt;- cbind(c(327,31),c(50,192))\ndimnames(N) = list(c(\"Positive\",\"Negative\"),c(\"Disease\",\"NoDisease\"))\nN\n\n         Disease NoDisease\nPositive     327        50\nNegative      31       192\n\n# using dim()\nP &lt;- c(327,50,31,192)\ndim(P) &lt;- c(2,2)\ndimnames(P) = list(c(\"Positive\",\"Negative\"),c(\"Disease\",\"NoDisease\"))\nP\n\n         Disease NoDisease\nPositive     327        31\nNegative      50       192\n\nclass(P)\n\n[1] \"matrix\" \"array\""
  },
  {
    "objectID": "tables/tables.html#simple-table-from-a-dataframe",
    "href": "tables/tables.html#simple-table-from-a-dataframe",
    "title": "tables",
    "section": "Simple Table from a dataframe",
    "text": "Simple Table from a dataframe\n\ndf &lt;- data.frame(\n  c(327,50),\n  c(50,192)\n)\ncolnames(df) &lt;- c(\"Disease\",\"NoDisease\")\nrownames(df) &lt;- c(\"Positive\",\"Negative\")\ndf\n\n         Disease NoDisease\nPositive     327        50\nNegative      50       192\n\nclass(df)\n\n[1] \"data.frame\"\n\ntab &lt;- as.table(as.matrix(df))\ntab\n\n         Disease NoDisease\nPositive     327        50\nNegative      50       192\n\nclass(tab)\n\n[1] \"table\"\n\naddmargins(tab)\n\n         Disease NoDisease Sum\nPositive     327        50 377\nNegative      50       192 242\nSum          377       242 619"
  },
  {
    "objectID": "tables/tables.html#xtabs-require-dataframe-or-tibble",
    "href": "tables/tables.html#xtabs-require-dataframe-or-tibble",
    "title": "tables",
    "section": "xtabs require dataframe or tibble",
    "text": "xtabs require dataframe or tibble\n\n# tribble is easier to enter table values by rows\ndf2 &lt;-tribble(\n  ~Predicted, ~Actual, ~Values,\n  \"Positive\", \"Disease\", 327,\n  \"Positive\", \"NoDisease\", 50,\n  \"Negative\", \"Disease\", 50,\n  \"Negative\", \"NoDisease\", 192\n)\ndf2\n\n# A tibble: 4 × 3\n  Predicted Actual    Values\n  &lt;chr&gt;     &lt;chr&gt;      &lt;dbl&gt;\n1 Positive  Disease      327\n2 Positive  NoDisease     50\n3 Negative  Disease       50\n4 Negative  NoDisease    192\n\n# xtabs require a dataframe or tibble, returns table\ntab2 &lt;- xtabs( Values ~ Predicted + Actual, data=df2)\naddmargins(tab2)\n\n          Actual\nPredicted  Disease NoDisease Sum\n  Negative      50       192 242\n  Positive     327        50 377\n  Sum          377       242 619\n\nclass(tab2)\n\n[1] \"xtabs\" \"table\"\n\n# a nicer table (maybe)\nftable(tab2)\n\n          Actual Disease NoDisease\nPredicted                         \nNegative              50       192\nPositive             327        50"
  },
  {
    "objectID": "tables/gt.html",
    "href": "tables/gt.html",
    "title": "gt",
    "section": "",
    "text": "gt() formats tables out of dataframes and tibbles\n\n\n\n\n\nLibrary\n\nlibrary(tidyverse)\nlibrary(gt)\n\n\n\nData\n\n\nCode\n# islands is a named vector (continental land mass)\n# we convert it to a tibble using enframe and\n# select top five islands\n\ntbl&lt;-tibble::enframe(islands) %&gt;% slice_max(value, n=5)\ntbl\n\n\n# A tibble: 5 × 2\n  name          value\n  &lt;chr&gt;         &lt;dbl&gt;\n1 Asia          16988\n2 Africa        11506\n3 North America  9390\n4 South America  6795\n5 Antarctica     5500\n\n\n\n\nBasic gt on tibble\n\n# basic gt table\ngt(tbl) |&gt;\n  tab_header(\n    title = md(\"Landmasses of the World\")) |&gt;\n  tab_caption(\n    caption= md(\"Top 5 selected\")) |&gt;\n  fmt_number(sep_mark=\",\",decimals=0)\n\n\n\n\n\nTop 5 selected\n\n\nLandmasses of the World\n\n\nname\nvalue\n\n\n\n\nAsia\n16,988\n\n\nAfrica\n11,506\n\n\nNorth America\n9,390\n\n\nSouth America\n6,795\n\n\nAntarctica\n5,500\n\n\n\n\n\n\n\n\n\ngt on data.frame\n\ndf &lt;- read.table(header=TRUE, text=\"\n          Group Yes No\n          Placebo 189 10845\n          Aspirin 104 10933 \")\ndf\n\n    Group Yes    No\n1 Placebo 189 10845\n2 Aspirin 104 10933\n\ngt(df) |&gt;\n  tab_header(\n    title=md(\"Cross classification\"),\n    subtitle=md(\"Aspirin use and myocardial infarction\")\n  ) |&gt;\n  tab_spanner(\n    label = \"Mycardial Infarction\",\n    columns = c(Yes, No)\n  ) \n\n\n\n\n\n\n\n\n\n\n\n\nCross classification\n\n\nAspirin use and myocardial infarction\n\n\nGroup\n\nMycardial Infarction\n\n\n\nYes\nNo\n\n\n\n\nPlacebo\n189\n10845\n\n\nAspirin\n104\n10933",
    "crumbs": [
      "Tables",
      "gt"
    ]
  },
  {
    "objectID": "tables/xtab.html",
    "href": "tables/xtab.html",
    "title": "xtabs",
    "section": "",
    "text": "xtabs works on dataframes and tibbles and uses formula entry\naddmargins works for xtab form",
    "crumbs": [
      "Tables",
      "xtab"
    ]
  },
  {
    "objectID": "tables/xtab.html#libraries",
    "href": "tables/xtab.html#libraries",
    "title": "tables",
    "section": "",
    "text": "library(tidyverse)"
  },
  {
    "objectID": "tables/xtab.html#simple-matrix",
    "href": "tables/xtab.html#simple-matrix",
    "title": "tables",
    "section": "2 Simple Matrix",
    "text": "2 Simple Matrix\n\n# Matrix: using nrows\nM &lt;- matrix(\n c(327,50,31,192),nrow=2,byrow=TRUE)\ncolnames(M) &lt;- c(\"Disease\",\"NoDisease\")\nrownames(M) &lt;- c(\"Positive\",\"Negative\")\nM\n\n         Disease NoDisease\nPositive     327        50\nNegative      31       192\n\n# using cbind (or rbind)\nN &lt;- cbind(c(327,31),c(50,192))\ndimnames(N) = list(c(\"Positive\",\"Negative\"),c(\"Disease\",\"NoDisease\"))\nN\n\n         Disease NoDisease\nPositive     327        50\nNegative      31       192\n\n# using dim()\nP &lt;- c(327,50,31,192)\ndim(P) &lt;- c(2,2)\ndimnames(P) = list(c(\"Positive\",\"Negative\"),c(\"Disease\",\"NoDisease\"))\nP\n\n         Disease NoDisease\nPositive     327        31\nNegative      50       192\n\nclass(P)\n\n[1] \"matrix\" \"array\""
  },
  {
    "objectID": "tables/xtab.html#simple-table-from-a-dataframe",
    "href": "tables/xtab.html#simple-table-from-a-dataframe",
    "title": "tables",
    "section": "3 Simple Table from a dataframe",
    "text": "3 Simple Table from a dataframe\n\ndf &lt;- data.frame(\n  c(327,50),\n  c(50,192)\n)\ncolnames(df) &lt;- c(\"Disease\",\"NoDisease\")\nrownames(df) &lt;- c(\"Positive\",\"Negative\")\ndf\n\n         Disease NoDisease\nPositive     327        50\nNegative      50       192\n\nclass(df)\n\n[1] \"data.frame\"\n\ntab &lt;- as.table(as.matrix(df))\ntab\n\n         Disease NoDisease\nPositive     327        50\nNegative      50       192\n\nclass(tab)\n\n[1] \"table\"\n\naddmargins(tab)\n\n         Disease NoDisease Sum\nPositive     327        50 377\nNegative      50       192 242\nSum          377       242 619"
  },
  {
    "objectID": "tables/xtab.html#xtabs-require-dataframe-or-tibble",
    "href": "tables/xtab.html#xtabs-require-dataframe-or-tibble",
    "title": "tables",
    "section": "4 xtabs require dataframe or tibble",
    "text": "4 xtabs require dataframe or tibble\n\n# tribble is easier to enter table values by rows\ndf2 &lt;-tribble(\n  ~Predicted, ~Actual, ~Values,\n  \"Positive\", \"Disease\", 327,\n  \"Positive\", \"NoDisease\", 50,\n  \"Negative\", \"Disease\", 50,\n  \"Negative\", \"NoDisease\", 192\n)\ndf2\n\n# A tibble: 4 × 3\n  Predicted Actual    Values\n  &lt;chr&gt;     &lt;chr&gt;      &lt;dbl&gt;\n1 Positive  Disease      327\n2 Positive  NoDisease     50\n3 Negative  Disease       50\n4 Negative  NoDisease    192\n\n# xtabs require a dataframe or tibble, returns table\ntab2 &lt;- xtabs( Values ~ Predicted + Actual, data=df2)\naddmargins(tab2)\n\n          Actual\nPredicted  Disease NoDisease Sum\n  Negative      50       192 242\n  Positive     327        50 377\n  Sum          377       242 619\n\nclass(tab2)\n\n[1] \"xtabs\" \"table\"\n\n# a nicer table (maybe)\nftable(tab2)\n\n          Actual Disease NoDisease\nPredicted                         \nNegative              50       192\nPositive             327        50"
  },
  {
    "objectID": "tables.html",
    "href": "tables.html",
    "title": "tables",
    "section": "",
    "text": "1 Tables\n\ntable (frequency tables)\nxtab (continency tables)\ngt",
    "crumbs": [
      "Tables"
    ]
  },
  {
    "objectID": "tables/xtab.html#matrix-table",
    "href": "tables/xtab.html#matrix-table",
    "title": "tables",
    "section": "2 “Matrix” table",
    "text": "2 “Matrix” table\n\n# Matrix: using nrows\nM &lt;- matrix(\n c(327,50,31,192),nrow=2,byrow=TRUE)\ncolnames(M) &lt;- c(\"Disease\",\"NoDisease\")\nrownames(M) &lt;- c(\"Positive\",\"Negative\")\nM\n\n         Disease NoDisease\nPositive     327        50\nNegative      31       192\n\nclass(M)\n\n[1] \"matrix\" \"array\" \n\n# using cbind (or rbind)\nN &lt;- cbind(c(327,31),c(50,192))\ndimnames(N) = list(c(\"Positive\",\"Negative\"),c(\"Disease\",\"NoDisease\"))\nN\n\n         Disease NoDisease\nPositive     327        50\nNegative      31       192\n\nstr(N)\n\n num [1:2, 1:2] 327 31 50 192\n - attr(*, \"dimnames\")=List of 2\n  ..$ : chr [1:2] \"Positive\" \"Negative\"\n  ..$ : chr [1:2] \"Disease\" \"NoDisease\"\n\n# using dim()\nP &lt;- c(327,50,31,192)\ndim(P) &lt;- c(2,2)\ndimnames(P) = list(c(\"Positive\",\"Negative\"),c(\"Disease\",\"NoDisease\"))\nP\n\n         Disease NoDisease\nPositive     327        31\nNegative      50       192\n\nclass(P)\n\n[1] \"matrix\" \"array\""
  },
  {
    "objectID": "tables/frequencyTables.html",
    "href": "tables/frequencyTables.html",
    "title": "tables-frequency",
    "section": "",
    "text": "library(tidyverse)\ntb &lt;- tribble(\n  ~id, ~gender, ~lgrades,\n  \"SD101\", 'M', \"C+\",\n  \"SD102\", 'F', \"F\",\n  \"SD103\", 'F', \"B\",\n  \"SD104\", 'F', \"A+\",\n  \"SD105\", 'M', \"B\",\n  \"SD106\", 'F', \"B-\",\n  \"SD107\", 'M', \"A\",\n  \"SD108\", 'M', \"C\",\n  \"SD109\", 'M', \"B-\",\n  \"SD110\", 'M', \"B-\",\n)\ntb\n\n# A tibble: 10 × 3\n   id    gender lgrades\n   &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;  \n 1 SD101 M      C+     \n 2 SD102 F      F      \n 3 SD103 F      B      \n 4 SD104 F      A+     \n 5 SD105 M      B      \n 6 SD106 F      B-     \n 7 SD107 M      A      \n 8 SD108 M      C      \n 9 SD109 M      B-     \n10 SD110 M      B-     \n\n\n\n1. Frequency table (also called a contingency table)\n\n# use table function to count frequency in lgrades\ntab1 &lt;- table(tb$lgrades) \ntab1\n\n\n A A+  B B-  C C+  F \n 1  1  2  3  1  1  1 \n\n\n\n# redo table back into a dataframe\ndf2 &lt;- data.frame(tab1)\nnames(df2) &lt;- c(\"grades\",\"freq\")\ndf2\n\n  grades freq\n1      A    1\n2     A+    1\n3      B    2\n4     B-    3\n5      C    1\n6     C+    1\n7      F    1\n\n\n\n\n2. Two-way Contingency table (gender-grades)\n\ntwoWay &lt;- table(tb$gender,tb$lgrades)\ntwoWay\n\n   \n    A A+ B B- C C+ F\n  F 0  1 1  1 0  0 1\n  M 1  0 1  2 1  1 0\n\n\n\n\n3. Look up - filter\nfind those that have B-\n\nfilter(tb,lgrades==\"B-\")\n\n# A tibble: 3 × 3\n  id    gender lgrades\n  &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;  \n1 SD106 F      B-     \n2 SD109 M      B-     \n3 SD110 M      B-"
  },
  {
    "objectID": "tables/frequency.html",
    "href": "tables/frequency.html",
    "title": "frequency",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\ntb &lt;- read_csv(\"id, gender, lgrades\n  SD101, M, C+\n  SD102, F, F\n  SD103, F, B\n  SD104, F, A+\n  SD105, M, B\n  SD106, F, B-\n  SD107, M, A\n  SD108, M, C\n  SD109, M, B-\n  SD110, M, B-\n\")\nlvlgender= c(\"M\",\"F\")\nlvlgrades= c(\"A+\",\"A\",\"A-\",\"B+\",\"B\",\"B-\",\"C+\",\"C\",\"D+\",\"D\",\"F\")\ntb$gender&lt;-factor(tb$gender, lvlgender)\ntb$lgrades &lt;- factor(tb$lgrades,lvlgrades)\n\n\n\ntb\n\n# A tibble: 10 × 3\n   id    gender lgrades\n   &lt;chr&gt; &lt;fct&gt;  &lt;fct&gt;  \n 1 SD101 M      C+     \n 2 SD102 F      F      \n 3 SD103 F      B      \n 4 SD104 F      A+     \n 5 SD105 M      B      \n 6 SD106 F      B-     \n 7 SD107 M      A      \n 8 SD108 M      C      \n 9 SD109 M      B-     \n10 SD110 M      B-",
    "crumbs": [
      "Tables",
      "frequency"
    ]
  },
  {
    "objectID": "test.html",
    "href": "test.html",
    "title": "WebR",
    "section": "",
    "text": "library(tidyverse)\n\n\n\n\nlibrary(data.table)\nPM &lt;- scan(text=\"45.5 45.3 45.4 44.4 44.6 43.9 44.6 44.0\")\nDC &lt;- scan(text=\"44.2 43.9 44.7 44.2 44.0 43.8 44.6 43.1\")\nPL &lt;- scan(text=\"46.0 45.9 44.8 46.2 45.1 45.5\") # note shorter\n\nnames(PM) &lt;- c(rep(\"PM\",length(PM)))\nnames(DC) &lt;- c(rep(\"DC\",length(DC)))\nnames(PL) &lt;- c(rep(\"PL\",length(PL)))\nvec &lt;- c(PM,DC,PL)\nvec\n\n  PM   PM   PM   PM   PM   PM   PM   PM   DC   DC   DC   DC   DC   DC   DC   DC \n45.5 45.3 45.4 44.4 44.6 43.9 44.6 44.0 44.2 43.9 44.7 44.2 44.0 43.8 44.6 43.1 \n  PL   PL   PL   PL   PL   PL \n46.0 45.9 44.8 46.2 45.1 45.5 \n\ndf &lt;- stack(vec)[2:1]\ndf\n\n   ind values\n1   PM   45.5\n2   PM   45.3\n3   PM   45.4\n4   PM   44.4\n5   PM   44.6\n6   PM   43.9\n7   PM   44.6\n8   PM   44.0\n9   DC   44.2\n10  DC   43.9\n11  DC   44.7\n12  DC   44.2\n13  DC   44.0\n14  DC   43.8\n15  DC   44.6\n16  DC   43.1\n17  PL   46.0\n18  PL   45.9\n19  PL   44.8\n20  PL   46.2\n21  PL   45.1\n22  PL   45.5\n\n\n\n\n\n\nggplot(df, aes(x=ind,y=values,color=ind))+\n  geom_boxplot()+\n  geom_jitter()+\n  theme_bw()"
  },
  {
    "objectID": "tables/contigency.html",
    "href": "tables/contigency.html",
    "title": "tables",
    "section": "",
    "text": "library(tidyverse)"
  },
  {
    "objectID": "tables/contigency.html#libraries",
    "href": "tables/contigency.html#libraries",
    "title": "tables",
    "section": "",
    "text": "library(tidyverse)"
  },
  {
    "objectID": "tables/contigency.html#matrix-table",
    "href": "tables/contigency.html#matrix-table",
    "title": "tables",
    "section": "2 “Matrix” table",
    "text": "2 “Matrix” table\n\n# Matrix: using nrows\nM &lt;- matrix(\n c(327,50,31,192),nrow=2,byrow=TRUE)\ncolnames(M) &lt;- c(\"Disease\",\"NoDisease\")\nrownames(M) &lt;- c(\"Positive\",\"Negative\")\nM\n\n         Disease NoDisease\nPositive     327        50\nNegative      31       192\n\nclass(M)\n\n[1] \"matrix\" \"array\" \n\n# using cbind (or rbind)\nN &lt;- cbind(c(327,31),c(50,192))\ndimnames(N) = list(c(\"Positive\",\"Negative\"),c(\"Disease\",\"NoDisease\"))\nN\n\n         Disease NoDisease\nPositive     327        50\nNegative      31       192\n\nstr(N)\n\n num [1:2, 1:2] 327 31 50 192\n - attr(*, \"dimnames\")=List of 2\n  ..$ : chr [1:2] \"Positive\" \"Negative\"\n  ..$ : chr [1:2] \"Disease\" \"NoDisease\"\n\n# using dim()\nP &lt;- c(327,50,31,192)\ndim(P) &lt;- c(2,2)\ndimnames(P) = list(c(\"Positive\",\"Negative\"),c(\"Disease\",\"NoDisease\"))\nP\n\n         Disease NoDisease\nPositive     327        31\nNegative      50       192\n\nclass(P)\n\n[1] \"matrix\" \"array\""
  },
  {
    "objectID": "tables/contigency.html#simple-table-from-a-dataframe",
    "href": "tables/contigency.html#simple-table-from-a-dataframe",
    "title": "tables",
    "section": "3 Simple Table from a dataframe",
    "text": "3 Simple Table from a dataframe\n\ndf &lt;- data.frame(\n  c(327,50),\n  c(50,192)\n)\ncolnames(df) &lt;- c(\"Disease\",\"NoDisease\")\nrownames(df) &lt;- c(\"Positive\",\"Negative\")\ndf\n\n         Disease NoDisease\nPositive     327        50\nNegative      50       192\n\nclass(df)\n\n[1] \"data.frame\"\n\ntab &lt;- as.table(as.matrix(df))\ntab\n\n         Disease NoDisease\nPositive     327        50\nNegative      50       192\n\nclass(tab)\n\n[1] \"table\"\n\naddmargins(tab)\n\n         Disease NoDisease Sum\nPositive     327        50 377\nNegative      50       192 242\nSum          377       242 619"
  },
  {
    "objectID": "tables/contigency.html#xtabs-require-dataframe-or-tibble",
    "href": "tables/contigency.html#xtabs-require-dataframe-or-tibble",
    "title": "tables",
    "section": "4 xtabs require dataframe or tibble",
    "text": "4 xtabs require dataframe or tibble\n\n# tribble is easier to enter table values by rows\ndf2 &lt;-tribble(\n  ~Predicted, ~Actual, ~Values,\n  \"Positive\", \"Disease\", 327,\n  \"Positive\", \"NoDisease\", 50,\n  \"Negative\", \"Disease\", 50,\n  \"Negative\", \"NoDisease\", 192\n)\ndf2\n\n# A tibble: 4 × 3\n  Predicted Actual    Values\n  &lt;chr&gt;     &lt;chr&gt;      &lt;dbl&gt;\n1 Positive  Disease      327\n2 Positive  NoDisease     50\n3 Negative  Disease       50\n4 Negative  NoDisease    192\n\n# xtabs require a dataframe or tibble, returns table\ntab2 &lt;- xtabs( Values ~ Predicted + Actual, data=df2)\naddmargins(tab2)\n\n          Actual\nPredicted  Disease NoDisease Sum\n  Negative      50       192 242\n  Positive     327        50 377\n  Sum          377       242 619\n\nclass(tab2)\n\n[1] \"xtabs\" \"table\"\n\n# a nicer table (maybe)\nftable(tab2)\n\n          Actual Disease NoDisease\nPredicted                         \nNegative              50       192\nPositive             327        50"
  },
  {
    "objectID": "datatypes/table.html",
    "href": "datatypes/table.html",
    "title": "table-frequency",
    "section": "",
    "text": "library(tidyverse)",
    "crumbs": [
      "Datatypes",
      "table"
    ]
  },
  {
    "objectID": "datatypes/table.html#data",
    "href": "datatypes/table.html#data",
    "title": "table-frequency",
    "section": "1 Data",
    "text": "1 Data\n\n\nCode\ntb &lt;- read_csv(\"id, gender, lgrades\n               SD101, M, C+\n               SD102, F, F\n               SD103, F, B\n               SD104, F, A+\n               SD105, M, B\n               SD106, F, B-\n               SD107, M, A\n               SD108, M, C\n               SD109, M, B-\n               SD110, M, B-\n               \")\nlvlgender &lt;- c(\"M\",\"F\")\nlvlgrades &lt;- c(\"A+\",\"A\",\"A-\",\"B+\",\"B\",\"B-\",\"C+\",\"C\",\"D+\",\"D\",\"F\")\ntb$gender &lt;- factor(tb$gender, levels=lvlgender)\ntb$lgrades &lt;- factor(tb$lgrades, levels=lvlgrades)\ntb\n\n\n# A tibble: 10 × 3\n   id    gender lgrades\n   &lt;chr&gt; &lt;fct&gt;  &lt;fct&gt;  \n 1 SD101 M      C+     \n 2 SD102 F      F      \n 3 SD103 F      B      \n 4 SD104 F      A+     \n 5 SD105 M      B      \n 6 SD106 F      B-     \n 7 SD107 M      A      \n 8 SD108 M      C      \n 9 SD109 M      B-     \n10 SD110 M      B-",
    "crumbs": [
      "Datatypes",
      "table"
    ]
  },
  {
    "objectID": "datatypes/table.html#two-way-contingency-table",
    "href": "datatypes/table.html#two-way-contingency-table",
    "title": "tables-frequency",
    "section": "2 two-way Contingency table",
    "text": "2 two-way Contingency table\n\n# gender-lgrades\ntwoWay &lt;- table(tb$gender, tb$lgrades)\ntwoWay\n\n   \n    A+ A A- B+ B B- C+ C D+ D F\n  M  0 1  0  0 1  0  1 0  0 0 0\n  F  1 0  0  0 2  1  0 0  0 0 1",
    "crumbs": [
      "Datatypes",
      "table"
    ]
  },
  {
    "objectID": "datatypes/table.html#frequency-table-also-called-a-contingency-table",
    "href": "datatypes/table.html#frequency-table-also-called-a-contingency-table",
    "title": "tables-frequency",
    "section": "4 Frequency table (also called a contingency table)",
    "text": "4 Frequency table (also called a contingency table)\n\n# use table function to count frequency in lgrades\ntable1 &lt;- table(tb$lgrades) \ntable1\n\n\nA+  A A- B+  B B- C+  C D+  D  F \n 1  1  0  0  3  1  1  0  0  0  1 \n\nclass(table1)\n\n[1] \"table\"\n\n\n\n# redo table back into a dataframe\ndf2 &lt;- data.frame(table1)\nnames(df2) &lt;- c(\"grades\",\"freq\")\ndf2\n\n   grades freq\n1      A+    1\n2       A    1\n3      A-    0\n4      B+    0\n5       B    3\n6      B-    1\n7      C+    1\n8       C    0\n9      D+    0\n10      D    0\n11      F    1",
    "crumbs": [
      "Datatypes",
      "table"
    ]
  },
  {
    "objectID": "datatypes/table.html#one-way-contigency",
    "href": "datatypes/table.html#one-way-contigency",
    "title": "tables-frequency",
    "section": "2 one-way contigency",
    "text": "2 one-way contigency\n\noneWay &lt;- table(tb$lgrades)\noneWay\n\n\nA+  A A- B+  B B- C+  C D+  D  F \n 1  1  0  0  2  3  1  1  0  0  1 \n\nclass(oneWay)\n\n[1] \"table\"",
    "crumbs": [
      "Datatypes",
      "table"
    ]
  },
  {
    "objectID": "datatypes/table.html#two-way-contigency",
    "href": "datatypes/table.html#two-way-contigency",
    "title": "tables-frequency",
    "section": "3 two-way contigency",
    "text": "3 two-way contigency\n\n# gender-lgrades\ntwoWay &lt;- table(tb$gender, tb$lgrades)\ntwoWay\n\n   \n    A+ A A- B+ B B- C+ C D+ D F\n  M  0 1  0  0 1  2  1 1  0 0 0\n  F  1 0  0  0 1  1  0 0  0 0 1",
    "crumbs": [
      "Datatypes",
      "table"
    ]
  },
  {
    "objectID": "datatypes/table.html#grades-freq-in-dataframe",
    "href": "datatypes/table.html#grades-freq-in-dataframe",
    "title": "table-frequency",
    "section": "4 grades-freq in dataframe",
    "text": "4 grades-freq in dataframe\n\n# redo table back into a dataframe\ndf &lt;- data.frame(oneWay)\nnames(df) &lt;- c(\"grades\",\"freq\")\ndf\n\n   grades freq\n1      A+    1\n2       A    1\n3      A-    0\n4      B+    0\n5       B    2\n6      B-    3\n7      C+    1\n8       C    1\n9      D+    0\n10      D    0\n11      F    1",
    "crumbs": [
      "Datatypes",
      "table"
    ]
  },
  {
    "objectID": "datatypes/table.html#column-plot",
    "href": "datatypes/table.html#column-plot",
    "title": "table-frequency",
    "section": "5 column plot",
    "text": "5 column plot\n\nggplot(df, aes(x=grades, y=freq))+\n  geom_col(fill=\"lightblue\", color=\"black\")",
    "crumbs": [
      "Datatypes",
      "table"
    ]
  },
  {
    "objectID": "datatypes/table.html#one-way-contingency",
    "href": "datatypes/table.html#one-way-contingency",
    "title": "table-frequency",
    "section": "2 one-way contingency",
    "text": "2 one-way contingency\n\noneWay &lt;- table(tb$lgrades)\noneWay\n\n\nA+  A A- B+  B B- C+  C D+  D  F \n 1  1  0  0  2  3  1  1  0  0  1 \n\nclass(oneWay)\n\n[1] \"table\"",
    "crumbs": [
      "Datatypes",
      "table"
    ]
  },
  {
    "objectID": "datatypes/table.html#two-way-contingency",
    "href": "datatypes/table.html#two-way-contingency",
    "title": "table-frequency",
    "section": "3 two-way contingency",
    "text": "3 two-way contingency\n\n# gender-lgrades\ntwoWay &lt;- table(tb$gender, tb$lgrades)\ntwoWay\n\n   \n    A+ A A- B+ B B- C+ C D+ D F\n  M  0 1  0  0 1  2  1 1  0 0 0\n  F  1 0  0  0 1  1  0 0  0 0 1\n\nclass(twoWay)\n\n[1] \"table\"",
    "crumbs": [
      "Datatypes",
      "table"
    ]
  },
  {
    "objectID": "tables/gt.html#another-table",
    "href": "tables/gt.html#another-table",
    "title": "gt",
    "section": "Another table",
    "text": "Another table\n\ndf &lt;- read_csv(\"Predicted, Actual, Values\n               Positive, Disease, 327\n               Positive, NoDisease, 50\n               Negative, Disease, 50\n               Negative, NoDisease, 192\n               \")\ndf$Predicted &lt;- as.factor(df$Predicted)\ndf$Actual &lt;- as.factor(df$Actual)\ndf\n\n# A tibble: 4 × 3\n  Predicted Actual    Values\n  &lt;fct&gt;     &lt;fct&gt;      &lt;dbl&gt;\n1 Positive  Disease      327\n2 Positive  NoDisease     50\n3 Negative  Disease       50\n4 Negative  NoDisease    192\n\ngt(df)\n\n\n\n\n\n\n\nPredicted\nActual\nValues\n\n\n\n\nPositive\nDisease\n327\n\n\nPositive\nNoDisease\n50\n\n\nNegative\nDisease\n50\n\n\nNegative\nNoDisease\n192",
    "crumbs": [
      "Tables",
      "gt"
    ]
  },
  {
    "objectID": "tables/contingency.html",
    "href": "tables/contingency.html",
    "title": "2x2 Contingency Table",
    "section": "",
    "text": "library(tidyverse)",
    "crumbs": [
      "Tables",
      "contingency"
    ]
  },
  {
    "objectID": "tables/contingency.html#libraries",
    "href": "tables/contingency.html#libraries",
    "title": "2x2 Contingency Table",
    "section": "",
    "text": "library(tidyverse)",
    "crumbs": [
      "Tables",
      "contingency"
    ]
  },
  {
    "objectID": "tables/contingency.html#matrix-table",
    "href": "tables/contingency.html#matrix-table",
    "title": "2x2 Contingency Table",
    "section": "2 “Matrix” table",
    "text": "2 “Matrix” table\n\n# Matrix: using nrows\nM &lt;- matrix(\n c(327,50,31,192),nrow=2,byrow=TRUE)\ncolnames(M) &lt;- c(\"Disease\",\"NoDisease\")\nrownames(M) &lt;- c(\"Positive\",\"Negative\")\nM\n\n         Disease NoDisease\nPositive     327        50\nNegative      31       192\n\nclass(M)\n\n[1] \"matrix\" \"array\" \n\n# using cbind (or rbind)\nN &lt;- cbind(c(327,31),c(50,192))\ndimnames(N) = list(c(\"Positive\",\"Negative\"),c(\"Disease\",\"NoDisease\"))\nN\n\n         Disease NoDisease\nPositive     327        50\nNegative      31       192\n\nstr(N)\n\n num [1:2, 1:2] 327 31 50 192\n - attr(*, \"dimnames\")=List of 2\n  ..$ : chr [1:2] \"Positive\" \"Negative\"\n  ..$ : chr [1:2] \"Disease\" \"NoDisease\"\n\n# using dim()\nP &lt;- c(327,50,31,192)\ndim(P) &lt;- c(2,2)\ndimnames(P) = list(c(\"Positive\",\"Negative\"),c(\"Disease\",\"NoDisease\"))\nP\n\n         Disease NoDisease\nPositive     327        31\nNegative      50       192\n\nclass(P)\n\n[1] \"matrix\" \"array\"",
    "crumbs": [
      "Tables",
      "contingency"
    ]
  },
  {
    "objectID": "tables/contingency.html#simple-table-from-a-dataframe",
    "href": "tables/contingency.html#simple-table-from-a-dataframe",
    "title": "2x2 Contingency Table",
    "section": "5 Simple Table from a dataframe",
    "text": "5 Simple Table from a dataframe\n\ndf &lt;- data.frame(\n  c(327,50),\n  c(50,192)\n)\ncolnames(df) &lt;- c(\"Disease\",\"NoDisease\")\nrownames(df) &lt;- c(\"Positive\",\"Negative\")\ndf\n\n         Disease NoDisease\nPositive     327        50\nNegative      50       192\n\nclass(df)\n\n[1] \"data.frame\"\n\ntab &lt;- as.table(as.matrix(df))\ntab\n\n         Disease NoDisease\nPositive     327        50\nNegative      50       192\n\nclass(tab)\n\n[1] \"table\"\n\naddmargins(tab)\n\n         Disease NoDisease Sum\nPositive     327        50 377\nNegative      50       192 242\nSum          377       242 619",
    "crumbs": [
      "Tables",
      "contingency"
    ]
  },
  {
    "objectID": "tables/contingency.html#xtabs-require-dataframe-or-tibble",
    "href": "tables/contingency.html#xtabs-require-dataframe-or-tibble",
    "title": "2x2 Contingency Table",
    "section": "6 xtabs require dataframe or tibble",
    "text": "6 xtabs require dataframe or tibble\n\n# tribble is easier to enter table values by rows\ndf2 &lt;-tribble(\n  ~Predicted, ~Actual, ~Values,\n  \"Positive\", \"Disease\", 327,\n  \"Positive\", \"NoDisease\", 50,\n  \"Negative\", \"Disease\", 50,\n  \"Negative\", \"NoDisease\", 192\n)\ndf2\n\n# A tibble: 4 × 3\n  Predicted Actual    Values\n  &lt;chr&gt;     &lt;chr&gt;      &lt;dbl&gt;\n1 Positive  Disease      327\n2 Positive  NoDisease     50\n3 Negative  Disease       50\n4 Negative  NoDisease    192\n\n# xtabs require a dataframe or tibble, returns table\ntab2 &lt;- xtabs( Values ~ Predicted + Actual, data=df2)\naddmargins(tab2)\n\n          Actual\nPredicted  Disease NoDisease Sum\n  Negative      50       192 242\n  Positive     327        50 377\n  Sum          377       242 619\n\nclass(tab2)\n\n[1] \"xtabs\" \"table\"\n\n# a nicer table (maybe)\nftable(tab2)\n\n          Actual Disease NoDisease\nPredicted                         \nNegative              50       192\nPositive             327        50",
    "crumbs": [
      "Tables",
      "contingency"
    ]
  },
  {
    "objectID": "datatypes/factors.html#libraries",
    "href": "datatypes/factors.html#libraries",
    "title": "Factors",
    "section": "",
    "text": "library(tidyverse)",
    "crumbs": [
      "Datatypes",
      "factors"
    ]
  },
  {
    "objectID": "datatypes/factors.html#ordering-factors-in-ggplots",
    "href": "datatypes/factors.html#ordering-factors-in-ggplots",
    "title": "factors",
    "section": "4 Ordering factors in ggplots",
    "text": "4 Ordering factors in ggplots\n\n# problems when you want to plot the categorical variable \n# in a certain (original) order\ntb &lt;- read_csv(\"cancer, age, sex\n               Colorectal, 66, M\n               Lung, 29, M\n               Lung, 21, F\n               Nasal, 17, M\n               Colorectal, 55, F\n               Nasal, 31,F\n               Breast, 37, F\n               Liver, 55, M\n               Liver, 63, F\n               \")\ntb1 &lt;- tb\ntb1$cancer &lt;- factor(tb1$cancer)\nlevels(tb1$cancer)\n\n[1] \"Breast\"     \"Colorectal\" \"Liver\"      \"Lung\"       \"Nasal\"     \n\nggplot(tb1, aes(x=cancer))+\n  geom_bar(fill=\"lightblue\",color=\"blue\")\n\n\n\n\n\n\n\n\n\nor I can order the factor cancer in its original position\n\n\nlibrary(tidyverse)\ntb2 &lt;- tb\ntb2$cancer &lt;- as_factor(tb$cancer)\nlevels(tb2$cancer)\n\n[1] \"Colorectal\" \"Lung\"       \"Nasal\"      \"Breast\"     \"Liver\"     \n\nggplot(tb2, aes(x=cancer))+\n  geom_bar(fill=\"lightblue\",color=\"black\")",
    "crumbs": [
      "Datatypes",
      "factors"
    ]
  },
  {
    "objectID": "datatypes/factors.html#ordering-factors-for-ggplots",
    "href": "datatypes/factors.html#ordering-factors-for-ggplots",
    "title": "Factors",
    "section": "4 Ordering factors for ggplots",
    "text": "4 Ordering factors for ggplots\n\n# problems when you want to plot the categorical variable \n# in a certain (original) order\ntb &lt;- read_csv(\"cancer, age, sex\n               Colorectal, 66, M\n               Lung, 29, M\n               Liver, 21, F\n               Nasal, 17, M\n               Colorectal, 55, F\n               Nasal, 31,F\n               Breast, 37, F\n               Liver, 55, M\n               Liver, 63, F\n               \")\ntb1 &lt;- tb\ntb1$cancer &lt;-as.factor(tb1$cancer)\nlevels(tb1$cancer)\n\n[1] \"Breast\"     \"Colorectal\" \"Liver\"      \"Lung\"       \"Nasal\"     \n\nggplot(tb1, aes(x=cancer))+\n  geom_bar(fill=\"lightblue\",color=\"blue\")\n\n\n\n\n\n\n\n\n\nor I can order the factor cancer in its original position\n\n\nlibrary(tidyverse)\ntb2 &lt;- tb\ntb2$cancer &lt;- as_factor(tb2$cancer)\nlevels(tb2$cancer)\n\n[1] \"Colorectal\" \"Lung\"       \"Liver\"      \"Nasal\"      \"Breast\"    \n\nggplot(tb2, aes(x=cancer))+\n  geom_bar(fill=\"lightblue\",color=\"black\")",
    "crumbs": [
      "Datatypes",
      "factors"
    ]
  },
  {
    "objectID": "ggplots/facets.html#libraries",
    "href": "ggplots/facets.html#libraries",
    "title": "Facets",
    "section": "1 Libraries",
    "text": "1 Libraries\n\nlibrary(tidyverse)",
    "crumbs": [
      "ggPlots",
      "facets"
    ]
  },
  {
    "objectID": "datasets/diabetes/diabetes.html",
    "href": "datasets/diabetes/diabetes.html",
    "title": "diabetes",
    "section": "",
    "text": "library(tidyverse)"
  },
  {
    "objectID": "datasets/diabetes/diabetes.html#libraries",
    "href": "datasets/diabetes/diabetes.html#libraries",
    "title": "diabetes",
    "section": "",
    "text": "library(tidyverse)"
  },
  {
    "objectID": "datasets/diabetes/diabetes.html#data",
    "href": "datasets/diabetes/diabetes.html#data",
    "title": "diabetes",
    "section": "2 Data",
    "text": "2 Data\n\n# the diabetes.csv file is put here together with the R file.\nlibrary(rrcov)\ndata(diabetes)\nhead(diabetes)\n\n    rw fpg glucose insulin sspg  group\n1 0.81  80     356     124   55 normal\n2 0.95  97     289     117   76 normal\n3 0.94 105     319     143  105 normal\n4 1.04  90     356     199  108 normal\n5 1.00  90     323     240  143 normal\n6 0.76  86     381     157  165 normal"
  },
  {
    "objectID": "datasets/diabetes/diabetes.html#plots",
    "href": "datasets/diabetes/diabetes.html#plots",
    "title": "diabetes",
    "section": "3 Plots",
    "text": "3 Plots\n\nlibrary(\"reshape2\")\n ggplot( melt(diabetes, id.vars = \"group\"), \n         aes(x = value, col = group)) +\n geom_density() + \n facet_wrap( ~variable, ncol = 2, scales = \"free\") +\n theme(legend.position = \"bottom\")"
  },
  {
    "objectID": "datasets/diabetes/diabetes.html#linear-discrimination",
    "href": "datasets/diabetes/diabetes.html#linear-discrimination",
    "title": "diabetes",
    "section": "4 Linear Discrimination",
    "text": "4 Linear Discrimination\n\nggdb = ggplot(diabetes, aes(x = sspg, y = glucose)) +\n  geom_point(aes(colour = group))\nggdb\n\n\n\n\n\n\n\n\n\nlibrary(MASS)\ndiabetes_lda &lt;- lda(group ~ sspg + glucose, data=diabetes)\ndiabetes_lda\n\nCall:\nlda(group ~ sspg + glucose, data = diabetes)\n\nPrior probabilities of groups:\n   normal  chemical     overt \n0.5241379 0.2482759 0.2275862 \n\nGroup means:\n             sspg   glucose\nnormal   114.0000  349.9737\nchemical 208.9722  493.9444\novert    318.8788 1043.7576\n\nCoefficients of linear discriminants:\n                LD1         LD2\nsspg    0.005036943 -0.01539281\nglucose 0.005461400  0.00449050\n\nProportion of trace:\n   LD1    LD2 \n0.9683 0.0317"
  },
  {
    "objectID": "datasets/diabetes/diabetes.html#prediction",
    "href": "datasets/diabetes/diabetes.html#prediction",
    "title": "diabetes",
    "section": "5 Prediction",
    "text": "5 Prediction\n\nghat &lt;- predict(diabetes_lda)$class\ntable(ghat, diabetes$group)\n\n          \nghat       normal chemical overt\n  normal       69       12     1\n  chemical      7       24     6\n  overt         0        0    26\n\nmean(ghat != diabetes$group)\n\n[1] 0.1793103"
  },
  {
    "objectID": "datasets/diabetes/diabetes.html#visualise-lda",
    "href": "datasets/diabetes/diabetes.html#visualise-lda",
    "title": "diabetes",
    "section": "6 Visualise LDA",
    "text": "6 Visualise LDA\n\nmake1Dgrid = function(x) {\n  rg = grDevices::extendrange(x)\n  seq(from = rg[1], to = rg[2], length.out = 100)\n}\ndiabetes_grid = with(diabetes,\n  expand.grid(sspg = make1Dgrid(sspg),\n              glucose = make1Dgrid(glucose)))\n\ndiabetes_grid$ghat =\n  predict(diabetes_lda, newdata = diabetes_grid)$class\n\ncenters = diabetes_lda$means\n\nunitcircle = exp(1i * seq(0, 2*pi, length.out = 360)) |&gt;\n          (\\(z) cbind(Re(z), Im(z)))() \nellipse = unitcircle %*% solve(diabetes_lda$scaling) |&gt; as_tibble()\n\nlibrary(\"dplyr\")\nellipses = lapply(rownames(centers), function(gr) {\n  mutate(ellipse,\n     sspg    = sspg    + centers[gr, \"sspg\"],\n     glucose = glucose + centers[gr, \"glucose\"],\n     group   = gr)\n}) |&gt; bind_rows()\n\nggdb + geom_raster(aes(fill = ghat),\n            data = diabetes_grid, alpha = 0.25, interpolate = TRUE) +\n    geom_point(data = as_tibble(centers), pch = \"+\", size = 8) +\n    geom_path(aes(colour = group), data = ellipses) +\n    scale_x_continuous(expand = c(0, 0)) +\n    scale_y_continuous(expand = c(0, 0))"
  },
  {
    "objectID": "workflow.html#quarto-default-template",
    "href": "workflow.html#quarto-default-template",
    "title": "workflow",
    "section": "3 Quarto default template",
    "text": "3 Quarto default template"
  },
  {
    "objectID": "workflow.html#quarto-default-document-template",
    "href": "workflow.html#quarto-default-document-template",
    "title": "workflow",
    "section": "3 Quarto default document template",
    "text": "3 Quarto default document template"
  },
  {
    "objectID": "ggplots/patchwork.html",
    "href": "ggplots/patchwork.html",
    "title": "patchwork",
    "section": "",
    "text": "library(tidyverse)\nlibrary(patchwork)",
    "crumbs": [
      "ggPlots",
      "patchwork"
    ]
  },
  {
    "objectID": "ggplots/patchwork.html#libraries",
    "href": "ggplots/patchwork.html#libraries",
    "title": "patchwork",
    "section": "",
    "text": "library(tidyverse)\nlibrary(patchwork)",
    "crumbs": [
      "ggPlots",
      "patchwork"
    ]
  },
  {
    "objectID": "ggplots/patchwork.html#data",
    "href": "ggplots/patchwork.html#data",
    "title": "patchwork",
    "section": "2 Data",
    "text": "2 Data\n\nhead(iris)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa",
    "crumbs": [
      "ggPlots",
      "patchwork"
    ]
  },
  {
    "objectID": "ggplots/patchwork.html#facet_wrap",
    "href": "ggplots/patchwork.html#facet_wrap",
    "title": "patchwork",
    "section": "3 facet_wrap",
    "text": "3 facet_wrap\n\nspecify number of columns (ncol=2) and it will wrap to next row of plots after nth (usually 2 to 4) column.\n\n\np &lt;- ggplot(iris_long, aes(x=Species, y=cm))+\n  geom_boxplot(aes(fill=Species))\np+facet_wrap(~Leaves, ncol=2)"
  },
  {
    "objectID": "ggplots/patchwork.html#facet_grid",
    "href": "ggplots/patchwork.html#facet_grid",
    "title": "patchwork",
    "section": "4 facet_grid",
    "text": "4 facet_grid\n\nproduces 2-d grid of panels defined by variables for rows and columns.\n\n\nq &lt;- ggplot(iris_long, aes(x=Species, y=cm))+\n  geom_boxplot(aes(fill=Species))\nq + facet_grid(cols = vars(Leaves))"
  },
  {
    "objectID": "ggplots/patchwork.html#four-boxplots",
    "href": "ggplots/patchwork.html#four-boxplots",
    "title": "patchwork",
    "section": "3 Four boxplots",
    "text": "3 Four boxplots\n\ng0 &lt;- ggplot(iris, aes(x=Sepal.Length,y=Sepal.Width))+\n      geom_point(color=\"brown\")+\n      ggtitle(\"Scatterplot for all Species\")\ng1 &lt;- ggplot(iris, aes(y=Sepal.Length))+\n      geom_boxplot()+\n      ggtitle(\"Boxplot for all Species\")\ng2 &lt;- ggplot(iris, aes(y=Sepal.Width))+\n      geom_boxplot()+\n      ggtitle(\"Boxplot for all Species\")\ng0/(g1+g2)\n\n\n\n\n\n\n\n\n\ng0|(g1/g2)"
  },
  {
    "objectID": "ggplots/patchwork.html#three-boxplots",
    "href": "ggplots/patchwork.html#three-boxplots",
    "title": "patchwork",
    "section": "3 Three boxplots",
    "text": "3 Three boxplots\n\np1 &lt;- ggplot(iris, aes(x=Sepal.Length,y=Sepal.Width, color=Species))+\n      geom_point()+\n      ggtitle(\"Scatterplot for all Species\")\np2 &lt;- ggplot(iris, aes(y=Sepal.Length,color=Species))+\n      geom_boxplot()+\n      ggtitle(\"Sepal Length Boxplot\")\np3 &lt;- ggplot(iris, aes(y=Sepal.Width, color=Species))+\n      geom_boxplot()+\n      ggtitle(\"Sepal Width Boxplot\")\np1/(p2+p3)",
    "crumbs": [
      "ggPlots",
      "patchwork"
    ]
  },
  {
    "objectID": "ggplots/basics.html",
    "href": "ggplots/basics.html",
    "title": "basicPlots",
    "section": "",
    "text": "plots\n\n\n\n\nscatterplot: geom_point()\nscatterlines : geom_line()\nbar count: geom_bar()\ncolumn: geom_col()\nfrequency: geom_histogram()\nboxplot: geom_boxplot()",
    "crumbs": [
      "ggPlots",
      "basics"
    ]
  },
  {
    "objectID": "ggplots/basics.html#data",
    "href": "ggplots/basics.html#data",
    "title": "ggplot-Basics",
    "section": "1 Data",
    "text": "1 Data\n\ngirth &lt;- c(40,45,53,55,63,65,67)\nheight &lt;- c(56.2,33.3,61.2,38.4,47.4,30.0,40.4)\nage &lt;- c(15,18,28,40,55,65,76)\nsex &lt;- c('M','F','M','F','M','M','F')\ndf &lt;- data.frame(girth,height,age,sex)\ndf\n\n  girth height age sex\n1    40   56.2  15   M\n2    45   33.3  18   F\n3    53   61.2  28   M\n4    55   38.4  40   F\n5    63   47.4  55   M\n6    65   30.0  65   M\n7    67   40.4  76   F",
    "crumbs": [
      "ggPlots",
      "basics"
    ]
  },
  {
    "objectID": "ggplots/basics.html#scatterplot",
    "href": "ggplots/basics.html#scatterplot",
    "title": "basicPlots",
    "section": "1 Scatterplot",
    "text": "1 Scatterplot\n\n# 1. Scatter\nlibrary(tidyverse)\nggplot(df, aes(x=girth, y=height, color=tree))+\n  geom_point(size=2)+\n  labs(\n    title=\"Scatter Plot\",\n    subtitle=\"Date: 28 Jul 2024\",\n    x = \"Girth(cm)\",\n    y = \"Height(cm)\"\n  )",
    "crumbs": [
      "ggPlots",
      "basics"
    ]
  },
  {
    "objectID": "ggplots/basics.html#scatterlines",
    "href": "ggplots/basics.html#scatterlines",
    "title": "basicPlots",
    "section": "2 ScatterLines",
    "text": "2 ScatterLines\n\n# 2. ScatterLines\nggplot(df)+\n  xlim(0,100)+\n  ylim(0,80)+\n  # girth lineplot\n  geom_point(x=age,y=girth,shape=21, size=4,fill=\"orange\",alpha=0.4)+\n  geom_line(aes(x=age,y=girth,color=\"girth\"),show.legend=FALSE)+\n  # height lineplot\n  geom_point(x=age,y=height,shape=21, size=4,fill=\"yellow\")+\n  geom_line(aes(x=age,y=height,color=\"height\"),show.legend=FALSE)+\n  # add colors\n  scale_color_manual(values=c(\"red\",\"blue\"))+\n  ggtitle(\"ScatterLines\")+\n  xlab(\"age (years)\")+\n  ylab(\"girth-height (cm)\")+\n  theme_bw()",
    "crumbs": [
      "ggPlots",
      "basics"
    ]
  },
  {
    "objectID": "ggplots/basics.html#barplot",
    "href": "ggplots/basics.html#barplot",
    "title": "basicPlots",
    "section": "3 BarPlot",
    "text": "3 BarPlot\n\n# barplot\ndirection = c('N','S','E','W','W','E','W','E','E','E','E','S','S','N','N','W','E','E','N','N','N','S','E','W','W','E','W','E','E','E')\nspeed = rnorm(30, 5, 0.2)\ndfWind &lt;- data.frame(direction,speed)\nstr(dfWind)\n\n'data.frame':   30 obs. of  2 variables:\n $ direction: chr  \"N\" \"S\" \"E\" \"W\" ...\n $ speed    : num  5.32 4.9 5.32 5.1 5.43 ...\n\n# indicate x\n# counting on y is automatic\n\nggplot(dfWind,aes(x=direction, fill=direction))+\n  geom_bar(color=\"black\")+\n  labs(\n    title=\"BarPlot\",\n    subtitle=\"auto counting\"\n  )",
    "crumbs": [
      "ggPlots",
      "basics"
    ]
  },
  {
    "objectID": "ggplots/basics.html#columnplot",
    "href": "ggplots/basics.html#columnplot",
    "title": "basicPlots",
    "section": "4 ColumnPlot",
    "text": "4 ColumnPlot\n\nschool &lt;- c(\"NSHD\",\"SHBS\",\"SBIZ\",\"LAW\")\nnumSG &lt;- c(68,140,90,55)\ndf2 &lt;- data.frame(x=school,y=numSG)\ndf2\n\n     x   y\n1 NSHD  68\n2 SHBS 140\n3 SBIZ  90\n4  LAW  55\n\n# both x and y must be indicated\nggplot(df2, aes(x=school, y=numSG, fill=school))+\n  labs(\n    title=\"ColumnPlot\",\n    subtitle=\"yValues\")+\n  geom_col(color=\"gray\")+\n  scale_fill_manual(values=c(\"lightgreen\",\"yellow\",\"lightblue\",\"purple\"))+\n  geom_text(aes(label=numSG),nudge_y=10)+\n  ylim(0,180)+\n  theme_bw()",
    "crumbs": [
      "ggPlots",
      "basics"
    ]
  },
  {
    "objectID": "ggplots/basics.html#histogram",
    "href": "ggplots/basics.html#histogram",
    "title": "basicPlots",
    "section": "5 Histogram",
    "text": "5 Histogram\n\n  str(dfWind)\n\n'data.frame':   30 obs. of  2 variables:\n $ direction: chr  \"N\" \"S\" \"E\" \"W\" ...\n $ speed    : num  5.32 4.9 5.32 5.1 5.43 ...\n\n  head(dfWind)\n\n  direction    speed\n1         N 5.318754\n2         S 4.902615\n3         E 5.322361\n4         W 5.102295\n5         W 5.428915\n6         E 5.273065\n\n  ggplot(dfWind, aes(x=speed))+\n    geom_histogram(bins = 8, fill=\"lightgray\",color=\"black\")+\n    labs(\n      title=\"Histogram\",\n      subtitle = \"bins=8\",\n      xlab = \"Wind Speed\",\n      ylab = \"Frequency\"\n    )",
    "crumbs": [
      "ggPlots",
      "basics"
    ]
  },
  {
    "objectID": "ggplots/basics.html#boxplot",
    "href": "ggplots/basics.html#boxplot",
    "title": "basicPlots",
    "section": "6 BoxPlot",
    "text": "6 BoxPlot\n\nhead(faithful)\n\n  eruptions waiting\n1     3.600      79\n2     1.800      54\n3     3.333      74\n4     2.283      62\n5     4.533      85\n6     2.883      55\n\nsummary(faithful)\n\n   eruptions        waiting    \n Min.   :1.600   Min.   :43.0  \n 1st Qu.:2.163   1st Qu.:58.0  \n Median :4.000   Median :76.0  \n Mean   :3.488   Mean   :70.9  \n 3rd Qu.:4.454   3rd Qu.:82.0  \n Max.   :5.100   Max.   :96.0  \n\nggplot(faithful, aes(y=waiting))+\n  geom_boxplot(fill=\"lightblue\", width=0.5)+\n  xlim(-1,1)+\n  ggtitle(\"BoxPlot for waiting times (mins)\")",
    "crumbs": [
      "ggPlots",
      "basics"
    ]
  },
  {
    "objectID": "datasets/mtcars/mtcars.html",
    "href": "datasets/mtcars/mtcars.html",
    "title": "mtcars",
    "section": "",
    "text": "Libraries\n\n\nData\n\nhead(cars)\n\n  speed dist\n1     4    2\n2     4   10\n3     7    4\n4     7   22\n5     8   16\n6     9   10\n\nhead(faithful)\n\n  eruptions waiting\n1     3.600      79\n2     1.800      54\n3     3.333      74\n4     2.283      62\n5     4.533      85\n6     2.883      55\n\nhead(airquality)\n\n  Ozone Solar.R Wind Temp Month Day\n1    41     190  7.4   67     5   1\n2    36     118  8.0   72     5   2\n3    12     149 12.6   74     5   3\n4    18     313 11.5   62     5   4\n5    NA      NA 14.3   56     5   5\n6    28      NA 14.9   66     5   6\n\nhead(mtcars)\n\n                   mpg cyl disp  hp drat    wt  qsec vs am gear carb\nMazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\nHornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\nHornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2\nValiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1"
  },
  {
    "objectID": "datasets/baseRData/baseRData.html#baser-sample-datasets",
    "href": "datasets/baseRData/baseRData.html#baser-sample-datasets",
    "title": "baseR Datasets",
    "section": "",
    "text": "data() # will popup all datasets",
    "crumbs": [
      "DataSets",
      "baseRData"
    ]
  },
  {
    "objectID": "datasets/baseRData/baseRData.html#cars",
    "href": "datasets/baseRData/baseRData.html#cars",
    "title": "baseR Datasets",
    "section": "",
    "text": "# 50 obs. of 2 variables\nhead(cars)\n\n  speed dist\n1     4    2\n2     4   10\n3     7    4\n4     7   22\n5     8   16\n6     9   10",
    "crumbs": [
      "DataSets",
      "baseRData"
    ]
  },
  {
    "objectID": "datasets/baseRData/baseRData.html#faithful",
    "href": "datasets/baseRData/baseRData.html#faithful",
    "title": "baseR Datasets",
    "section": "2 faithful",
    "text": "2 faithful\n\n# 272 obs. of 2 variables\nhead(faithful)\n\n  eruptions waiting\n1     3.600      79\n2     1.800      54\n3     3.333      74\n4     2.283      62\n5     4.533      85\n6     2.883      55",
    "crumbs": [
      "DataSets",
      "baseRData"
    ]
  },
  {
    "objectID": "datasets/baseRData/baseRData.html#trees",
    "href": "datasets/baseRData/baseRData.html#trees",
    "title": "baseR Datasets",
    "section": "3 trees",
    "text": "3 trees\n\n# 31 obs. of  3 variables\nhead(trees)\n\n  Girth Height Volume\n1   8.3     70   10.3\n2   8.6     65   10.3\n3   8.8     63   10.2\n4  10.5     72   16.4\n5  10.7     81   18.8\n6  10.8     83   19.7",
    "crumbs": [
      "DataSets",
      "baseRData"
    ]
  },
  {
    "objectID": "datasets/baseRData/baseRData.html#airquality",
    "href": "datasets/baseRData/baseRData.html#airquality",
    "title": "baseR Datasets",
    "section": "4 airquality",
    "text": "4 airquality\n\n# 153 obs. of  6 variables\nhead(airquality)\n\n  Ozone Solar.R Wind Temp Month Day\n1    41     190  7.4   67     5   1\n2    36     118  8.0   72     5   2\n3    12     149 12.6   74     5   3\n4    18     313 11.5   62     5   4\n5    NA      NA 14.3   56     5   5\n6    28      NA 14.9   66     5   6",
    "crumbs": [
      "DataSets",
      "baseRData"
    ]
  },
  {
    "objectID": "datasets/baseRData/baseRData.html#mtcars",
    "href": "datasets/baseRData/baseRData.html#mtcars",
    "title": "baseR Datasets",
    "section": "5 mtcars",
    "text": "5 mtcars\n\n# 32 obs. of 11 variables\nhead(mtcars)\n\n                   mpg cyl disp  hp drat    wt  qsec vs am gear carb\nMazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\nHornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\nHornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2\nValiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1",
    "crumbs": [
      "DataSets",
      "baseRData"
    ]
  },
  {
    "objectID": "datasets.html#libraries",
    "href": "datasets.html#libraries",
    "title": "datasets",
    "section": "",
    "text": "library(tidyverse)  # includes package `ggplot2`\n\nYou can list the datasets available in each package using datasets() from library vcdExtras (which includes vcd).",
    "crumbs": [
      "DataSets"
    ]
  },
  {
    "objectID": "datasets.html#datasets",
    "href": "datasets.html#datasets",
    "title": "datasets",
    "section": "2 Datasets",
    "text": "2 Datasets\n\nlibrary(vcdExtra)  # includes package `vcd``\ndatasets(\"ggplot2\")\n\n             Item      class      dim\n1        diamonds data.frame 53940x10\n2       economics data.frame    574x6\n3  economics_long data.frame   2870x4\n4       faithfuld data.frame   5625x3\n5     luv_colours data.frame    657x4\n6         midwest data.frame   437x28\n7             mpg data.frame   234x11\n8          msleep data.frame    83x11\n9    presidential data.frame     12x4\n10          seals data.frame   1155x4\n11      txhousing data.frame   8602x9\n                                                               Title\n1                           Prices of over 50,000 round cut diamonds\n2                                            US economic time series\n3                                            US economic time series\n4                           2d density estimate of Old Faithful data\n5                                            'colors()' in Luv space\n6                                               Midwest demographics\n7  Fuel economy data from 1999 to 2008 for 38 popular models of cars\n8       An updated and expanded version of the mammals sleep dataset\n9                    Terms of 12 presidents from Eisenhower to Trump\n10                                    Vector field of seal movements\n11                                               Housing sales in TX\n\ndatasets(\"vcd\")[,c(\"Item\",\"class\",\"dim\")]\n\n              Item      class             dim\n1        Arthritis data.frame            84x5\n2         Baseball data.frame          322x25\n3   BrokenMarriage data.frame            20x4\n4       Bundesliga data.frame         14018x7\n5    Bundestag2005      table            16x5\n6        Butterfly      table              24\n7       CoalMiners      table           2x2x9\n8    DanishWelfare data.frame           180x5\n9       Employment      table           2x6x2\n10      Federalist      table               7\n11         Hitters data.frame           154x4\n12      HorseKicks      table               5\n13        Hospital      table             3x3\n14 JobSatisfaction data.frame             8x4\n15     JointSports data.frame            40x5\n16       Lifeboats data.frame            18x8\n17      MSPatients      array           4x4x2\n18     NonResponse data.frame            12x4\n19     OvaryCancer data.frame            16x5\n20          PreSex      table         2x2x2x2\n21      Punishment data.frame            36x5\n22         RepVict      table             8x8\n23        Rochdale      table 2x2x2x2x2x2x2x2\n24          Saxony      table              13\n25       SexualFun      table             4x4\n26    SpaceShuttle data.frame            24x6\n27         Suicide data.frame           306x6\n28          Trucks data.frame            24x5\n29        UKSoccer      table             5x5\n30    VisualAcuity data.frame            32x4\n31         VonBort data.frame           280x4\n32      WeldonDice      table              11\n33      WomenQueue      table              11",
    "crumbs": [
      "DataSets"
    ]
  },
  {
    "objectID": "datasets.html#baser",
    "href": "datasets.html#baser",
    "title": "datasets",
    "section": "3 BaseR",
    "text": "3 BaseR\nThe baseR datasets are found in the package \"datasets\". Thus we use the vcdExtra::datasets() call on the “datasets” package.\n\ndatasets(\"datasets\")[,c(\"Item\",\"class\",\"dim\")]\n\n                      Item      class     dim\n1            AirPassengers         ts     144\n2                  BJsales         ts     150\n3   BJsales.lead (BJsales)         ts     150\n4                      BOD data.frame     6x2\n5                      CO2 data.frame    84x5\n6              ChickWeight data.frame   578x4\n7                    DNase data.frame   176x3\n8           EuStockMarkets      array  1860x4\n9             Formaldehyde data.frame     6x2\n10            HairEyeColor      table   4x4x2\n11            Harman23.cor       list       3\n12            Harman74.cor       list       3\n13                Indometh data.frame    66x3\n14            InsectSprays data.frame    72x2\n15          JohnsonJohnson         ts      84\n16               LakeHuron         ts      98\n17        LifeCycleSavings data.frame    50x5\n18                Loblolly data.frame    84x3\n19                    Nile         ts     100\n20                  Orange data.frame    35x3\n21           OrchardSprays data.frame    64x4\n22             PlantGrowth data.frame    30x2\n23               Puromycin data.frame    23x3\n24               Seatbelts      array   192x8\n25                  Theoph data.frame   132x5\n26                 Titanic      table 4x2x2x2\n27             ToothGrowth data.frame    60x3\n28           UCBAdmissions      table   2x2x6\n29          UKDriverDeaths         ts     192\n30                   UKgas         ts     108\n31             USAccDeaths         ts      72\n32               USArrests data.frame    50x4\n33          USJudgeRatings data.frame   43x12\n34   USPersonalExpenditure      array     5x5\n35               UScitiesD       dist      45\n36                VADeaths      array     5x4\n37                WWWusage         ts     100\n38             WorldPhones      array     7x7\n39             ability.cov       list       3\n40                airmiles         ts      24\n41              airquality data.frame   153x6\n42                anscombe data.frame    11x8\n43                  attenu data.frame   182x5\n44                attitude data.frame    30x7\n45                 austres         ts      89\n46       beaver1 (beavers) data.frame   114x4\n47       beaver2 (beavers) data.frame   100x4\n48                    cars data.frame    50x2\n49                chickwts data.frame    71x2\n50                     co2         ts     468\n51                 crimtab      table   42x22\n52             discoveries         ts     100\n53                   esoph data.frame    88x5\n54                    euro    numeric      11\n55       euro.cross (euro)      array   11x11\n56                eurodist       dist     210\n57                faithful data.frame   272x2\n58  fdeaths (UKLungDeaths)         ts      72\n59                  freeny data.frame    39x5\n60       freeny.x (freeny)      array    39x4\n61       freeny.y (freeny)         ts      39\n62                  infert data.frame   248x8\n63                    iris data.frame   150x5\n64                   iris3      array  50x4x3\n65                 islands    numeric      48\n66  ldeaths (UKLungDeaths)         ts      72\n67                      lh         ts      48\n68                 longley data.frame    16x7\n69                    lynx         ts     114\n70  mdeaths (UKLungDeaths)         ts      72\n71                  morley data.frame   100x3\n72                  mtcars data.frame   32x11\n73                  nhtemp         ts      60\n74                  nottem         ts     240\n75                     npk data.frame    24x5\n76      occupationalStatus      table     8x8\n77                  precip    numeric      70\n78              presidents         ts     120\n79                pressure data.frame    19x2\n80                  quakes data.frame  1000x5\n81                   randu data.frame   400x3\n82                  rivers    numeric     141\n83                    rock data.frame    48x4\n84                   sleep data.frame    20x3\n85  stack.loss (stackloss)    numeric      21\n86     stack.x (stackloss)      array    21x3\n87               stackloss data.frame    21x4\n88       state.abb (state)  character      50\n89      state.area (state)    numeric      50\n90    state.center (state)       list       2\n91  state.division (state)     factor      50\n92      state.name (state)  character      50\n93    state.region (state)     factor      50\n94       state.x77 (state)      array    50x8\n95           sunspot.month         ts    3177\n96            sunspot.year         ts     289\n97                sunspots         ts    2820\n98                   swiss data.frame    47x6\n99                treering         ts    7980\n100                  trees data.frame    31x3\n101                  uspop         ts      19\n102                volcano      array   87x61\n103             warpbreaks data.frame    54x3\n104                  women data.frame    15x2\n\n\n\nCommon BaseR datasets\n\nairquality\ncars\nfaithful\nmtcars\ntrees",
    "crumbs": [
      "DataSets"
    ]
  },
  {
    "objectID": "ggplots/basics.html#density",
    "href": "ggplots/basics.html#density",
    "title": "basicPlots",
    "section": "6 Density",
    "text": "6 Density",
    "crumbs": [
      "ggPlots",
      "basics"
    ]
  },
  {
    "objectID": "ggplots/patchwork.html#multi-plots",
    "href": "ggplots/patchwork.html#multi-plots",
    "title": "patchwork",
    "section": "3 Multi-plots",
    "text": "3 Multi-plots\n\np1 &lt;- ggplot(iris, aes(x=Sepal.Length,y=Sepal.Width, color=Species))+\n      geom_point()+\n      ggtitle(\"Scatterplot for all Species\")\np2 &lt;- ggplot(iris, aes(y=Sepal.Width,color=Species))+\n      geom_boxplot()+\n      ggtitle(\"Sepal Width Boxplot\")\np3 &lt;- ggplot(iris, aes(x=Sepal.Length))+\n      geom_density()+\n      ggtitle(\"Sepal Length Density\")\np1/(p2+p3)",
    "crumbs": [
      "ggPlots",
      "patchwork"
    ]
  },
  {
    "objectID": "dataframes/copyPaste.html",
    "href": "dataframes/copyPaste.html",
    "title": "copyPaste",
    "section": "",
    "text": "Example: copy and paste random sample of numbers from a web page or a PDF.\nData from example 1.1 of Devore’s Mathematical Statistics\n6.1 12.6 34.7 1.6 18.8 2.2 3.0 2.2 5.6 3.8 2.2 3.1 1.3 1.1 14.1 4.0 21.0 6.1 1.3 20.4 7.5 3.9 10.1 8.1 19.5 5.2 12.0 15.8 10.4 5.2 6.4 10.8 83.1 3.6 6.2 6.3 16.3 12.7 1.3 0.8 8.8 5.1 3.7 26.3 6.0 48.0 8.2 11.7 7.2 3.9 15.3 16.6 8.8 12.0 4.7 14.7 6.4 17.0 2.5 16.2\n\n\n# data copy and pasted from a pdf 'table' and\n# appears as a long string.\n\na &lt;- c(\"6.1 12.6 34.7 1.6 18.8 2.2 3.0 2.2 5.6 3.8 2.2 3.1 1.3 1.1 14.1 4.0 21.0 6.1 1.3 20.4 7.5 3.9 10.1 8.1 19.5 5.2 12.0 15.8 10.4 5.2 6.4 10.8 83.1 3.6 6.2 6.3 16.3 12.7 1.3 0.8 8.8 5.1 3.7 26.3 6.0 48.0 8.2 11.7 7.2 3.9 15.3 16.6 8.8 12.0 4.7 14.7 6.4 17.0 2.5 16.2\")\nstr(a)\n\n chr \"6.1 12.6 34.7 1.6 18.8 2.2 3.0 2.2 5.6 3.8 2.2 3.1 1.3 1.1 14.1 4.0 21.0 6.1 1.3 20.4 7.5 3.9 10.1 8.1 19.5 5.2\"| __truncated__\n\n\n\n# extract out all numbers of the string\n# b is a list of chr\nb &lt;- strsplit(a, split=\" \") # separated blanks \nstr(b)\n\nList of 1\n $ : chr [1:60] \"6.1\" \"12.6\" \"34.7\" \"1.6\" ...\n\n\n\n# convert list to a string of chr\n# by unlist\nc &lt;- unlist(b) \nstr(c)\n\n chr [1:60] \"6.1\" \"12.6\" \"34.7\" \"1.6\" \"18.8\" \"2.2\" \"3.0\" \"2.2\" \"5.6\" \"3.8\" ...\n\n\n\n# convert chr to vector numeric\nd &lt;- as.vector(c, 'numeric') \nstr(d)\n\n num [1:60] 6.1 12.6 34.7 1.6 18.8 2.2 3 2.2 5.6 3.8 ...\n\n# finally convert to a data.frame\ndf &lt;- data.frame(pcent = d)\nstr(df)\n\n'data.frame':   60 obs. of  1 variable:\n $ pcent: num  6.1 12.6 34.7 1.6 18.8 2.2 3 2.2 5.6 3.8 ...\n\n\n\nlibrary(tidyverse)\n\nggplot(df, aes(x=d))+\n  geom_histogram(bins=8, fill=\"lightblue\", color=\"black\")+\n  labs(\n    x=\"Fundraising expenses (percent of total expenditures)\",\n    y=\"Number of charities\",\n    title=\"A histogram for the charity fundraising data of Example 1.1\"\n  )"
  },
  {
    "objectID": "tables/frequency.html#one-way-contingency-table-grades",
    "href": "tables/frequency.html#one-way-contingency-table-grades",
    "title": "frequency",
    "section": "1 One-way contingency table (grades)",
    "text": "1 One-way contingency table (grades)\n\n# use table function to count frequency in lgrades\ntblfreq &lt;- table(tb$lgrades) \ntblfreq\n\n\nA+  A A- B+  B B- C+  C D+  D  F \n 1  1  0  0  2  3  1  1  0  0  1 \n\n\n\n# redo table back into a dataframe\ndf &lt;- data.frame(tblfreq)\nnames(df) &lt;- c(\"grades\",\"freq\")\ndf\n\n   grades freq\n1      A+    1\n2       A    1\n3      A-    0\n4      B+    0\n5       B    2\n6      B-    3\n7      C+    1\n8       C    1\n9      D+    0\n10      D    0\n11      F    1",
    "crumbs": [
      "Tables",
      "frequency"
    ]
  },
  {
    "objectID": "tables/frequency.html#two-way-contingency-table-gender-grades",
    "href": "tables/frequency.html#two-way-contingency-table-gender-grades",
    "title": "frequency",
    "section": "2 Two-way Contingency table (gender-grades)",
    "text": "2 Two-way Contingency table (gender-grades)\n\ntwoWay &lt;- table(tb$gender,tb$lgrades)\ntwoWay\n\n   \n    A+ A A- B+ B B- C+ C D+ D F\n  M  0 1  0  0 1  2  1 1  0 0 0\n  F  1 0  0  0 1  1  0 0  0 0 1",
    "crumbs": [
      "Tables",
      "frequency"
    ]
  },
  {
    "objectID": "tables/contingency.html#using-matrix",
    "href": "tables/contingency.html#using-matrix",
    "title": "2x2 Contingency Table",
    "section": "2 Using matrix",
    "text": "2 Using matrix\n\n# Matrix: using nrows\nM1 &lt;- matrix(\n c(327,50,31,192),nrow=2,byrow=TRUE)\ncolnames(M1) &lt;- c(\"Disease\",\"NoDisease\")\nrownames(M1) &lt;- c(\"Positive\",\"Negative\")\nM1\n\n         Disease NoDisease\nPositive     327        50\nNegative      31       192\n\nclass(M1)\n\n[1] \"matrix\" \"array\"",
    "crumbs": [
      "Tables",
      "contingency"
    ]
  },
  {
    "objectID": "tables/contingency.html#using-cbind-or-rbind",
    "href": "tables/contingency.html#using-cbind-or-rbind",
    "title": "2x2 Contingency Table",
    "section": "3 Using cbind (or rbind)",
    "text": "3 Using cbind (or rbind)\n\nM2 &lt;- cbind(c(327,31),c(50,192))\ndimnames(M2) = list(c(\"Positive\",\"Negative\"),c(\"Disease\",\"NoDisease\"))\nM2\n\n         Disease NoDisease\nPositive     327        50\nNegative      31       192\n\nclass(M2)\n\n[1] \"matrix\" \"array\"",
    "crumbs": [
      "Tables",
      "contingency"
    ]
  },
  {
    "objectID": "tables/contingency.html#using-list",
    "href": "tables/contingency.html#using-list",
    "title": "2x2 Contingency Table",
    "section": "4 Using list",
    "text": "4 Using list\n\nP &lt;- c(327,50,31,192)\ndim(P) &lt;- c(2,2)\ndimnames(P) = list(c(\"Positive\",\"Negative\"),c(\"Disease\",\"NoDisease\"))\nP\n\n         Disease NoDisease\nPositive     327        31\nNegative      50       192\n\nclass(P)\n\n[1] \"matrix\" \"array\"",
    "crumbs": [
      "Tables",
      "contingency"
    ]
  },
  {
    "objectID": "tables/contingency.html#using-dim",
    "href": "tables/contingency.html#using-dim",
    "title": "2x2 Contingency Table",
    "section": "4 Using dim",
    "text": "4 Using dim\n\nM3 &lt;- c(327,50,31,192)\ndim(M3) &lt;- c(2,2)\ndimnames(M3) = list(c(\"Positive\",\"Negative\"),c(\"Disease\",\"NoDisease\"))\nM3\n\n         Disease NoDisease\nPositive     327        31\nNegative      50       192\n\nclass(M3)\n\n[1] \"matrix\" \"array\"",
    "crumbs": [
      "Tables",
      "contingency"
    ]
  },
  {
    "objectID": "tables/aggregation.html",
    "href": "tables/aggregation.html",
    "title": "xtabs",
    "section": "",
    "text": "library(tidyverse)\n\n\n\n\ndf1 &lt;- data.frame(Reference = c(\"KRXH\", \"KRPT\", \"FHRA\", \"CZKK\", \"CQTN\", \"PZXW\", \"SZRZ\", \"RMZE\", \"STNX\", \"TMDW\"), Status = c(\"Accepted\", \"Accepted\", \"Rejected\", \"Accepted\", \"Rejected\", \"Accepted\", \"Rejected\", \"Rejected\", \"Accepted\", \"Accepted\"), Gender = c(\"Female\", \"Male\", \"Male\", \"Female\", \"Female\", \"Female\", \"Male\", \"Female\", \"Female\", \"Female\"), Test = c(\"Test1\", \"Test1\", \"Test2\", \"Test3\", \"Test1\", \"Test4\", \"Test4\", \"Test2\", \"Test3\", \"Test1\"), NewOrFollowUp = c(\"New\", \"New\", \"New\", \"New\", \"New\", \"Follow-up\", \"New\", \"New\", \"New\", \"New\"))\ndf1\n\n   Reference   Status Gender  Test NewOrFollowUp\n1       KRXH Accepted Female Test1           New\n2       KRPT Accepted   Male Test1           New\n3       FHRA Rejected   Male Test2           New\n4       CZKK Accepted Female Test3           New\n5       CQTN Rejected Female Test1           New\n6       PZXW Accepted Female Test4     Follow-up\n7       SZRZ Rejected   Male Test4           New\n8       RMZE Rejected Female Test2           New\n9       STNX Accepted Female Test3           New\n10      TMDW Accepted Female Test1           New"
  },
  {
    "objectID": "tables/aggregation.html#libraries",
    "href": "tables/aggregation.html#libraries",
    "title": "xtabs",
    "section": "",
    "text": "library(tidyverse)\n\n\n\n\ndf1 &lt;- data.frame(Reference = c(\"KRXH\", \"KRPT\", \"FHRA\", \"CZKK\", \"CQTN\", \"PZXW\", \"SZRZ\", \"RMZE\", \"STNX\", \"TMDW\"), Status = c(\"Accepted\", \"Accepted\", \"Rejected\", \"Accepted\", \"Rejected\", \"Accepted\", \"Rejected\", \"Rejected\", \"Accepted\", \"Accepted\"), Gender = c(\"Female\", \"Male\", \"Male\", \"Female\", \"Female\", \"Female\", \"Male\", \"Female\", \"Female\", \"Female\"), Test = c(\"Test1\", \"Test1\", \"Test2\", \"Test3\", \"Test1\", \"Test4\", \"Test4\", \"Test2\", \"Test3\", \"Test1\"), NewOrFollowUp = c(\"New\", \"New\", \"New\", \"New\", \"New\", \"Follow-up\", \"New\", \"New\", \"New\", \"New\"))\ndf1\n\n   Reference   Status Gender  Test NewOrFollowUp\n1       KRXH Accepted Female Test1           New\n2       KRPT Accepted   Male Test1           New\n3       FHRA Rejected   Male Test2           New\n4       CZKK Accepted Female Test3           New\n5       CQTN Rejected Female Test1           New\n6       PZXW Accepted Female Test4     Follow-up\n7       SZRZ Rejected   Male Test4           New\n8       RMZE Rejected Female Test2           New\n9       STNX Accepted Female Test3           New\n10      TMDW Accepted Female Test1           New"
  },
  {
    "objectID": "tables/aggregation.html#using-matrix",
    "href": "tables/aggregation.html#using-matrix",
    "title": "2x2 Contingency Table",
    "section": "2 Using matrix",
    "text": "2 Using matrix\n\n# Matrix: using nrows\nM1 &lt;- matrix(\n c(327,50,31,192),nrow=2,byrow=TRUE)\ncolnames(M1) &lt;- c(\"Disease\",\"NoDisease\")\nrownames(M1) &lt;- c(\"Positive\",\"Negative\")\nM1\n\n         Disease NoDisease\nPositive     327        50\nNegative      31       192\n\nclass(M1)\n\n[1] \"matrix\" \"array\""
  },
  {
    "objectID": "tables/aggregation.html#using-cbind-or-rbind",
    "href": "tables/aggregation.html#using-cbind-or-rbind",
    "title": "2x2 Contingency Table",
    "section": "3 Using cbind (or rbind)",
    "text": "3 Using cbind (or rbind)\n\nM2 &lt;- cbind(c(327,31),c(50,192))\ndimnames(M2) = list(c(\"Positive\",\"Negative\"),c(\"Disease\",\"NoDisease\"))\nM2\n\n         Disease NoDisease\nPositive     327        50\nNegative      31       192\n\nclass(M2)\n\n[1] \"matrix\" \"array\""
  },
  {
    "objectID": "tables/aggregation.html#using-dim",
    "href": "tables/aggregation.html#using-dim",
    "title": "2x2 Contingency Table",
    "section": "4 Using dim",
    "text": "4 Using dim\n\nM3 &lt;- c(327,50,31,192)\ndim(M3) &lt;- c(2,2)\ndimnames(M3) = list(c(\"Positive\",\"Negative\"),c(\"Disease\",\"NoDisease\"))\nM3\n\n         Disease NoDisease\nPositive     327        31\nNegative      50       192\n\nclass(M3)\n\n[1] \"matrix\" \"array\""
  },
  {
    "objectID": "tables/aggregation.html#simple-table-from-a-dataframe",
    "href": "tables/aggregation.html#simple-table-from-a-dataframe",
    "title": "2x2 Contingency Table",
    "section": "5 Simple Table from a dataframe",
    "text": "5 Simple Table from a dataframe\n\ndf &lt;- data.frame(\n  c(327,50),\n  c(50,192)\n)\ncolnames(df) &lt;- c(\"Disease\",\"NoDisease\")\nrownames(df) &lt;- c(\"Positive\",\"Negative\")\ndf\n\n         Disease NoDisease\nPositive     327        50\nNegative      50       192\n\nclass(df)\n\n[1] \"data.frame\"\n\ntab &lt;- as.table(as.matrix(df))\ntab\n\n         Disease NoDisease\nPositive     327        50\nNegative      50       192\n\nclass(tab)\n\n[1] \"table\"\n\naddmargins(tab)\n\n         Disease NoDisease Sum\nPositive     327        50 377\nNegative      50       192 242\nSum          377       242 619"
  },
  {
    "objectID": "tables/aggregation.html#xtabs-require-dataframe-or-tibble",
    "href": "tables/aggregation.html#xtabs-require-dataframe-or-tibble",
    "title": "2x2 Contingency Table",
    "section": "6 xtabs require dataframe or tibble",
    "text": "6 xtabs require dataframe or tibble\n\n# tribble is easier to enter table values by rows\ndf2 &lt;-tribble(\n  ~Predicted, ~Actual, ~Values,\n  \"Positive\", \"Disease\", 327,\n  \"Positive\", \"NoDisease\", 50,\n  \"Negative\", \"Disease\", 50,\n  \"Negative\", \"NoDisease\", 192\n)\ndf2\n\n# A tibble: 4 × 3\n  Predicted Actual    Values\n  &lt;chr&gt;     &lt;chr&gt;      &lt;dbl&gt;\n1 Positive  Disease      327\n2 Positive  NoDisease     50\n3 Negative  Disease       50\n4 Negative  NoDisease    192\n\n# xtabs require a dataframe or tibble, returns table\ntab2 &lt;- xtabs( Values ~ Predicted + Actual, data=df2)\naddmargins(tab2)\n\n          Actual\nPredicted  Disease NoDisease Sum\n  Negative      50       192 242\n  Positive     327        50 377\n  Sum          377       242 619\n\nclass(tab2)\n\n[1] \"xtabs\" \"table\"\n\n# a nicer table (maybe)\nftable(tab2)\n\n          Actual Disease NoDisease\nPredicted                         \nNegative              50       192\nPositive             327        50"
  },
  {
    "objectID": "tables/aggregation.html#xtabs---uses-formula-style",
    "href": "tables/aggregation.html#xtabs---uses-formula-style",
    "title": "xtabs",
    "section": "2 xtabs - uses formula style",
    "text": "2 xtabs - uses formula style\n\n2.1 count the levels in the variable Status\n\n# find the count of levels in the variable, “Status\nxtabs(~ Status, data=df1)\n\nStatus\nAccepted Rejected \n       6        4 \n\n\n\n\n2.2 create a table of Reference vs `Status`\n\nxtabs(~ Reference + Status, data=df1)\n\n         Status\nReference Accepted Rejected\n     CQTN        0        1\n     CZKK        1        0\n     FHRA        0        1\n     KRPT        1        0\n     KRXH        1        0\n     PZXW        1        0\n     RMZE        0        1\n     STNX        1        0\n     SZRZ        0        1\n     TMDW        1        0\n\n\n\n\n2.3 create a 3-dim table of Status, Gender and Test\n\nxt &lt;- xtabs(~ Status+Gender+Test, data=df1)\nxt\n\n, , Test = Test1\n\n          Gender\nStatus     Female Male\n  Accepted      2    1\n  Rejected      1    0\n\n, , Test = Test2\n\n          Gender\nStatus     Female Male\n  Accepted      0    0\n  Rejected      1    1\n\n, , Test = Test3\n\n          Gender\nStatus     Female Male\n  Accepted      2    0\n  Rejected      0    0\n\n, , Test = Test4\n\n          Gender\nStatus     Female Male\n  Accepted      1    0\n  Rejected      0    1\n\n\n\n\n2.4 using ftable (flattening)\n\nftable(xt)\n\n                Test Test1 Test2 Test3 Test4\nStatus   Gender                             \nAccepted Female          2     0     2     1\n         Male            1     0     0     0\nRejected Female          1     1     0     0\n         Male            0     1     0     1\n\n\n\n\n2.5 two-variables table\n\nxtabs(~Status+Gender, data=df1)\n\n          Gender\nStatus     Female Male\n  Accepted      5    1\n  Rejected      2    2\n\n\n\n\n2.6 plot cross-tabulations\n\nplot(xtabs(~Status+Gender, data=df1))"
  },
  {
    "objectID": "datatypes/factors.html#retain-factor-ordering",
    "href": "datatypes/factors.html#retain-factor-ordering",
    "title": "Factors",
    "section": "4 Retain factor ordering",
    "text": "4 Retain factor ordering\n\n# method 1\n# specified levels\nbt1 &lt;- factor(bloodtypes,\n          levels=c(\"O\",\"A\",\"B\",\"AB\"))\nlevels(bt1)\n\n[1] \"O\"  \"A\"  \"B\"  \"AB\"\n\n# method 2\n# using as_factor (instead of as.factor from baseR) \n# will retain the original factor order.\n# better than using relevel or fct_reorder\nbt2 &lt;- as_factor(bloodtypes)\nlevels(bt2)\n\n[1] \"O\"  \"A\"  \"B\"  \"AB\"",
    "crumbs": [
      "Datatypes",
      "factors"
    ]
  },
  {
    "objectID": "yaml.html#yamlfor-each-qmd-file.",
    "href": "yaml.html#yamlfor-each-qmd-file.",
    "title": "yaml",
    "section": "",
    "text": "---\ntitle: \"yaml\"\nformat:\n  html: default\n  pdf: pagesize: A4\n    include-in-header:\n      text: |\n        \\usepackage{scrlayer-scrpage}\n        \\rohead{\"yaml\"}\nnumber-sections: true\nwarning: false\n---",
    "crumbs": [
      "Preface",
      "yaml"
    ]
  },
  {
    "objectID": "datatypes/vectors.html",
    "href": "datatypes/vectors.html",
    "title": "Vectors",
    "section": "",
    "text": "vec1 &lt;- c(1, 2, 3, 5)\nvec1\n\n[1] 1 2 3 5\n\nstr(vec1)\n\n num [1:4] 1 2 3 5\n\n\n\nvec2 &lt;- c(\"a\",\"b\",\"c\")\nstr(vec2)\n\n chr [1:3] \"a\" \"b\" \"c\"",
    "crumbs": [
      "Datatypes",
      "vectors"
    ]
  },
  {
    "objectID": "datatypes/vectors.html#vectors",
    "href": "datatypes/vectors.html#vectors",
    "title": "Vectors",
    "section": "",
    "text": "vec1 &lt;- c(1, 2, 3, 5)\nvec1\n\n[1] 1 2 3 5\n\nstr(vec1)\n\n num [1:4] 1 2 3 5\n\n\n\nvec2 &lt;- c(\"a\",\"b\",\"c\")\nstr(vec2)\n\n chr [1:3] \"a\" \"b\" \"c\"",
    "crumbs": [
      "Datatypes",
      "vectors"
    ]
  },
  {
    "objectID": "datatypes/vectors.html#matrices",
    "href": "datatypes/vectors.html#matrices",
    "title": "Vectors",
    "section": "2 matrices",
    "text": "2 matrices\n\nm &lt;- matrix(c(1, 2, 3, 4), nrow=2, ncol=2)\nm\n\n     [,1] [,2]\n[1,]    1    3\n[2,]    2    4\n\nstr(m)\n\n num [1:2, 1:2] 1 2 3 4",
    "crumbs": [
      "Datatypes",
      "vectors"
    ]
  },
  {
    "objectID": "References/references.html",
    "href": "References/references.html",
    "title": "references",
    "section": "",
    "text": "1 Bibliography\n\nIsmay, C., and A. Y. Kim. 2019. Statistical Inference via Data Science: A ModernDive into r and the Tidyverse. https://doi.org/10.1201/9780367409913: Chapman; Hall/CRC.\n\n\nKuhn, Max, and Julia Silge. 2022. Tidy Modeling with r. \" O’Reilly Media, Inc.\".\n\n\nWickham, Hadley, Mine Çetinkaya-Rundel, and Garrett Grolemund. 2023. R for Data Science. 2nd ed. \" O’Reilly Media, Inc.\".",
    "crumbs": [
      "References",
      "bibliography"
    ]
  },
  {
    "objectID": "datatypes/vectors.html#sequences",
    "href": "datatypes/vectors.html#sequences",
    "title": "Vectors",
    "section": "2 Sequences",
    "text": "2 Sequences\n\n# begin, end, increment\nvec3 &lt;- seq(2,5,1)\nvec3\n\n[1] 2 3 4 5\n\n# masking\nvec4 &lt;- rep(c(0,1),2)\nvec4\n\n[1] 0 1 0 1\n\n# vector product\nvec3*vec4\n\n[1] 0 3 0 5",
    "crumbs": [
      "Datatypes",
      "vectors"
    ]
  },
  {
    "objectID": "datatypes.html#datatypes",
    "href": "datatypes.html#datatypes",
    "title": "datatypes",
    "section": "",
    "text": "numbers\nstrings\nfactors\ndates\nlists\nmatrices\ntables",
    "crumbs": [
      "Datatypes"
    ]
  },
  {
    "objectID": "datasets/datasets.html",
    "href": "datasets/datasets.html",
    "title": "WebR",
    "section": "",
    "text": "library(datasets)\ndata()",
    "crumbs": [
      "DataSets",
      "DataSets"
    ]
  },
  {
    "objectID": "datasets/datasets.html#libraries",
    "href": "datasets/datasets.html#libraries",
    "title": "datasets",
    "section": "",
    "text": "library(tidyverse)  # includes package `ggplot2`\n\nYou can list the datasets available in each package using datasets() from library vcdExtras (which includes vcd).",
    "crumbs": [
      "DataSets",
      "DataSets"
    ]
  },
  {
    "objectID": "datasets/datasets.html#datasets",
    "href": "datasets/datasets.html#datasets",
    "title": "datasets",
    "section": "2 Datasets",
    "text": "2 Datasets\n\nlibrary(vcdExtra)  # includes package `vcd``\ndatasets(\"ggplot2\")\n\n             Item      class      dim\n1        diamonds data.frame 53940x10\n2       economics data.frame    574x6\n3  economics_long data.frame   2870x4\n4       faithfuld data.frame   5625x3\n5     luv_colours data.frame    657x4\n6         midwest data.frame   437x28\n7             mpg data.frame   234x11\n8          msleep data.frame    83x11\n9    presidential data.frame     12x4\n10          seals data.frame   1155x4\n11      txhousing data.frame   8602x9\n                                                               Title\n1                           Prices of over 50,000 round cut diamonds\n2                                            US economic time series\n3                                            US economic time series\n4                           2d density estimate of Old Faithful data\n5                                            'colors()' in Luv space\n6                                               Midwest demographics\n7  Fuel economy data from 1999 to 2008 for 38 popular models of cars\n8       An updated and expanded version of the mammals sleep dataset\n9                    Terms of 12 presidents from Eisenhower to Trump\n10                                    Vector field of seal movements\n11                                               Housing sales in TX\n\ndatasets(\"vcd\")[,c(\"Item\",\"class\",\"dim\")]\n\n              Item      class             dim\n1        Arthritis data.frame            84x5\n2         Baseball data.frame          322x25\n3   BrokenMarriage data.frame            20x4\n4       Bundesliga data.frame         14018x7\n5    Bundestag2005      table            16x5\n6        Butterfly      table              24\n7       CoalMiners      table           2x2x9\n8    DanishWelfare data.frame           180x5\n9       Employment      table           2x6x2\n10      Federalist      table               7\n11         Hitters data.frame           154x4\n12      HorseKicks      table               5\n13        Hospital      table             3x3\n14 JobSatisfaction data.frame             8x4\n15     JointSports data.frame            40x5\n16       Lifeboats data.frame            18x8\n17      MSPatients      array           4x4x2\n18     NonResponse data.frame            12x4\n19     OvaryCancer data.frame            16x5\n20          PreSex      table         2x2x2x2\n21      Punishment data.frame            36x5\n22         RepVict      table             8x8\n23        Rochdale      table 2x2x2x2x2x2x2x2\n24          Saxony      table              13\n25       SexualFun      table             4x4\n26    SpaceShuttle data.frame            24x6\n27         Suicide data.frame           306x6\n28          Trucks data.frame            24x5\n29        UKSoccer      table             5x5\n30    VisualAcuity data.frame            32x4\n31         VonBort data.frame           280x4\n32      WeldonDice      table              11\n33      WomenQueue      table              11",
    "crumbs": [
      "DataSets",
      "DataSets"
    ]
  },
  {
    "objectID": "datasets/datasets.html#baser",
    "href": "datasets/datasets.html#baser",
    "title": "datasets",
    "section": "3 BaseR",
    "text": "3 BaseR\nThe baseR datasets are found in the package \"datasets\". Thus we use the vcdExtra::datasets() call on the “datasets” package.\n\ndatasets(\"datasets\")[,c(\"Item\",\"class\",\"dim\")]\n\n                      Item      class     dim\n1            AirPassengers         ts     144\n2                  BJsales         ts     150\n3   BJsales.lead (BJsales)         ts     150\n4                      BOD data.frame     6x2\n5                      CO2 data.frame    84x5\n6              ChickWeight data.frame   578x4\n7                    DNase data.frame   176x3\n8           EuStockMarkets      array  1860x4\n9             Formaldehyde data.frame     6x2\n10            HairEyeColor      table   4x4x2\n11            Harman23.cor       list       3\n12            Harman74.cor       list       3\n13                Indometh data.frame    66x3\n14            InsectSprays data.frame    72x2\n15          JohnsonJohnson         ts      84\n16               LakeHuron         ts      98\n17        LifeCycleSavings data.frame    50x5\n18                Loblolly data.frame    84x3\n19                    Nile         ts     100\n20                  Orange data.frame    35x3\n21           OrchardSprays data.frame    64x4\n22             PlantGrowth data.frame    30x2\n23               Puromycin data.frame    23x3\n24               Seatbelts      array   192x8\n25                  Theoph data.frame   132x5\n26                 Titanic      table 4x2x2x2\n27             ToothGrowth data.frame    60x3\n28           UCBAdmissions      table   2x2x6\n29          UKDriverDeaths         ts     192\n30                   UKgas         ts     108\n31             USAccDeaths         ts      72\n32               USArrests data.frame    50x4\n33          USJudgeRatings data.frame   43x12\n34   USPersonalExpenditure      array     5x5\n35               UScitiesD       dist      45\n36                VADeaths      array     5x4\n37                WWWusage         ts     100\n38             WorldPhones      array     7x7\n39             ability.cov       list       3\n40                airmiles         ts      24\n41              airquality data.frame   153x6\n42                anscombe data.frame    11x8\n43                  attenu data.frame   182x5\n44                attitude data.frame    30x7\n45                 austres         ts      89\n46       beaver1 (beavers) data.frame   114x4\n47       beaver2 (beavers) data.frame   100x4\n48                    cars data.frame    50x2\n49                chickwts data.frame    71x2\n50                     co2         ts     468\n51                 crimtab      table   42x22\n52             discoveries         ts     100\n53                   esoph data.frame    88x5\n54                    euro    numeric      11\n55       euro.cross (euro)      array   11x11\n56                eurodist       dist     210\n57                faithful data.frame   272x2\n58  fdeaths (UKLungDeaths)         ts      72\n59                  freeny data.frame    39x5\n60       freeny.x (freeny)      array    39x4\n61       freeny.y (freeny)         ts      39\n62                  infert data.frame   248x8\n63                    iris data.frame   150x5\n64                   iris3      array  50x4x3\n65                 islands    numeric      48\n66  ldeaths (UKLungDeaths)         ts      72\n67                      lh         ts      48\n68                 longley data.frame    16x7\n69                    lynx         ts     114\n70  mdeaths (UKLungDeaths)         ts      72\n71                  morley data.frame   100x3\n72                  mtcars data.frame   32x11\n73                  nhtemp         ts      60\n74                  nottem         ts     240\n75                     npk data.frame    24x5\n76      occupationalStatus      table     8x8\n77                  precip    numeric      70\n78              presidents         ts     120\n79                pressure data.frame    19x2\n80                  quakes data.frame  1000x5\n81                   randu data.frame   400x3\n82                  rivers    numeric     141\n83                    rock data.frame    48x4\n84                   sleep data.frame    20x3\n85  stack.loss (stackloss)    numeric      21\n86     stack.x (stackloss)      array    21x3\n87               stackloss data.frame    21x4\n88       state.abb (state)  character      50\n89      state.area (state)    numeric      50\n90    state.center (state)       list       2\n91  state.division (state)     factor      50\n92      state.name (state)  character      50\n93    state.region (state)     factor      50\n94       state.x77 (state)      array    50x8\n95           sunspot.month         ts    3177\n96            sunspot.year         ts     289\n97                sunspots         ts    2820\n98                   swiss data.frame    47x6\n99                treering         ts    7980\n100                  trees data.frame    31x3\n101                  uspop         ts      19\n102                volcano      array   87x61\n103             warpbreaks data.frame    54x3\n104                  women data.frame    15x2\n\n\n\nCommon BaseR datasets\n\nairquality\ncars\nfaithful\nmtcars\ntrees",
    "crumbs": [
      "DataSets",
      "DataSets"
    ]
  },
  {
    "objectID": "datatypes/factors.html#creating-factors",
    "href": "datatypes/factors.html#creating-factors",
    "title": "Factors",
    "section": "2 Creating factors",
    "text": "2 Creating factors\n\n2.1 defaults to alphabetical\n\n# factor is a function that creates a factor variable\nchvec &lt;- (c(\"apples\",\"oranges\",\"bananas\"))\nfch1 &lt;- factor(chvec)\nfch1 # note: levels are alphabetical\n\n[1] apples  oranges bananas\nLevels: apples bananas oranges\n\n# or using as.factor from BaseR which does the same thing but\n# is normally used to 'coerce' already defined datatype to factors\nclass(chvec)\n\n[1] \"character\"\n\nfch2 &lt;- as.factor(chvec)\nfch2\n\n[1] apples  oranges bananas\nLevels: apples bananas oranges\n\n\n\n\n2.2 specifies a level order\n\n# you can specify ordered levels\nfch3 &lt;- factor(chvec, levels= c(\"apples\",\"oranges\",\"bananas\"))\nfch3\n\n[1] apples  oranges bananas\nLevels: apples oranges bananas",
    "crumbs": [
      "Datatypes",
      "factors"
    ]
  },
  {
    "objectID": "datatypes/factors.html#as_factor-retains-order",
    "href": "datatypes/factors.html#as_factor-retains-order",
    "title": "Factors",
    "section": "3 as_factor retains order",
    "text": "3 as_factor retains order\n\n3.1 tidyverse:: as_factor is better\n\n3.1.1 (default to alphabetical)\n\n# factor levels normally arranged alphabetically\nbloodtypes &lt;- c(\"O\",\"A\",\"B\",\"AB\")\nb1 &lt;- factor(bloodtypes)\nlevels(b1)\n\n[1] \"A\"  \"AB\" \"B\"  \"O\" \n\nb2 &lt;- as.factor(bloodtypes)\nlevels(b2)\n\n[1] \"A\"  \"AB\" \"B\"  \"O\" \n\n\n\nthe Levels default to an alphabetical sequence, but\nif I want to list factors Levels by the order in which they first appear\n\nyou can define levels explicitly with factor() ’\nyou can use as_factor from tidyverse which will retain the order\n\nhence, good idea to use as_factor\n\n\n\n3.1.2 (specify factor order)\n\n# method 1\n# specified levels\nbt1 &lt;- factor(bloodtypes,\n          levels=c(\"O\",\"A\",\"B\",\"AB\"))\nlevels(bt1)\n\n[1] \"O\"  \"A\"  \"B\"  \"AB\"\n\n# method 2\n# using as_factor (instead of as.factor from baseR) \n# will retain the original factor order.\n# better than using relevel or fct_reorder\nbt2 &lt;- as_factor(bloodtypes)\nlevels(bt2)\n\n[1] \"O\"  \"A\"  \"B\"  \"AB\"",
    "crumbs": [
      "Datatypes",
      "factors"
    ]
  },
  {
    "objectID": "datatypes/factors.html#as_factor-retains-order-better",
    "href": "datatypes/factors.html#as_factor-retains-order-better",
    "title": "Factors",
    "section": "3 as_factor retains order (better)",
    "text": "3 as_factor retains order (better)\n\n# factor levels normally arranged alphabetically\nbloodtypes &lt;- c(\"O\",\"A\",\"B\",\"AB\")\nb1 &lt;- factor(bloodtypes)\nb1\n\n[1] O  A  B  AB\nLevels: A AB B O\n\nb2 &lt;- as.factor(bloodtypes)\nb2\n\n[1] O  A  B  AB\nLevels: A AB B O\n\nb2 &lt;- as_factor(bloodtypes)\nb2\n\n[1] O  A  B  AB\nLevels: O A B AB\n\n\n\nthe Levels default to an alphabetical sequence, but\nif I want to list factors Levels by the order in which they first appear\n\nyou can define levels explicitly with factor(., levels=xxx)\nyou can use as_factor from tidyverse which will retain the order\n\nhence, good idea to use as_factor\n\n\n3.0.1 (specify factor order)\n\n# method 1\n# specified levels\nbt1 &lt;- factor(bloodtypes,\n          levels=c(\"O\",\"A\",\"B\",\"AB\"))\nlevels(bt1)\n\n[1] \"O\"  \"A\"  \"B\"  \"AB\"\n\n# method 2\n# using as_factor (instead of as.factor from baseR) \n# will retain the original factor order.\n# better than using relevel or fct_reorder\nbt2 &lt;- as_factor(bloodtypes)\nlevels(bt2)\n\n[1] \"O\"  \"A\"  \"B\"  \"AB\"",
    "crumbs": [
      "Datatypes",
      "factors"
    ]
  },
  {
    "objectID": "datatypes/factors.html#tidyverseas_factor-retains-order-better",
    "href": "datatypes/factors.html#tidyverseas_factor-retains-order-better",
    "title": "Factors",
    "section": "3 tidyverse::as_factor retains order (better)",
    "text": "3 tidyverse::as_factor retains order (better)\n\n# factor levels normally arranged alphabetically\nbloodtypes &lt;- c(\"O\",\"A\",\"B\",\"AB\")\nb1 &lt;- factor(bloodtypes)\nb1\n\n[1] O  A  B  AB\nLevels: A AB B O\n\nb2 &lt;- as.factor(bloodtypes)\nb2\n\n[1] O  A  B  AB\nLevels: A AB B O\n\nb2 &lt;- as_factor(bloodtypes)\nb2\n\n[1] O  A  B  AB\nLevels: O A B AB\n\n\n\nthe Levels default to an alphabetical sequence, but\nif I want to list factors Levels by the order in which they first appear\n\nyou can define levels explicitly with factor(., levels=xxx)\nyou can use as_factor from tidyverse which will retain the order\n\nhence, good idea to use as_factor\n\n\n3.0.1 (specify factor order)\n\n# method 1\n# specified levels\nbt1 &lt;- factor(bloodtypes,\n          levels=c(\"O\",\"A\",\"B\",\"AB\"))\nlevels(bt1)\n\n[1] \"O\"  \"A\"  \"B\"  \"AB\"\n\n# method 2\n# using as_factor (instead of as.factor from baseR) \n# will retain the original factor order.\n# better than using relevel or fct_reorder\nbt2 &lt;- as_factor(bloodtypes)\nlevels(bt2)\n\n[1] \"O\"  \"A\"  \"B\"  \"AB\"",
    "crumbs": [
      "Datatypes",
      "factors"
    ]
  },
  {
    "objectID": "datatypes/factors.html#tidyverseas_factor-retains-order",
    "href": "datatypes/factors.html#tidyverseas_factor-retains-order",
    "title": "Factors",
    "section": "3 tidyverse::as_factor retains order",
    "text": "3 tidyverse::as_factor retains order\n\n# another example of factor levels\n\nbloodtypes &lt;- c(\"O\",\"A\",\"B\",\"AB\")\nfactor(bloodtypes)\n\n[1] O  A  B  AB\nLevels: A AB B O\n\nas.factor(bloodtypes)\n\n[1] O  A  B  AB\nLevels: A AB B O\n\nas_factor(bloodtypes)\n\n[1] O  A  B  AB\nLevels: O A B AB\n\n\n\nthe Levels default to an alphabetical sequence, but\nif I want to list factors Levels by the order in which they first appear\n\nyou can define levels explicitly with factor(., levels=xxx)\nyou can use as_factor from tidyverse which will retain the order\n\nhence, good idea to use as_factor\n\n\n3.1 (specify factor order)\n\n# method 1\n# specified levels\nbt1 &lt;- factor(bloodtypes,\n          levels=c(\"O\",\"A\",\"B\",\"AB\"))\nlevels(bt1)\n\n[1] \"O\"  \"A\"  \"B\"  \"AB\"\n\n# method 2\n# using as_factor (instead of as.factor from baseR) \n# will retain the original factor order.\n# better than using relevel or fct_reorder\nbt2 &lt;- as_factor(bloodtypes)\nlevels(bt2)\n\n[1] \"O\"  \"A\"  \"B\"  \"AB\"",
    "crumbs": [
      "Datatypes",
      "factors"
    ]
  },
  {
    "objectID": "ggplots/curves.html",
    "href": "ggplots/curves.html",
    "title": "curves",
    "section": "",
    "text": "library(tidyverse)  \nlibrary(latex2exp)",
    "crumbs": [
      "ggPlots",
      "curves"
    ]
  },
  {
    "objectID": "ggplots/curves.html#libraries",
    "href": "ggplots/curves.html#libraries",
    "title": "curves",
    "section": "",
    "text": "library(tidyverse)  \nlibrary(latex2exp)",
    "crumbs": [
      "ggPlots",
      "curves"
    ]
  },
  {
    "objectID": "ggplots/curves.html#datasets",
    "href": "ggplots/curves.html#datasets",
    "title": "datasets",
    "section": "2 Datasets",
    "text": "2 Datasets\n\nlibrary(vcdExtra)  # includes package `vcd``\ndatasets(\"ggplot2\")\n\n             Item      class      dim\n1        diamonds data.frame 53940x10\n2       economics data.frame    574x6\n3  economics_long data.frame   2870x4\n4       faithfuld data.frame   5625x3\n5     luv_colours data.frame    657x4\n6         midwest data.frame   437x28\n7             mpg data.frame   234x11\n8          msleep data.frame    83x11\n9    presidential data.frame     12x4\n10          seals data.frame   1155x4\n11      txhousing data.frame   8602x9\n                                                               Title\n1                           Prices of over 50,000 round cut diamonds\n2                                            US economic time series\n3                                            US economic time series\n4                           2d density estimate of Old Faithful data\n5                                            'colors()' in Luv space\n6                                               Midwest demographics\n7  Fuel economy data from 1999 to 2008 for 38 popular models of cars\n8       An updated and expanded version of the mammals sleep dataset\n9                    Terms of 12 presidents from Eisenhower to Trump\n10                                    Vector field of seal movements\n11                                               Housing sales in TX\n\ndatasets(\"vcd\")[,c(\"Item\",\"class\",\"dim\")]\n\n              Item      class             dim\n1        Arthritis data.frame            84x5\n2         Baseball data.frame          322x25\n3   BrokenMarriage data.frame            20x4\n4       Bundesliga data.frame         14018x7\n5    Bundestag2005      table            16x5\n6        Butterfly      table              24\n7       CoalMiners      table           2x2x9\n8    DanishWelfare data.frame           180x5\n9       Employment      table           2x6x2\n10      Federalist      table               7\n11         Hitters data.frame           154x4\n12      HorseKicks      table               5\n13        Hospital      table             3x3\n14 JobSatisfaction data.frame             8x4\n15     JointSports data.frame            40x5\n16       Lifeboats data.frame            18x8\n17      MSPatients      array           4x4x2\n18     NonResponse data.frame            12x4\n19     OvaryCancer data.frame            16x5\n20          PreSex      table         2x2x2x2\n21      Punishment data.frame            36x5\n22         RepVict      table             8x8\n23        Rochdale      table 2x2x2x2x2x2x2x2\n24          Saxony      table              13\n25       SexualFun      table             4x4\n26    SpaceShuttle data.frame            24x6\n27         Suicide data.frame           306x6\n28          Trucks data.frame            24x5\n29        UKSoccer      table             5x5\n30    VisualAcuity data.frame            32x4\n31         VonBort data.frame           280x4\n32      WeldonDice      table              11\n33      WomenQueue      table              11"
  },
  {
    "objectID": "ggplots/curves.html#baser",
    "href": "ggplots/curves.html#baser",
    "title": "datasets",
    "section": "3 BaseR",
    "text": "3 BaseR\nThe baseR datasets are found in the package \"datasets\". Thus we use the vcdExtra::datasets() call on the “datasets” package.\n\ndatasets(\"datasets\")[,c(\"Item\",\"class\",\"dim\")]\n\n                      Item      class     dim\n1            AirPassengers         ts     144\n2                  BJsales         ts     150\n3   BJsales.lead (BJsales)         ts     150\n4                      BOD data.frame     6x2\n5                      CO2 data.frame    84x5\n6              ChickWeight data.frame   578x4\n7                    DNase data.frame   176x3\n8           EuStockMarkets      array  1860x4\n9             Formaldehyde data.frame     6x2\n10            HairEyeColor      table   4x4x2\n11            Harman23.cor       list       3\n12            Harman74.cor       list       3\n13                Indometh data.frame    66x3\n14            InsectSprays data.frame    72x2\n15          JohnsonJohnson         ts      84\n16               LakeHuron         ts      98\n17        LifeCycleSavings data.frame    50x5\n18                Loblolly data.frame    84x3\n19                    Nile         ts     100\n20                  Orange data.frame    35x3\n21           OrchardSprays data.frame    64x4\n22             PlantGrowth data.frame    30x2\n23               Puromycin data.frame    23x3\n24               Seatbelts      array   192x8\n25                  Theoph data.frame   132x5\n26                 Titanic      table 4x2x2x2\n27             ToothGrowth data.frame    60x3\n28           UCBAdmissions      table   2x2x6\n29          UKDriverDeaths         ts     192\n30                   UKgas         ts     108\n31             USAccDeaths         ts      72\n32               USArrests data.frame    50x4\n33          USJudgeRatings data.frame   43x12\n34   USPersonalExpenditure      array     5x5\n35               UScitiesD       dist      45\n36                VADeaths      array     5x4\n37                WWWusage         ts     100\n38             WorldPhones      array     7x7\n39             ability.cov       list       3\n40                airmiles         ts      24\n41              airquality data.frame   153x6\n42                anscombe data.frame    11x8\n43                  attenu data.frame   182x5\n44                attitude data.frame    30x7\n45                 austres         ts      89\n46       beaver1 (beavers) data.frame   114x4\n47       beaver2 (beavers) data.frame   100x4\n48                    cars data.frame    50x2\n49                chickwts data.frame    71x2\n50                     co2         ts     468\n51                 crimtab      table   42x22\n52             discoveries         ts     100\n53                   esoph data.frame    88x5\n54                    euro    numeric      11\n55       euro.cross (euro)      array   11x11\n56                eurodist       dist     210\n57                faithful data.frame   272x2\n58  fdeaths (UKLungDeaths)         ts      72\n59                  freeny data.frame    39x5\n60       freeny.x (freeny)      array    39x4\n61       freeny.y (freeny)         ts      39\n62                  infert data.frame   248x8\n63                    iris data.frame   150x5\n64                   iris3      array  50x4x3\n65                 islands    numeric      48\n66  ldeaths (UKLungDeaths)         ts      72\n67                      lh         ts      48\n68                 longley data.frame    16x7\n69                    lynx         ts     114\n70  mdeaths (UKLungDeaths)         ts      72\n71                  morley data.frame   100x3\n72                  mtcars data.frame   32x11\n73                  nhtemp         ts      60\n74                  nottem         ts     240\n75                     npk data.frame    24x5\n76      occupationalStatus      table     8x8\n77                  precip    numeric      70\n78              presidents         ts     120\n79                pressure data.frame    19x2\n80                  quakes data.frame  1000x5\n81                   randu data.frame   400x3\n82                  rivers    numeric     141\n83                    rock data.frame    48x4\n84                   sleep data.frame    20x3\n85  stack.loss (stackloss)    numeric      21\n86     stack.x (stackloss)      array    21x3\n87               stackloss data.frame    21x4\n88       state.abb (state)  character      50\n89      state.area (state)    numeric      50\n90    state.center (state)       list       2\n91  state.division (state)     factor      50\n92      state.name (state)  character      50\n93    state.region (state)     factor      50\n94       state.x77 (state)      array    50x8\n95           sunspot.month         ts    3177\n96            sunspot.year         ts     289\n97                sunspots         ts    2820\n98                   swiss data.frame    47x6\n99                treering         ts    7980\n100                  trees data.frame    31x3\n101                  uspop         ts      19\n102                volcano      array   87x61\n103             warpbreaks data.frame    54x3\n104                  women data.frame    15x2\n\n\n\nCommon BaseR datasets\n\nairquality\ncars\nfaithful\nmtcars\ntrees"
  },
  {
    "objectID": "ggplots/geom_fun.html",
    "href": "ggplots/geom_fun.html",
    "title": "Facets",
    "section": "",
    "text": "ggPlot-facets\n\n\n\n\nfacet_wrap (x, ncol)\nfacet_grid (x,y, ncol, nrows)"
  },
  {
    "objectID": "ggplots/geom_fun.html#libraries",
    "href": "ggplots/geom_fun.html#libraries",
    "title": "Facets",
    "section": "1 Libraries",
    "text": "1 Libraries\n\nlibrary(tidyverse)"
  },
  {
    "objectID": "ggplots/geom_fun.html#data",
    "href": "ggplots/geom_fun.html#data",
    "title": "Facets",
    "section": "2 Data",
    "text": "2 Data\n\nhead(iris)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n\n\nIn order to do facet plot across variables Sepal.Length, Sepal.Width, Petal.Length and Petal.Width, we need to reshape the data to pivot_longer.\n\ncol_order&lt;- c(\"Species\",\"Sepal.Length\",\"Sepal.Width\",\n                        \"Petal.Length\",\"Petal.Width\")\nirisA &lt;- iris[,col_order]\nhead(irisA)\n\n  Species Sepal.Length Sepal.Width Petal.Length Petal.Width\n1  setosa          5.1         3.5          1.4         0.2\n2  setosa          4.9         3.0          1.4         0.2\n3  setosa          4.7         3.2          1.3         0.2\n4  setosa          4.6         3.1          1.5         0.2\n5  setosa          5.0         3.6          1.4         0.2\n6  setosa          5.4         3.9          1.7         0.4\n\niris_long &lt;- irisA %&gt;%\n  pivot_longer(\n  !Species, \n  names_to = \"Leaves\",\n  values_to =\"cm\")\nhead(iris_long)\n\n# A tibble: 6 × 3\n  Species Leaves          cm\n  &lt;fct&gt;   &lt;chr&gt;        &lt;dbl&gt;\n1 setosa  Sepal.Length   5.1\n2 setosa  Sepal.Width    3.5\n3 setosa  Petal.Length   1.4\n4 setosa  Petal.Width    0.2\n5 setosa  Sepal.Length   4.9\n6 setosa  Sepal.Width    3"
  },
  {
    "objectID": "ggplots/geom_fun.html#facet_wrap",
    "href": "ggplots/geom_fun.html#facet_wrap",
    "title": "Facets",
    "section": "3 facet_wrap",
    "text": "3 facet_wrap\n\nspecify number of columns (ncol=2) and it will wrap to next row of plots after nth (usually 2 to 4) column.\n\n\np &lt;- ggplot(iris_long, aes(x=Species, y=cm))+\n  geom_boxplot(aes(fill=Species))\np+facet_wrap(~Leaves, ncol=2)"
  },
  {
    "objectID": "ggplots/geom_fun.html#facet_grid",
    "href": "ggplots/geom_fun.html#facet_grid",
    "title": "Facets",
    "section": "4 facet_grid",
    "text": "4 facet_grid\n\nproduces 2-d grid of panels defined by variables for rows and columns.\n\n\nq &lt;- ggplot(iris_long, aes(x=Species, y=cm))+\n  geom_boxplot(aes(fill=Species))\nq + facet_grid(cols = vars(Leaves))"
  },
  {
    "objectID": "ggplots/curves.html#ggplot2fun",
    "href": "ggplots/curves.html#ggplot2fun",
    "title": "curves",
    "section": "2 ggplot2::fun",
    "text": "2 ggplot2::fun\n\nx &lt;- seq(0,10,0.5)\nfn &lt;- function(x){\n  sqrt(x)*cos(5*x)\n}\nggplot(data.frame(x), aes(x=x))+\n  geom_function(fun=fn)+\n  theme_bw()"
  },
  {
    "objectID": "ggplots/curves.html#ggplot2geom_function",
    "href": "ggplots/curves.html#ggplot2geom_function",
    "title": "curves",
    "section": "5 ggplot2::geom_function()",
    "text": "5 ggplot2::geom_function()\n\nx &lt;- seq(0,10,0.5)\nfn &lt;- function(x){\n  sqrt(x)*cos(5*x)\n}\nggplot(data.frame(x), aes(x=x))+\n  geom_function(fun=fn)+\n  theme_bw()+\n  ggtitle(\"geom_function()\")",
    "crumbs": [
      "ggPlots",
      "curves"
    ]
  },
  {
    "objectID": "ggplots/curves.html#baser-curve",
    "href": "ggplots/curves.html#baser-curve",
    "title": "curves",
    "section": "3 BaseR:: curve()",
    "text": "3 BaseR:: curve()\ncurve() is a useful baseR function for plotting continuous functions in R. The ggplot equivalent is geom_function() as shown below.\n\nylim=c(-3,12)\ncurve({(x-1)^2}*(x+3), from=-3, to=2, col=\"blue\", lwd=2, ylim=ylim, ylab=\"y\",\n      main=\"curves by functions\")\ntext(0.8,10,label=TeX(r'($f(x)=(x-1)^2*(x+3)$)'))\narrows(0,10,-0.9,8, length=.05)\n\ncurve(sin(x^2)+4, from=-3, to=2, col=\"red\", lwd=2, add=TRUE)\ntext(1,7,label=expression(sin(x^2)+4))\narrows(0.5,6.5,0.2,4.2, length=.05)",
    "crumbs": [
      "ggPlots",
      "curves"
    ]
  },
  {
    "objectID": "programming/functions.html",
    "href": "programming/functions.html",
    "title": "functions",
    "section": "",
    "text": "library(tidyverse)",
    "crumbs": [
      "Programming",
      "functions"
    ]
  },
  {
    "objectID": "programming/functions.html#functions",
    "href": "programming/functions.html#functions",
    "title": "functions",
    "section": "2 Functions",
    "text": "2 Functions\n\n# an example of single parameter\n\nf &lt;- function(x){\n  {(x-1)^2}*(x+3)\n}\nx = seq(-2,2)\ndata.frame(x, y=f(x))\n\n   x y\n1 -2 9\n2 -1 8\n3  0 3\n4  1 0\n5  2 5",
    "crumbs": [
      "Programming",
      "functions"
    ]
  },
  {
    "objectID": "programming/functions.html#library",
    "href": "programming/functions.html#library",
    "title": "functions",
    "section": "",
    "text": "library(tidyverse)",
    "crumbs": [
      "Programming",
      "functions"
    ]
  },
  {
    "objectID": "ggplots/curves.html#ggplot2geom_curve",
    "href": "ggplots/curves.html#ggplot2geom_curve",
    "title": "curves",
    "section": "4 ggplot2::geom_curve()",
    "text": "4 ggplot2::geom_curve()\n\ndf &lt;- data.frame(\n  x = 1:8,\n  y = rnorm(8, mean = 5, sd = 2)\n)\nggplot(df, aes(x, y)) +\n  geom_point(size=2, color=\"brown\") +\n  geom_curve(aes(x = 2, y = 2, xend = 7, yend = 7),\n    arrow = arrow(length = unit(0.3, \"cm\"), type = \"closed\"),\n    color = \"blue\",\n    size = 1.1,\n    curvature = -0.3\n  ) +\n  theme_minimal()",
    "crumbs": [
      "ggPlots",
      "curves"
    ]
  },
  {
    "objectID": "programming/loops.html",
    "href": "programming/loops.html",
    "title": "functions",
    "section": "",
    "text": "library(tidyverse)",
    "crumbs": [
      "Programming",
      "loops"
    ]
  },
  {
    "objectID": "programming/loops.html#library",
    "href": "programming/loops.html#library",
    "title": "functions",
    "section": "",
    "text": "library(tidyverse)",
    "crumbs": [
      "Programming",
      "loops"
    ]
  },
  {
    "objectID": "programming/loops.html#data",
    "href": "programming/loops.html#data",
    "title": "functions",
    "section": "2 Data",
    "text": "2 Data\n\ndf &lt;- data.frame(\n  name = c(\"Mary\", \"Bobby\", \"Lizzy\",\"Tom\"),\n  age = c(30,26,19,45),\n  gender=c(\"F\",\"M\",\"F\",\"M\")\n)\ndf\n\n   name age gender\n1  Mary  30      F\n2 Bobby  26      M\n3 Lizzy  19      F\n4   Tom  45      M",
    "crumbs": [
      "Programming",
      "loops"
    ]
  },
  {
    "objectID": "programming/loops.html#for-loop",
    "href": "programming/loops.html#for-loop",
    "title": "functions",
    "section": "3 For Loop",
    "text": "3 For Loop\n\nnrow(df)\n\n[1] 4\n\nfor (i in 1:nrow(df)){\n  if (df[i,]$age &lt; 30)\n    print(paste(df[i,]))\n}\n\n[1] \"Bobby\" \"26\"    \"M\"    \n[1] \"Lizzy\" \"19\"    \"F\"    \n\n\n\n# alternatively you could just filter\nfilter(df, age&lt;30)\n\n   name age gender\n1 Bobby  26      M\n2 Lizzy  19      F",
    "crumbs": [
      "Programming",
      "loops"
    ]
  },
  {
    "objectID": "test.html#copy-and-paste-a-bunch-of-numbers-from-a-textbook",
    "href": "test.html#copy-and-paste-a-bunch-of-numbers-from-a-textbook",
    "title": "WebR",
    "section": "",
    "text": "library(tidyverse)\nx &lt;- read_table(col_names = FALSE, \"\n82 96 99 102 103 103 106 107 108 108 108\n108 109 110 110 111 113 113 113 113 115 115\n118 118 119 121 122 122 127 132 136 140 146\n\")\nx\n\n# A tibble: 3 × 11\n     X1    X2    X3    X4    X5    X6    X7    X8    X9   X10   X11\n  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1    82    96    99   102   103   103   106   107   108   108   108\n2   108   109   110   110   111   113   113   113   113   115   115\n3   118   118   119   121   122   122   127   132   136   140   146\n\nv &lt;- as.vector(t(x))\nv\n\n [1]  82  96  99 102 103 103 106 107 108 108 108 108 109 110 110 111 113 113 113\n[20] 113 115 115 118 118 119 121 122 122 127 132 136 140 146"
  },
  {
    "objectID": "ggplots/curves.html#ggplot2stat_function",
    "href": "ggplots/curves.html#ggplot2stat_function",
    "title": "curves",
    "section": "5 ggplot2::stat_function()",
    "text": "5 ggplot2::stat_function()\n\nggplot(data.frame(z), aes(x=z))+\n  geom_function(fun=fn)+\n  theme_bw()",
    "crumbs": [
      "ggPlots",
      "curves"
    ]
  },
  {
    "objectID": "ggplots/curves.html#define-function",
    "href": "ggplots/curves.html#define-function",
    "title": "curves",
    "section": "2 Define function",
    "text": "2 Define function\n\nf &lt;- function(x,b0,b1){\n  a &lt;- exp(b0 + b1*x)\n  b &lt;- 1 + a\n  c &lt;- a/b\n  return(c)\n}\n# Example 12.32\nf(2,-2,0.5)\n\n[1] 0.2689414\n\nf(8,-2,0.5)\n\n[1] 0.8807971\n\n\n\n2.1 BaseR: logit function curve\n\ncurve(f(x,-2,0.5), from=0, to=10)",
    "crumbs": [
      "ggPlots",
      "curves"
    ]
  },
  {
    "objectID": "ggplots/curves.html#define-logit-function",
    "href": "ggplots/curves.html#define-logit-function",
    "title": "curves",
    "section": "2 Define logit function",
    "text": "2 Define logit function\n\nf &lt;- function(x,b0,b1){\n  a &lt;- exp(b0 + b1*x)\n  b &lt;- 1 + a\n  c &lt;- a/b\n  return(c)\n}\n# Example 12.32\nf(2,-2,0.5)\n\n[1] 0.2689414\n\nf(8,-2,0.5)\n\n[1] 0.8807971\n\n\n\n2.1 BaseR: logit function curve\n\nb0= -2.0\nb1=0.5\ncurve(f(x,b0,b1), from=-10, to=20, main=\"logit curve\")",
    "crumbs": [
      "ggPlots",
      "curves"
    ]
  },
  {
    "objectID": "tables/dataTable01.html#data.table",
    "href": "tables/dataTable01.html#data.table",
    "title": "dataTableExample",
    "section": "2 Data.Table",
    "text": "2 Data.Table\n\nlibrary(data.table)\ndt &lt;- fread(text = \"\nrow ID Test1 Test2 Exam TotScore\n1  SD101    11    48   61     66.8\n2  SD102     8    43   77     71.4\n3  SD103    13    15   49     48.4\n4  SD104    15    20   57     57.2\n5  SD105    10    40   82     75.2\n6  SD106    11    23   65     59.2\n7  SD107     6    24   46     43.2\n8  SD108    12    47   80     78.8\n9  SD109    10    21   48     47.2\n10 SD110     7    27   62     55.0  \")\ndt\n\n      row     ID Test1 Test2  Exam TotScore\n    &lt;int&gt; &lt;char&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;num&gt;\n 1:     1  SD101    11    48    61     66.8\n 2:     2  SD102     8    43    77     71.4\n 3:     3  SD103    13    15    49     48.4\n 4:     4  SD104    15    20    57     57.2\n 5:     5  SD105    10    40    82     75.2\n 6:     6  SD106    11    23    65     59.2\n 7:     7  SD107     6    24    46     43.2\n 8:     8  SD108    12    47    80     78.8\n 9:     9  SD109    10    21    48     47.2\n10:    10  SD110     7    27    62     55.0\n\ndt2 &lt;- dt[,!\"row\", with=FALSE]\ndt2\n\n        ID Test1 Test2  Exam TotScore\n    &lt;char&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;num&gt;\n 1:  SD101    11    48    61     66.8\n 2:  SD102     8    43    77     71.4\n 3:  SD103    13    15    49     48.4\n 4:  SD104    15    20    57     57.2\n 5:  SD105    10    40    82     75.2\n 6:  SD106    11    23    65     59.2\n 7:  SD107     6    24    46     43.2\n 8:  SD108    12    47    80     78.8\n 9:  SD109    10    21    48     47.2\n10:  SD110     7    27    62     55.0"
  },
  {
    "objectID": "tables/dataTable01.html#select-multiple-columns",
    "href": "tables/dataTable01.html#select-multiple-columns",
    "title": "dataTableExample",
    "section": "2 Select multiple columns",
    "text": "2 Select multiple columns\n\ndt[, list(mpg,cyl)] |&gt; head()\n\n     mpg   cyl\n   &lt;num&gt; &lt;num&gt;\n1:  21.0     6\n2:  21.0     6\n3:  22.8     4\n4:  21.4     6\n5:  18.7     8\n6:  18.1     6\n\n\nor\n\ndt[, .(mpg, cyl, gear)] |&gt; head()\n\n     mpg   cyl  gear\n   &lt;num&gt; &lt;num&gt; &lt;num&gt;\n1:  21.0     6     4\n2:  21.0     6     4\n3:  22.8     4     4\n4:  21.4     6     3\n5:  18.7     8     3\n6:  18.1     6     3"
  },
  {
    "objectID": "tables/dataTable01.html#data",
    "href": "tables/dataTable01.html#data",
    "title": "dataTable",
    "section": "1 Data",
    "text": "1 Data\n      ID Test1 Test2 Exam \n1  SD101    11    48   61    \n2  SD102     8    43   77    \n3  SD103    13    15   49    \n4  SD104    15    20   57    \n5  SD105    10    40   82     \n6  SD106    11    23   65     \n7  SD107     6    24   46    \n8  SD108    12    47   80     \n9  SD109    10    21   48     \n10 SD110     7    27   62     \n\n1.1 Create a data.table using fread\n\nlibrary(data.table)\ndt0 &lt;- fread(text = \"\nrow ID Test1 Test2 Exam \n1  SD101    11    48   61     \n2  SD102     8    43   77    \n3  SD103    13    15   49    \n4  SD104    15    20   57    \n5  SD105    10    40   82    \n6  SD106    11    23   65    \n7  SD107     6    24   46    \n8  SD108    12    47   80    \n9  SD109    10    21   48   \n10 SD110     7    27   62   \")\nclass(dt0)\n\n[1] \"data.table\" \"data.frame\"\n\n# remove the row column\ndt &lt;- dt0[,!\"row\", with=FALSE]\ndt\n\n        ID Test1 Test2  Exam\n    &lt;char&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;\n 1:  SD101    11    48    61\n 2:  SD102     8    43    77\n 3:  SD103    13    15    49\n 4:  SD104    15    20    57\n 5:  SD105    10    40    82\n 6:  SD106    11    23    65\n 7:  SD107     6    24    46\n 8:  SD108    12    47    80\n 9:  SD109    10    21    48\n10:  SD110     7    27    62\n\n\n\n\n1.2 Create a new data.table column\n(equivalent of mutate)\n\n # equivalent of mutate\ndt[, TotScore := Test1+0.4*Test2+0.6*Exam ]\ndt\n\n        ID Test1 Test2  Exam TotScore\n    &lt;char&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;num&gt;\n 1:  SD101    11    48    61     66.8\n 2:  SD102     8    43    77     71.4\n 3:  SD103    13    15    49     48.4\n 4:  SD104    15    20    57     57.2\n 5:  SD105    10    40    82     75.2\n 6:  SD106    11    23    65     59.2\n 7:  SD107     6    24    46     43.2\n 8:  SD108    12    47    80     78.8\n 9:  SD109    10    21    48     47.2\n10:  SD110     7    27    62     55.0\n\n\n\n\n1.3 Read a data.table column\n\nscore &lt;- dt[,TotScore]\nscore\n\n [1] 66.8 71.4 48.4 57.2 75.2 59.2 43.2 78.8 47.2 55.0\n\n\n\n\n1.4 Using cut to data segment and assign letter grade\n\nbreaks&lt;- c(0,40,44,49,54,59,64,69,74,79,84,100)\nlabels&lt;-c(\"F\",\"D\",\"D+\",\"C\",\"C+\",\"B-\",\"B\",\"B+\",\"A-\",\"A\",\"A+\")\nlgrades&lt;-cut(score, breaks, labels, right=TRUE)\ndt[,Grade := lgrades]\ndt\n\n        ID Test1 Test2  Exam TotScore  Grade\n    &lt;char&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;num&gt; &lt;fctr&gt;\n 1:  SD101    11    48    61     66.8      B\n 2:  SD102     8    43    77     71.4     B+\n 3:  SD103    13    15    49     48.4     D+\n 4:  SD104    15    20    57     57.2     C+\n 5:  SD105    10    40    82     75.2     A-\n 6:  SD106    11    23    65     59.2     B-\n 7:  SD107     6    24    46     43.2      D\n 8:  SD108    12    47    80     78.8     A-\n 9:  SD109    10    21    48     47.2     D+\n10:  SD110     7    27    62     55.0     C+\n\n\n\n\n1.5 Filtering rows - all B’s (B+,B,B-)\n\nBTerms &lt;- c(\"B+\",\"B\",\"B-\")\ndt[Grade %in% BTerms,]\n\n       ID Test1 Test2  Exam TotScore  Grade\n   &lt;char&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;num&gt; &lt;fctr&gt;\n1:  SD101    11    48    61     66.8      B\n2:  SD102     8    43    77     71.4     B+\n3:  SD106    11    23    65     59.2     B-"
  },
  {
    "objectID": "tables/dataTable01.html#section",
    "href": "tables/dataTable01.html#section",
    "title": "dataTableExample",
    "section": "3 ",
    "text": "3"
  },
  {
    "objectID": "tables/dataTable01.html#create-a-data.table",
    "href": "tables/dataTable01.html#create-a-data.table",
    "title": "dataTableExample",
    "section": "2 Create a data.table",
    "text": "2 Create a data.table\n\nlibrary(data.table)\ndt0 &lt;- fread(text = \"\nrow ID Test1 Test2 Exam \n1  SD101    11    48   61     \n2  SD102     8    43   77    \n3  SD103    13    15   49    \n4  SD104    15    20   57    \n5  SD105    10    40   82    \n6  SD106    11    23   65    \n7  SD107     6    24   46    \n8  SD108    12    47   80    \n9  SD109    10    21   48   \n10 SD110     7    27   62   \")\nclass(dt0)\n\n[1] \"data.table\" \"data.frame\"\n\ndt &lt;- dt0[,!\"row\", with=FALSE]\ndt\n\n        ID Test1 Test2  Exam\n    &lt;char&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;\n 1:  SD101    11    48    61\n 2:  SD102     8    43    77\n 3:  SD103    13    15    49\n 4:  SD104    15    20    57\n 5:  SD105    10    40    82\n 6:  SD106    11    23    65\n 7:  SD107     6    24    46\n 8:  SD108    12    47    80\n 9:  SD109    10    21    48\n10:  SD110     7    27    62"
  },
  {
    "objectID": "tables/dataTable01.html#create-a-new-column-mutate",
    "href": "tables/dataTable01.html#create-a-new-column-mutate",
    "title": "dataTableExample",
    "section": "3 Create a new column (mutate)",
    "text": "3 Create a new column (mutate)\n\ndt[, TotScore := Test1+0.4*Test2+0.6*Exam ]\ndt\n\n        ID Test1 Test2  Exam TotScore\n    &lt;char&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;num&gt;\n 1:  SD101    11    48    61     66.8\n 2:  SD102     8    43    77     71.4\n 3:  SD103    13    15    49     48.4\n 4:  SD104    15    20    57     57.2\n 5:  SD105    10    40    82     75.2\n 6:  SD106    11    23    65     59.2\n 7:  SD107     6    24    46     43.2\n 8:  SD108    12    47    80     78.8\n 9:  SD109    10    21    48     47.2\n10:  SD110     7    27    62     55.0"
  },
  {
    "objectID": "tables/dataTable01.html#create-a-new-column-equivalent-of-mutate",
    "href": "tables/dataTable01.html#create-a-new-column-equivalent-of-mutate",
    "title": "dataTableExample",
    "section": "3 Create a new column (equivalent of mutate)",
    "text": "3 Create a new column (equivalent of mutate)\n\ndt[, TotScore := Test1+0.4*Test2+0.6*Exam ]\ndt\n\n        ID Test1 Test2  Exam TotScore\n    &lt;char&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;num&gt;\n 1:  SD101    11    48    61     66.8\n 2:  SD102     8    43    77     71.4\n 3:  SD103    13    15    49     48.4\n 4:  SD104    15    20    57     57.2\n 5:  SD105    10    40    82     75.2\n 6:  SD106    11    23    65     59.2\n 7:  SD107     6    24    46     43.2\n 8:  SD108    12    47    80     78.8\n 9:  SD109    10    21    48     47.2\n10:  SD110     7    27    62     55.0"
  },
  {
    "objectID": "tables/dataTable01.html#create-a-new-column",
    "href": "tables/dataTable01.html#create-a-new-column",
    "title": "dataTableExample",
    "section": "3 Create a new column",
    "text": "3 Create a new column\n(equivalent of mutate)\n\n # equivalent of mutate\ndt[, TotScore := Test1+0.4*Test2+0.6*Exam ]\ndt\n\n        ID Test1 Test2  Exam TotScore\n    &lt;char&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;num&gt;\n 1:  SD101    11    48    61     66.8\n 2:  SD102     8    43    77     71.4\n 3:  SD103    13    15    49     48.4\n 4:  SD104    15    20    57     57.2\n 5:  SD105    10    40    82     75.2\n 6:  SD106    11    23    65     59.2\n 7:  SD107     6    24    46     43.2\n 8:  SD108    12    47    80     78.8\n 9:  SD109    10    21    48     47.2\n10:  SD110     7    27    62     55.0\n\n\n\n3.1 Read a column\n\nscore &lt;- dt[,TotScore]\nscore\n\n [1] 66.8 71.4 48.4 57.2 75.2 59.2 43.2 78.8 47.2 55.0\n\n\n\nbreaks&lt;- c(0,40,44,49,54,59,64,69,74,79,84,100)\nlabels&lt;-c(\"F\",\"D\",\"D+\",\"C\",\"C+\",\"B-\",\"B\",\"B+\",\"A-\",\"A\",\"A+\")\nletter.grades&lt;-cut(score, breaks, labels, right=TRUE)\nletter.grades\n\n [1] B  B+ D+ C+ A- B- D  A- D+ C+\nLevels: F D D+ C C+ B- B B+ A- A A+"
  },
  {
    "objectID": "tables/dataTable01.html",
    "href": "tables/dataTable01.html",
    "title": "dataTable",
    "section": "",
    "text": "{library(tidyverse)}"
  },
  {
    "objectID": "tables/dataTable01.html#create-a-data.table-using-fread",
    "href": "tables/dataTable01.html#create-a-data.table-using-fread",
    "title": "dataTableExample",
    "section": "2 Create a data.table using fread",
    "text": "2 Create a data.table using fread\n\nlibrary(data.table)\ndt0 &lt;- fread(text = \"\nrow ID Test1 Test2 Exam \n1  SD101    11    48   61     \n2  SD102     8    43   77    \n3  SD103    13    15   49    \n4  SD104    15    20   57    \n5  SD105    10    40   82    \n6  SD106    11    23   65    \n7  SD107     6    24   46    \n8  SD108    12    47   80    \n9  SD109    10    21   48   \n10 SD110     7    27   62   \")\nclass(dt0)\n\n[1] \"data.table\" \"data.frame\"\n\n# remove the row column\ndt &lt;- dt0[,!\"row\", with=FALSE]\ndt\n\n        ID Test1 Test2  Exam\n    &lt;char&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;\n 1:  SD101    11    48    61\n 2:  SD102     8    43    77\n 3:  SD103    13    15    49\n 4:  SD104    15    20    57\n 5:  SD105    10    40    82\n 6:  SD106    11    23    65\n 7:  SD107     6    24    46\n 8:  SD108    12    47    80\n 9:  SD109    10    21    48\n10:  SD110     7    27    62"
  },
  {
    "objectID": "tables/dataTable.html",
    "href": "tables/dataTable.html",
    "title": "dataTable",
    "section": "",
    "text": "needs library(data.table)\ncreate dataTable (dt) using fread or data.table\ndata.table is also a data.frame and thus functions-methods on dataframes are also applicable to dataTable",
    "crumbs": [
      "Tables",
      "dataTable"
    ]
  },
  {
    "objectID": "tables/dataTable.html#data",
    "href": "tables/dataTable.html#data",
    "title": "dataTable",
    "section": "2 Data",
    "text": "2 Data\n   ID Gender Test1 Test2 Exam \n1  SD101 M  11    48   61    \n2  SD102 F   8    43   77    \n3  SD103 F  13    15   49    \n4  SD104 F  15    20   57    \n5  SD105 M  10    40   82     \n6  SD106 F  11    23   65     \n7  SD107 M   6    24   46    \n8  SD108 M  12    47   80     \n9  SD109 M  10    21   48     \n10 SD110 M   7    27   62     \n\n2.1 Method 1: create data.table using fread\n\nlibrary(data.table)\n\n# note row definition\ndt0 &lt;- fread(text = \"\nrow  ID Gender Test1 Test2 Exam \n1  SD101 M   11    48   61    \n2  SD102 F    8    43   77    \n3  SD103 F   13    15   49    \n4  SD104 F   15    20   57    \n5  SD105 M   10    40   82     \n6  SD106 F   11    23   65     \n7  SD107 M    6    24   46    \n8  SD108 M   12    47   80     \n9  SD109 M   10    21   48     \n10 SD110 M    7    27   62  \")\nclass(dt0)\n\n[1] \"data.table\" \"data.frame\"\n\n# remove the row column\ndt &lt;- dt0[,!\"row\", with=FALSE]\ndt\n\n        ID Gender Test1 Test2  Exam\n    &lt;char&gt; &lt;char&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;\n 1:  SD101      M    11    48    61\n 2:  SD102      F     8    43    77\n 3:  SD103      F    13    15    49\n 4:  SD104      F    15    20    57\n 5:  SD105      M    10    40    82\n 6:  SD106      F    11    23    65\n 7:  SD107      M     6    24    46\n 8:  SD108      M    12    47    80\n 9:  SD109      M    10    21    48\n10:  SD110      M     7    27    62\n\n\n\n\n2.2 Method 2: create data.table using vectors or lists\n\nID2 &lt;- str_c(\"SD\",101:110)\nGender2 &lt;- c(\"M\",\"F\",\"F\",\"F\",\"M\",\"F\",\"M\",\"M\",\"M\",\"M\")\nTest21 &lt;- c(11,8,13,15,10,11,6,12,10,7)\nTest22 &lt;- c(48,43,15,20,40,23,24,47,21,27)\nExam23 &lt;- c(61,77,49,57,82,65,46,80,48,62)\ndt2 &lt;- data.table(ID2,Gender2,Test21,Test22,Exam23)\nclass(dt2)\n\n[1] \"data.table\" \"data.frame\"",
    "crumbs": [
      "Tables",
      "dataTable"
    ]
  },
  {
    "objectID": "tables/dataTable.html#library",
    "href": "tables/dataTable.html#library",
    "title": "dataTable",
    "section": "1 Library",
    "text": "1 Library\n\nlibrary(tidyverse)\nlibrary(data.table)",
    "crumbs": [
      "Tables",
      "dataTable"
    ]
  },
  {
    "objectID": "tables/dataTableEx.html",
    "href": "tables/dataTableEx.html",
    "title": "dataTableExercises",
    "section": "",
    "text": "URL: https://www.machinelearningplus.com/data-manipulation/101-r-data-table-exercises/\n\n1. Install data.table\n\nlibrary(data.table)\n\n\n\n2. Create a data.table from lists\n\nlist_1 &lt;- c(\"a\",\"b\",\"c\",\"d\")\nlist_2 &lt;- c(\"1\",\"2\",\"3\",\"4\")\nlist_3 &lt;- c(\"aa\",\"bb\",\"cc\",\"dd\")\ndt2 &lt;- data.table(v1=list_1,v2=list_2,v3=list_3)\nclass(dt2)\n\n[1] \"data.table\" \"data.frame\"\n\ndt2\n\n       v1     v2     v3\n   &lt;char&gt; &lt;char&gt; &lt;char&gt;\n1:      a      1     aa\n2:      b      2     bb\n3:      c      3     cc\n4:      d      4     dd\n\n\n\n\n3. import BostonHousing dataset as a data.table\nhttps://raw.githubusercontent.com/selva86/datasets/master/BostonHousing.csv\n\nmycsv&lt;-\"https://raw.githubusercontent.com/selva86/datasets/master/BostonHousing.csv\"\ndt3&lt;-fread(file=mycsv)\ndt3\n\n        crim    zn indus  chas   nox    rm   age    dis   rad   tax ptratio\n       &lt;num&gt; &lt;num&gt; &lt;num&gt; &lt;int&gt; &lt;num&gt; &lt;num&gt; &lt;num&gt;  &lt;num&gt; &lt;int&gt; &lt;int&gt;   &lt;num&gt;\n  1: 0.00632    18  2.31     0 0.538 6.575  65.2 4.0900     1   296    15.3\n  2: 0.02731     0  7.07     0 0.469 6.421  78.9 4.9671     2   242    17.8\n  3: 0.02729     0  7.07     0 0.469 7.185  61.1 4.9671     2   242    17.8\n  4: 0.03237     0  2.18     0 0.458 6.998  45.8 6.0622     3   222    18.7\n  5: 0.06905     0  2.18     0 0.458 7.147  54.2 6.0622     3   222    18.7\n ---                                                                       \n502: 0.06263     0 11.93     0 0.573 6.593  69.1 2.4786     1   273    21.0\n503: 0.04527     0 11.93     0 0.573 6.120  76.7 2.2875     1   273    21.0\n504: 0.06076     0 11.93     0 0.573 6.976  91.0 2.1675     1   273    21.0\n505: 0.10959     0 11.93     0 0.573 6.794  89.3 2.3889     1   273    21.0\n506: 0.04741     0 11.93     0 0.573 6.030  80.8 2.5050     1   273    21.0\n          b lstat  medv\n      &lt;num&gt; &lt;num&gt; &lt;num&gt;\n  1: 396.90  4.98  24.0\n  2: 396.90  9.14  21.6\n  3: 392.83  4.03  34.7\n  4: 394.63  2.94  33.4\n  5: 396.90  5.33  36.2\n ---                   \n502: 391.99  9.67  22.4\n503: 396.90  9.08  20.6\n504: 396.90  5.64  23.9\n505: 393.45  6.48  22.0\n506: 396.90  7.88  11.9\n\n\n\n\n4. import only ‘n=50’ rows of BostonHousing\n\nfread(file=mycsv, nrows=50) |&gt; head()\n\n      crim    zn indus  chas   nox    rm   age    dis   rad   tax ptratio\n     &lt;num&gt; &lt;num&gt; &lt;num&gt; &lt;int&gt; &lt;num&gt; &lt;num&gt; &lt;num&gt;  &lt;num&gt; &lt;int&gt; &lt;int&gt;   &lt;num&gt;\n1: 0.00632    18  2.31     0 0.538 6.575  65.2 4.0900     1   296    15.3\n2: 0.02731     0  7.07     0 0.469 6.421  78.9 4.9671     2   242    17.8\n3: 0.02729     0  7.07     0 0.469 7.185  61.1 4.9671     2   242    17.8\n4: 0.03237     0  2.18     0 0.458 6.998  45.8 6.0622     3   222    18.7\n5: 0.06905     0  2.18     0 0.458 7.147  54.2 6.0622     3   222    18.7\n6: 0.02985     0  2.18     0 0.458 6.430  58.7 6.0622     3   222    18.7\n        b lstat  medv\n    &lt;num&gt; &lt;num&gt; &lt;num&gt;\n1: 396.90  4.98  24.0\n2: 396.90  9.14  21.6\n3: 392.83  4.03  34.7\n4: 394.63  2.94  33.4\n5: 396.90  5.33  36.2\n6: 394.12  5.21  28.7\n\n\n\n\n5. Import only crim and medv columns\n\nfread(file=mycsv, select=c('crim','medv')) |&gt; head()\n\n      crim  medv\n     &lt;num&gt; &lt;num&gt;\n1: 0.00632  24.0\n2: 0.02731  21.6\n3: 0.02729  34.7\n4: 0.03237  33.4\n5: 0.06905  36.2\n6: 0.02985  28.7\n\n\n\n\n6. get nrows, ncolumns, datatype and summary stats of each column of Cars93\n\nDT &lt;- fread('https://raw.githubusercontent.com/selva86/datasets/master/BostonHousing.csv')\nnrow(DT)\n\n[1] 506\n\nncol(DT)\n\n[1] 14\n\nsapply(DT, class)\n\n     crim        zn     indus      chas       nox        rm       age       dis \n\"numeric\" \"numeric\" \"numeric\" \"integer\" \"numeric\" \"numeric\" \"numeric\" \"numeric\" \n      rad       tax   ptratio         b     lstat      medv \n\"integer\" \"integer\" \"numeric\" \"numeric\" \"numeric\" \"numeric\" \n\nsummary(DT)\n\n      crim                zn             indus            chas        \n Min.   : 0.00632   Min.   :  0.00   Min.   : 0.46   Min.   :0.00000  \n 1st Qu.: 0.08205   1st Qu.:  0.00   1st Qu.: 5.19   1st Qu.:0.00000  \n Median : 0.25651   Median :  0.00   Median : 9.69   Median :0.00000  \n Mean   : 3.61352   Mean   : 11.36   Mean   :11.14   Mean   :0.06917  \n 3rd Qu.: 3.67708   3rd Qu.: 12.50   3rd Qu.:18.10   3rd Qu.:0.00000  \n Max.   :88.97620   Max.   :100.00   Max.   :27.74   Max.   :1.00000  \n      nox               rm             age              dis        \n Min.   :0.3850   Min.   :3.561   Min.   :  2.90   Min.   : 1.130  \n 1st Qu.:0.4490   1st Qu.:5.886   1st Qu.: 45.02   1st Qu.: 2.100  \n Median :0.5380   Median :6.208   Median : 77.50   Median : 3.207  \n Mean   :0.5547   Mean   :6.285   Mean   : 68.57   Mean   : 3.795  \n 3rd Qu.:0.6240   3rd Qu.:6.623   3rd Qu.: 94.08   3rd Qu.: 5.188  \n Max.   :0.8710   Max.   :8.780   Max.   :100.00   Max.   :12.127  \n      rad              tax           ptratio            b         \n Min.   : 1.000   Min.   :187.0   Min.   :12.60   Min.   :  0.32  \n 1st Qu.: 4.000   1st Qu.:279.0   1st Qu.:17.40   1st Qu.:375.38  \n Median : 5.000   Median :330.0   Median :19.05   Median :391.44  \n Mean   : 9.549   Mean   :408.2   Mean   :18.46   Mean   :356.67  \n 3rd Qu.:24.000   3rd Qu.:666.0   3rd Qu.:20.20   3rd Qu.:396.23  \n Max.   :24.000   Max.   :711.0   Max.   :22.00   Max.   :396.90  \n     lstat            medv      \n Min.   : 1.73   Min.   : 5.00  \n 1st Qu.: 6.95   1st Qu.:17.02  \n Median :11.36   Median :21.20  \n Mean   :12.65   Mean   :22.53  \n 3rd Qu.:16.95   3rd Qu.:25.00  \n Max.   :37.97   Max.   :50.00"
  },
  {
    "objectID": "tables/dataTableTut.html",
    "href": "tables/dataTableTut.html",
    "title": "dataTable",
    "section": "",
    "text": "{library(tidyverse)}"
  },
  {
    "objectID": "tables/dataTableTut.html#data",
    "href": "tables/dataTableTut.html#data",
    "title": "dataTable",
    "section": "1 Data",
    "text": "1 Data\n      ID Test1 Test2 Exam \n1  SD101    11    48   61    \n2  SD102     8    43   77    \n3  SD103    13    15   49    \n4  SD104    15    20   57    \n5  SD105    10    40   82     \n6  SD106    11    23   65     \n7  SD107     6    24   46    \n8  SD108    12    47   80     \n9  SD109    10    21   48     \n10 SD110     7    27   62     \n\n1.1 Create a data.table using fread\n\nlibrary(data.table)\ndt0 &lt;- fread(text = \"\nrow ID Test1 Test2 Exam \n1  SD101    11    48   61     \n2  SD102     8    43   77    \n3  SD103    13    15   49    \n4  SD104    15    20   57    \n5  SD105    10    40   82    \n6  SD106    11    23   65    \n7  SD107     6    24   46    \n8  SD108    12    47   80    \n9  SD109    10    21   48   \n10 SD110     7    27   62   \")\nclass(dt0)\n\n[1] \"data.table\" \"data.frame\"\n\n# remove the row column\ndt &lt;- dt0[,!\"row\", with=FALSE]\ndt\n\n        ID Test1 Test2  Exam\n    &lt;char&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;\n 1:  SD101    11    48    61\n 2:  SD102     8    43    77\n 3:  SD103    13    15    49\n 4:  SD104    15    20    57\n 5:  SD105    10    40    82\n 6:  SD106    11    23    65\n 7:  SD107     6    24    46\n 8:  SD108    12    47    80\n 9:  SD109    10    21    48\n10:  SD110     7    27    62\n\n\n\n\n1.2 Create a new data.table column\n(equivalent of mutate)\n\n # equivalent of mutate\ndt[, TotScore := Test1+0.4*Test2+0.6*Exam ]\ndt\n\n        ID Test1 Test2  Exam TotScore\n    &lt;char&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;num&gt;\n 1:  SD101    11    48    61     66.8\n 2:  SD102     8    43    77     71.4\n 3:  SD103    13    15    49     48.4\n 4:  SD104    15    20    57     57.2\n 5:  SD105    10    40    82     75.2\n 6:  SD106    11    23    65     59.2\n 7:  SD107     6    24    46     43.2\n 8:  SD108    12    47    80     78.8\n 9:  SD109    10    21    48     47.2\n10:  SD110     7    27    62     55.0\n\n\n\n\n1.3 Read a data.table column\n\nscore &lt;- dt[,TotScore]\nscore\n\n [1] 66.8 71.4 48.4 57.2 75.2 59.2 43.2 78.8 47.2 55.0\n\n\n\n\n1.4 Using cut to data segment and assign letter grade\n\nbreaks&lt;- c(0,40,44,49,54,59,64,69,74,79,84,100)\nlabels&lt;-c(\"F\",\"D\",\"D+\",\"C\",\"C+\",\"B-\",\"B\",\"B+\",\"A-\",\"A\",\"A+\")\nlgrades&lt;-cut(score, breaks, labels, right=TRUE)\ndt[,Grade := lgrades]\ndt\n\n        ID Test1 Test2  Exam TotScore  Grade\n    &lt;char&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;num&gt; &lt;fctr&gt;\n 1:  SD101    11    48    61     66.8      B\n 2:  SD102     8    43    77     71.4     B+\n 3:  SD103    13    15    49     48.4     D+\n 4:  SD104    15    20    57     57.2     C+\n 5:  SD105    10    40    82     75.2     A-\n 6:  SD106    11    23    65     59.2     B-\n 7:  SD107     6    24    46     43.2      D\n 8:  SD108    12    47    80     78.8     A-\n 9:  SD109    10    21    48     47.2     D+\n10:  SD110     7    27    62     55.0     C+\n\n\n\n\n1.5 Filtering rows - all B’s (B+,B,B-)\n\nBTerms &lt;- c(\"B+\",\"B\",\"B-\")\ndt[Grade %in% BTerms,]\n\n       ID Test1 Test2  Exam TotScore  Grade\n   &lt;char&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;num&gt; &lt;fctr&gt;\n1:  SD101    11    48    61     66.8      B\n2:  SD102     8    43    77     71.4     B+\n3:  SD106    11    23    65     59.2     B-"
  },
  {
    "objectID": "test.html#boxplot-jitter",
    "href": "test.html#boxplot-jitter",
    "title": "WebR",
    "section": "",
    "text": "library(tidyverse)\n\n\n\n\nlibrary(data.table)\nPM &lt;- scan(text=\"45.5 45.3 45.4 44.4 44.6 43.9 44.6 44.0\")\nDC &lt;- scan(text=\"44.2 43.9 44.7 44.2 44.0 43.8 44.6 43.1\")\nPL &lt;- scan(text=\"46.0 45.9 44.8 46.2 45.1 45.5\") # note shorter\n\nnames(PM) &lt;- c(rep(\"PM\",length(PM)))\nnames(DC) &lt;- c(rep(\"DC\",length(DC)))\nnames(PL) &lt;- c(rep(\"PL\",length(PL)))\nvec &lt;- c(PM,DC,PL)\nvec\n\n  PM   PM   PM   PM   PM   PM   PM   PM   DC   DC   DC   DC   DC   DC   DC   DC \n45.5 45.3 45.4 44.4 44.6 43.9 44.6 44.0 44.2 43.9 44.7 44.2 44.0 43.8 44.6 43.1 \n  PL   PL   PL   PL   PL   PL \n46.0 45.9 44.8 46.2 45.1 45.5 \n\ndf &lt;- stack(vec)[2:1]\ndf\n\n   ind values\n1   PM   45.5\n2   PM   45.3\n3   PM   45.4\n4   PM   44.4\n5   PM   44.6\n6   PM   43.9\n7   PM   44.6\n8   PM   44.0\n9   DC   44.2\n10  DC   43.9\n11  DC   44.7\n12  DC   44.2\n13  DC   44.0\n14  DC   43.8\n15  DC   44.6\n16  DC   43.1\n17  PL   46.0\n18  PL   45.9\n19  PL   44.8\n20  PL   46.2\n21  PL   45.1\n22  PL   45.5\n\n\n\n\n\n\nggplot(df, aes(x=ind,y=values,color=ind))+\n  geom_boxplot()+\n  geom_jitter()+\n  theme_bw()"
  },
  {
    "objectID": "tables/createTable.html",
    "href": "tables/createTable.html",
    "title": "createTable",
    "section": "",
    "text": "library(tidyverse)\nlibrary(data.table)\nlibrary(MASS)"
  },
  {
    "objectID": "tables/createTable.html#data",
    "href": "tables/createTable.html#data",
    "title": "createTable",
    "section": "2 Data",
    "text": "2 Data\nDevore Example 12.10\n3x3 table\n\nProd Blemish Crack Location Missing Others\nP1    34      65      17      21      13\nP2    33      52      25      19      6\nP3    32      28      16      14      10\n\n# vectors\nBlemish &lt;- c(34,33,32)\nCrack &lt;- c(65,52,28)\nLocation &lt;- c(17,25,16)\nMissing &lt;- c(21,19,14)\nOthers &lt;- c(13,6,10)\ndtable = data.table(Blemish, Crack, Location, Missing, Others)\ndf &lt;- data.frame(dtable)\ndtable\n\n   Blemish Crack Location Missing Others\n     &lt;num&gt; &lt;num&gt;    &lt;num&gt;   &lt;num&gt;  &lt;num&gt;\n1:      34    65       17      21     13\n2:      33    52       25      19      6\n3:      32    28       16      14     10\n\nstr(dtable)\n\nClasses 'data.table' and 'data.frame':  3 obs. of  5 variables:\n $ Blemish : num  34 33 32\n $ Crack   : num  65 52 28\n $ Location: num  17 25 16\n $ Missing : num  21 19 14\n $ Others  : num  13 6 10\n - attr(*, \".internal.selfref\")=&lt;externalptr&gt; \n\nstr(df)\n\n'data.frame':   3 obs. of  5 variables:\n $ Blemish : num  34 33 32\n $ Crack   : num  65 52 28\n $ Location: num  17 25 16\n $ Missing : num  21 19 14\n $ Others  : num  13 6 10"
  },
  {
    "objectID": "tables/createTable.html#library",
    "href": "tables/createTable.html#library",
    "title": "createTable",
    "section": "",
    "text": "library(tidyverse)\nlibrary(data.table)\nlibrary(MASS)"
  },
  {
    "objectID": "tables/dataTable.html#creating-a-data.table-using-fread",
    "href": "tables/dataTable.html#creating-a-data.table-using-fread",
    "title": "dataTable",
    "section": "3 Creating a data.table using fread",
    "text": "3 Creating a data.table using fread\n\nlibrary(data.table)\n\n# note row definition\ndt0 &lt;- fread(text = \"\nrow  ID Gender Test1 Test2 Exam \n1  SD101 M   11    48   61    \n2  SD102 F    8    43   77    \n3  SD103 F   13    15   49    \n4  SD104 F   15    20   57    \n5  SD105 M   10    40   82     \n6  SD106 F   11    23   65     \n7  SD107 M    6    24   46    \n8  SD108 M   12    47   80     \n9  SD109 M   10    21   48     \n10 SD110 M    7    27   62  \")\nclass(dt0)\n\n[1] \"data.table\" \"data.frame\"\n\n# remove the row column\ndt &lt;- dt0[,!\"row\", with=FALSE]\ndt\n\n        ID Gender Test1 Test2  Exam\n    &lt;char&gt; &lt;char&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;\n 1:  SD101      M    11    48    61\n 2:  SD102      F     8    43    77\n 3:  SD103      F    13    15    49\n 4:  SD104      F    15    20    57\n 5:  SD105      M    10    40    82\n 6:  SD106      F    11    23    65\n 7:  SD107      M     6    24    46\n 8:  SD108      M    12    47    80\n 9:  SD109      M    10    21    48\n10:  SD110      M     7    27    62",
    "crumbs": [
      "Tables",
      "dataTable"
    ]
  },
  {
    "objectID": "tables/dataTable.html#alternatively-create-data.table-using-combined-vectors-lists",
    "href": "tables/dataTable.html#alternatively-create-data.table-using-combined-vectors-lists",
    "title": "dataTable",
    "section": "4 Alternatively, create data.table using combined vectors, lists",
    "text": "4 Alternatively, create data.table using combined vectors, lists\n\nID2 &lt;- str_c(\"SD\",101:110)\nGender2 &lt;- c(\"M\",\"F\",\"F\",\"F\",\"M\",\"F\",\"M\",\"M\",\"M\",\"M\")\nTest21 &lt;- c(11,8,13,15,10,11,6,12,10,7)\nTest22 &lt;- c(48,43,15,20,40,23,24,47,21,27)\nExam23 &lt;- c(61,77,49,57,82,65,46,80,48,62)\ndt2 &lt;- data.table(ID2,Gender2,Test21,Test22,Exam23)\nclass(dt2)\n\n[1] \"data.table\" \"data.frame\"\n\n\n\n4.1 Create a new data.table column\n(equivalent of mutate)\n\n # equivalent of mutate\ndt[, TotScore := Test1+0.4*Test2+0.6*Exam ]\ndt\n\n        ID Gender Test1 Test2  Exam TotScore\n    &lt;char&gt; &lt;char&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;num&gt;\n 1:  SD101      M    11    48    61     66.8\n 2:  SD102      F     8    43    77     71.4\n 3:  SD103      F    13    15    49     48.4\n 4:  SD104      F    15    20    57     57.2\n 5:  SD105      M    10    40    82     75.2\n 6:  SD106      F    11    23    65     59.2\n 7:  SD107      M     6    24    46     43.2\n 8:  SD108      M    12    47    80     78.8\n 9:  SD109      M    10    21    48     47.2\n10:  SD110      M     7    27    62     55.0\n\n\n\n\n4.2 Select multiple rows and columns\n\ndt[1:4,c('Test1','Test2'), with=FALSE]\n\n   Test1 Test2\n   &lt;int&gt; &lt;int&gt;\n1:    11    48\n2:     8    43\n3:    13    15\n4:    15    20\n\n\n\n\n4.3 Read a data.table column to a vector\n\nscore &lt;- dt[,TotScore]\nscore\n\n [1] 66.8 71.4 48.4 57.2 75.2 59.2 43.2 78.8 47.2 55.0\n\n\n\n\n4.4 Using cut to data segment and assign letter grade\n\nbreaks&lt;- c(0,40,44,49,54,59,64,69,74,79,84,100)\nlabels&lt;-c(\"F\",\"D\",\"D+\",\"C\",\"C+\",\"B-\",\"B\",\"B+\",\"A-\",\"A\",\"A+\")\nlgrades&lt;-cut(score, breaks, labels, right=TRUE)\ndt[,Grade := lgrades]\ndt\n\n        ID Gender Test1 Test2  Exam TotScore  Grade\n    &lt;char&gt; &lt;char&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;num&gt; &lt;fctr&gt;\n 1:  SD101      M    11    48    61     66.8      B\n 2:  SD102      F     8    43    77     71.4     B+\n 3:  SD103      F    13    15    49     48.4     D+\n 4:  SD104      F    15    20    57     57.2     C+\n 5:  SD105      M    10    40    82     75.2     A-\n 6:  SD106      F    11    23    65     59.2     B-\n 7:  SD107      M     6    24    46     43.2      D\n 8:  SD108      M    12    47    80     78.8     A-\n 9:  SD109      M    10    21    48     47.2     D+\n10:  SD110      M     7    27    62     55.0     C+\n\n\n\n\n4.5 Filtering rows - all B’s (B+,B,B-)\n\nBTerms &lt;- c(\"B+\",\"B\",\"B-\")\ndt[Grade %in% BTerms,]\n\n       ID Gender Test1 Test2  Exam TotScore  Grade\n   &lt;char&gt; &lt;char&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;num&gt; &lt;fctr&gt;\n1:  SD101      M    11    48    61     66.8      B\n2:  SD102      F     8    43    77     71.4     B+\n3:  SD106      F    11    23    65     59.2     B-\n\n\n\n\n4.6 Getting row numbers\n\nr1 &lt;- dt[,.I[Grade=='A-']]\nr1\n\n[1] 5 8\n\n# alternatively\nr2 &lt;- dt[,which(Grade=='A-')]\ndt[r2,]\n\n       ID Gender Test1 Test2  Exam TotScore  Grade\n   &lt;char&gt; &lt;char&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;num&gt; &lt;fctr&gt;\n1:  SD105      M    10    40    82     75.2     A-\n2:  SD108      M    12    47    80     78.8     A-\n\n\n\n\n4.7 Count numbers in each grade (Grouping)\n\nlvlgrades= as_factor(c(\"A+\",\"A\",\"A-\",\"B+\",\"B\",\"B-\",\"C+\",\"C\",\"D+\",\"D\",\"F\"))\ndt[, .N, by=Grade]\n\n    Grade     N\n   &lt;fctr&gt; &lt;int&gt;\n1:      B     1\n2:     B+     1\n3:     D+     2\n4:     C+     2\n5:     A-     2\n6:     B-     1\n7:      D     1\n\n\n\n\n4.8 Mean TotScore by Gender (Grouping)\n\ndt_m &lt;- dt[,.(meanTotScore = round(mean(TotScore),2)),by=Gender]\ndt_m\n\n   Gender meanTotScore\n   &lt;char&gt;        &lt;num&gt;\n1:      M        61.03\n2:      F        59.05\n\n\n\n\n4.9 Means of Columns\n\ndt3 &lt;- dt[,.(mt1&lt;-mean(Test1), \n      mt2&lt;-mean(Test2),\n      mt3&lt;-mean(Exam))]\ndt3\n\n      V1    V2    V3\n   &lt;num&gt; &lt;num&gt; &lt;num&gt;\n1:  10.3  30.8  62.7\n\nsetnames(dt3, c('mt1','mt2','mt3'))\ndt3\n\n     mt1   mt2   mt3\n   &lt;num&gt; &lt;num&gt; &lt;num&gt;\n1:  10.3  30.8  62.7",
    "crumbs": [
      "Tables",
      "dataTable"
    ]
  },
  {
    "objectID": "tables/dataTable.html#data.table-manipulation",
    "href": "tables/dataTable.html#data.table-manipulation",
    "title": "dataTable",
    "section": "3 data.Table Manipulation",
    "text": "3 data.Table Manipulation\n\n3.1 Create a new data.table column\n\n# equivalent of mutate\n# just define with a := sign\n\ndt[, TotScore := Test1+0.4*Test2+0.6*Exam ]\ndt\n\n        ID Gender Test1 Test2  Exam TotScore\n    &lt;char&gt; &lt;char&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;num&gt;\n 1:  SD101      M    11    48    61     66.8\n 2:  SD102      F     8    43    77     71.4\n 3:  SD103      F    13    15    49     48.4\n 4:  SD104      F    15    20    57     57.2\n 5:  SD105      M    10    40    82     75.2\n 6:  SD106      F    11    23    65     59.2\n 7:  SD107      M     6    24    46     43.2\n 8:  SD108      M    12    47    80     78.8\n 9:  SD109      M    10    21    48     47.2\n10:  SD110      M     7    27    62     55.0\n\n\n\n\n3.2 Select multiple rows and columns\n\ndt[1:4,c('Test1','Test2'), with=FALSE]\n\n   Test1 Test2\n   &lt;int&gt; &lt;int&gt;\n1:    11    48\n2:     8    43\n3:    13    15\n4:    15    20\n\n\n\n\n3.3 Read a data.table column to a vector\n\nscore &lt;- dt[,TotScore]\nscore\n\n [1] 66.8 71.4 48.4 57.2 75.2 59.2 43.2 78.8 47.2 55.0\n\n\n\n\n3.4 Using cut to data segment and assign letter grade\n\nbreaks&lt;- c(0,40,44,49,54,59,64,69,74,79,84,100)\nlabels&lt;-c(\"F\",\"D\",\"D+\",\"C\",\"C+\",\"B-\",\"B\",\"B+\",\"A-\",\"A\",\"A+\")\nlgrades&lt;-cut(score, breaks, labels, right=TRUE)\ndt[,Grade := lgrades]\ndt\n\n        ID Gender Test1 Test2  Exam TotScore  Grade\n    &lt;char&gt; &lt;char&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;num&gt; &lt;fctr&gt;\n 1:  SD101      M    11    48    61     66.8      B\n 2:  SD102      F     8    43    77     71.4     B+\n 3:  SD103      F    13    15    49     48.4     D+\n 4:  SD104      F    15    20    57     57.2     C+\n 5:  SD105      M    10    40    82     75.2     A-\n 6:  SD106      F    11    23    65     59.2     B-\n 7:  SD107      M     6    24    46     43.2      D\n 8:  SD108      M    12    47    80     78.8     A-\n 9:  SD109      M    10    21    48     47.2     D+\n10:  SD110      M     7    27    62     55.0     C+\n\n\n\n\n3.5 Filtering rows - all B’s (B+,B,B-)\n\nBTerms &lt;- c(\"B+\",\"B\",\"B-\")\ndt[Grade %in% BTerms,]\n\n       ID Gender Test1 Test2  Exam TotScore  Grade\n   &lt;char&gt; &lt;char&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;num&gt; &lt;fctr&gt;\n1:  SD101      M    11    48    61     66.8      B\n2:  SD102      F     8    43    77     71.4     B+\n3:  SD106      F    11    23    65     59.2     B-\n\n\n\n\n3.6 Getting row numbers\n\nr1 &lt;- dt[,.I[Grade=='A-']]\nr1\n\n[1] 5 8\n\n# alternatively\nr2 &lt;- dt[,which(Grade=='A-')]\ndt[r2,]\n\n       ID Gender Test1 Test2  Exam TotScore  Grade\n   &lt;char&gt; &lt;char&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;num&gt; &lt;fctr&gt;\n1:  SD105      M    10    40    82     75.2     A-\n2:  SD108      M    12    47    80     78.8     A-\n\n\n\n\n3.7 Count numbers in each grade (Grouping)\n\nlvlgrades= as_factor(c(\"A+\",\"A\",\"A-\",\"B+\",\"B\",\"B-\",\"C+\",\"C\",\"D+\",\"D\",\"F\"))\ndt[, .N, by=Grade]\n\n    Grade     N\n   &lt;fctr&gt; &lt;int&gt;\n1:      B     1\n2:     B+     1\n3:     D+     2\n4:     C+     2\n5:     A-     2\n6:     B-     1\n7:      D     1\n\n\n\n\n3.8 Mean TotScore by Gender (Grouping)\n\ndt_m &lt;- dt[,.(meanTotScore = round(mean(TotScore),2)),by=Gender]\ndt_m\n\n   Gender meanTotScore\n   &lt;char&gt;        &lt;num&gt;\n1:      M        61.03\n2:      F        59.05\n\n\n\n\n3.9 Means of Columns\n\ndt3 &lt;- dt[,.(mt1&lt;-mean(Test1), \n      mt2&lt;-mean(Test2),\n      mt3&lt;-mean(Exam))]\ndt3\n\n      V1    V2    V3\n   &lt;num&gt; &lt;num&gt; &lt;num&gt;\n1:  10.3  30.8  62.7\n\nsetnames(dt3, c('mt1','mt2','mt3'))\ndt3\n\n     mt1   mt2   mt3\n   &lt;num&gt; &lt;num&gt; &lt;num&gt;\n1:  10.3  30.8  62.7",
    "crumbs": [
      "Tables",
      "dataTable"
    ]
  },
  {
    "objectID": "tables/vcd.html",
    "href": "tables/vcd.html",
    "title": "vcd",
    "section": "",
    "text": "vcd package from Friendly’s working with categorical data 1.\nThe three forms of categorical data are:",
    "crumbs": [
      "Tables",
      "vcd"
    ]
  },
  {
    "objectID": "tables/vcd.html#library",
    "href": "tables/vcd.html#library",
    "title": "vcd",
    "section": "1 Library",
    "text": "1 Library\n\nlibrary(tidyverse)",
    "crumbs": [
      "Tables",
      "vcd"
    ]
  },
  {
    "objectID": "tables/vcd.html#data",
    "href": "tables/vcd.html#data",
    "title": "vcd",
    "section": "2 Data",
    "text": "2 Data\n\n2.1 1. Case-Form\n\nlibrary(vcd)\nnames(Arthritis)\n\n[1] \"ID\"        \"Treatment\" \"Sex\"       \"Age\"       \"Improved\" \n\nstr(Arthritis)\n\n'data.frame':   84 obs. of  5 variables:\n $ ID       : int  57 46 77 17 36 23 75 39 33 55 ...\n $ Treatment: Factor w/ 2 levels \"Placebo\",\"Treated\": 2 2 2 2 2 2 2 2 2 2 ...\n $ Sex      : Factor w/ 2 levels \"Female\",\"Male\": 2 2 2 2 2 2 2 2 2 2 ...\n $ Age      : int  27 29 30 32 46 58 59 59 63 63 ...\n $ Improved : Ord.factor w/ 3 levels \"None\"&lt;\"Some\"&lt;..: 2 1 1 3 3 3 1 3 1 1 ...\n\nhead(Arthritis)\n\n  ID Treatment  Sex Age Improved\n1 57   Treated Male  27     Some\n2 46   Treated Male  29     None\n3 77   Treated Male  30     None\n4 17   Treated Male  32   Marked\n5 36   Treated Male  46   Marked\n6 23   Treated Male  58   Marked"
  },
  {
    "objectID": "tables/vcd.html#data.table-manipulation",
    "href": "tables/vcd.html#data.table-manipulation",
    "title": "vcd",
    "section": "3 data.Table Manipulation",
    "text": "3 data.Table Manipulation\n\n3.1 Create a new data.table column\n\n# equivalent of mutate\n# just define with a := sign\n\ndt[, TotScore := Test1+0.4*Test2+0.6*Exam ]\ndt\n\n        ID Gender Test1 Test2  Exam TotScore\n    &lt;char&gt; &lt;char&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;num&gt;\n 1:  SD101      M    11    48    61     66.8\n 2:  SD102      F     8    43    77     71.4\n 3:  SD103      F    13    15    49     48.4\n 4:  SD104      F    15    20    57     57.2\n 5:  SD105      M    10    40    82     75.2\n 6:  SD106      F    11    23    65     59.2\n 7:  SD107      M     6    24    46     43.2\n 8:  SD108      M    12    47    80     78.8\n 9:  SD109      M    10    21    48     47.2\n10:  SD110      M     7    27    62     55.0\n\n\n\n\n3.2 Select multiple rows and columns\n\ndt[1:4,c('Test1','Test2'), with=FALSE]\n\n   Test1 Test2\n   &lt;int&gt; &lt;int&gt;\n1:    11    48\n2:     8    43\n3:    13    15\n4:    15    20\n\n\n\n\n3.3 Read a data.table column to a vector\n\nscore &lt;- dt[,TotScore]\nscore\n\n [1] 66.8 71.4 48.4 57.2 75.2 59.2 43.2 78.8 47.2 55.0\n\n\n\n\n3.4 Using cut to data segment and assign letter grade\n\nbreaks&lt;- c(0,40,44,49,54,59,64,69,74,79,84,100)\nlabels&lt;-c(\"F\",\"D\",\"D+\",\"C\",\"C+\",\"B-\",\"B\",\"B+\",\"A-\",\"A\",\"A+\")\nlgrades&lt;-cut(score, breaks, labels, right=TRUE)\ndt[,Grade := lgrades]\ndt\n\n        ID Gender Test1 Test2  Exam TotScore  Grade\n    &lt;char&gt; &lt;char&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;num&gt; &lt;fctr&gt;\n 1:  SD101      M    11    48    61     66.8      B\n 2:  SD102      F     8    43    77     71.4     B+\n 3:  SD103      F    13    15    49     48.4     D+\n 4:  SD104      F    15    20    57     57.2     C+\n 5:  SD105      M    10    40    82     75.2     A-\n 6:  SD106      F    11    23    65     59.2     B-\n 7:  SD107      M     6    24    46     43.2      D\n 8:  SD108      M    12    47    80     78.8     A-\n 9:  SD109      M    10    21    48     47.2     D+\n10:  SD110      M     7    27    62     55.0     C+\n\n\n\n\n3.5 Filtering rows - all B’s (B+,B,B-)\n\nBTerms &lt;- c(\"B+\",\"B\",\"B-\")\ndt[Grade %in% BTerms,]\n\n       ID Gender Test1 Test2  Exam TotScore  Grade\n   &lt;char&gt; &lt;char&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;num&gt; &lt;fctr&gt;\n1:  SD101      M    11    48    61     66.8      B\n2:  SD102      F     8    43    77     71.4     B+\n3:  SD106      F    11    23    65     59.2     B-\n\n\n\n\n3.6 Getting row numbers\n\nr1 &lt;- dt[,.I[Grade=='A-']]\nr1\n\n[1] 5 8\n\n# alternatively\nr2 &lt;- dt[,which(Grade=='A-')]\ndt[r2,]\n\n       ID Gender Test1 Test2  Exam TotScore  Grade\n   &lt;char&gt; &lt;char&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;num&gt; &lt;fctr&gt;\n1:  SD105      M    10    40    82     75.2     A-\n2:  SD108      M    12    47    80     78.8     A-\n\n\n\n\n3.7 Count numbers in each grade (Grouping)\n\nlvlgrades= as_factor(c(\"A+\",\"A\",\"A-\",\"B+\",\"B\",\"B-\",\"C+\",\"C\",\"D+\",\"D\",\"F\"))\ndt[, .N, by=Grade]\n\n    Grade     N\n   &lt;fctr&gt; &lt;int&gt;\n1:      B     1\n2:     B+     1\n3:     D+     2\n4:     C+     2\n5:     A-     2\n6:     B-     1\n7:      D     1\n\n\n\n\n3.8 Mean TotScore by Gender (Grouping)\n\ndt_m &lt;- dt[,.(meanTotScore = round(mean(TotScore),2)),by=Gender]\ndt_m\n\n   Gender meanTotScore\n   &lt;char&gt;        &lt;num&gt;\n1:      M        61.03\n2:      F        59.05\n\n\n\n\n3.9 Means of Columns\n\ndt3 &lt;- dt[,.(mt1&lt;-mean(Test1), \n      mt2&lt;-mean(Test2),\n      mt3&lt;-mean(Exam))]\ndt3\n\n      V1    V2    V3\n   &lt;num&gt; &lt;num&gt; &lt;num&gt;\n1:  10.3  30.8  62.7\n\nsetnames(dt3, c('mt1','mt2','mt3'))\ndt3\n\n     mt1   mt2   mt3\n   &lt;num&gt; &lt;num&gt; &lt;num&gt;\n1:  10.3  30.8  62.7"
  },
  {
    "objectID": "tables/vcd.html#footnotes",
    "href": "tables/vcd.html#footnotes",
    "title": "vcd",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nFriendly, M. (2013). Working with categorical data with R and the vcd and vcdExtra packages. Toronto: York University.↩︎",
    "crumbs": [
      "Tables",
      "vcd"
    ]
  },
  {
    "objectID": "tables/vcd.html#categorical-data-forms",
    "href": "tables/vcd.html#categorical-data-forms",
    "title": "vcd",
    "section": "2 Categorical Data Forms",
    "text": "2 Categorical Data Forms\n\n2.1 Case-Form\n\npresented as a dataframe with factors (categorical) and numerical values.\n\n\nlibrary(vcd)\nnames(Arthritis)\n\n[1] \"ID\"        \"Treatment\" \"Sex\"       \"Age\"       \"Improved\" \n\nstr(Arthritis)\n\n'data.frame':   84 obs. of  5 variables:\n $ ID       : int  57 46 77 17 36 23 75 39 33 55 ...\n $ Treatment: Factor w/ 2 levels \"Placebo\",\"Treated\": 2 2 2 2 2 2 2 2 2 2 ...\n $ Sex      : Factor w/ 2 levels \"Female\",\"Male\": 2 2 2 2 2 2 2 2 2 2 ...\n $ Age      : int  27 29 30 32 46 58 59 59 63 63 ...\n $ Improved : Ord.factor w/ 3 levels \"None\"&lt;\"Some\"&lt;..: 2 1 1 3 3 3 1 3 1 1 ...\n\nhead(Arthritis)\n\n  ID Treatment  Sex Age Improved\n1 57   Treated Male  27     Some\n2 46   Treated Male  29     None\n3 77   Treated Male  30     None\n4 17   Treated Male  32   Marked\n5 36   Treated Male  46   Marked\n6 23   Treated Male  58   Marked\n\n\n\n\n2.2 Frequency-form\n\nhere we use the expand.grid function to enter data\nusually has a count or frequency column\n\n\n# Agresti table 3.11 p.106\n# a 2x3 dataframe\n\nGSS &lt;- data.frame(\n  expand.grid(sex=c(\"female\",\"male\"),\n              party=c(\"dem\",\"indep\",\"rep\")),\n  count = c(279,165,73,47,225,191)\n)\nGSS\n\n     sex party count\n1 female   dem   279\n2   male   dem   165\n3 female indep    73\n4   male indep    47\n5 female   rep   225\n6   male   rep   191\n\nnames(GSS)\n\n[1] \"sex\"   \"party\" \"count\"\n\nstr(GSS)\n\n'data.frame':   6 obs. of  3 variables:\n $ sex  : Factor w/ 2 levels \"female\",\"male\": 1 2 1 2 1 2\n $ party: Factor w/ 3 levels \"dem\",\"indep\",..: 1 1 2 2 3 3\n $ count: num  279 165 73 47 225 191\n\nsum(GSS$count)\n\n[1] 980\n\n\n\n\n2.3 Table Form\n\n# Example 1 - HairEyeColor\n# 3-way (or 3 factors) table\n# HairEyeColor is already in table form\n\nstr(HairEyeColor)\n\n 'table' num [1:4, 1:4, 1:2] 32 53 10 3 11 50 10 30 10 25 ...\n - attr(*, \"dimnames\")=List of 3\n  ..$ Hair: chr [1:4] \"Black\" \"Brown\" \"Red\" \"Blond\"\n  ..$ Eye : chr [1:4] \"Brown\" \"Blue\" \"Hazel\" \"Green\"\n  ..$ Sex : chr [1:2] \"Male\" \"Female\"\n\nhead(HairEyeColor)\n\n, , Sex = Male\n\n       Eye\nHair    Brown Blue Hazel Green\n  Black    32   11    10     3\n  Brown    53   50    25    15\n  Red      10   10     7     7\n  Blond     3   30     5     8\n\n, , Sex = Female\n\n       Eye\nHair    Brown Blue Hazel Green\n  Black    36    9     5     2\n  Brown    66   34    29    14\n  Red      16    7     7     7\n  Blond     4   64     5     8\n\n# another representation\nftable(HairEyeColor)\n\n            Sex Male Female\nHair  Eye                  \nBlack Brown       32     36\n      Blue        11      9\n      Hazel       10      5\n      Green        3      2\nBrown Brown       53     66\n      Blue        50     34\n      Hazel       25     29\n      Green       15     14\nRed   Brown       10     16\n      Blue        10      7\n      Hazel        7      7\n      Green        7      7\nBlond Brown        3      4\n      Blue        30     64\n      Hazel        5      5\n      Green        8      8\n\nsum(HairEyeColor)\n\n[1] 592\n\nsapply(dimnames(HairEyeColor),length)\n\nHair  Eye  Sex \n   4    4    2 \n\n\n\n2.3.1 Structable table\n\n# structable representation\n# 3-way table\n\nstbl &lt;- structable(HairEyeColor)\nstr(stbl)\n\n num [1:8, 1:4] 32 36 53 66 10 16 3 4 11 9 ...\n - attr(*, \"dnames\")=List of 3\n  ..$ Hair: chr [1:4] \"Black\" \"Brown\" \"Red\" \"Blond\"\n  ..$ Eye : chr [1:4] \"Brown\" \"Blue\" \"Hazel\" \"Green\"\n  ..$ Sex : chr [1:2] \"Male\" \"Female\"\n - attr(*, \"split_vertical\")= logi [1:3] FALSE TRUE FALSE\n - attr(*, \"col.vars\")=List of 1\n  ..$ Eye: chr [1:4] \"Brown\" \"Blue\" \"Hazel\" \"Green\"\n - attr(*, \"row.vars\")=List of 2\n  ..$ Hair: chr [1:4] \"Black\" \"Brown\" \"Red\" \"Blond\"\n  ..$ Sex : chr [1:2] \"Male\" \"Female\"\n\nstbl\n\n             Eye Brown Blue Hazel Green\nHair  Sex                              \nBlack Male          32   11    10     3\n      Female        36    9     5     2\nBrown Male          53   50    25    15\n      Female        66   34    29    14\nRed   Male          10   10     7     7\n      Female        16    7     7     7\nBlond Male           3   30     5     8\n      Female         4   64     5     8\n\nHS &lt;- structable(Sex~Hair, HairEyeColor)\nHS\n\n      Sex Male Female\nHair                 \nBlack       56     52\nBrown      143    143\nRed         34     37\nBlond       46     81\n\nmosaic(HS)\n\n\n\n\n\n\n\nHSE &lt;- structable(Hair+Sex ~ Eye, HairEyeColor)\nHSE\n\n      Hair Black        Brown         Red        Blond       \n      Sex   Male Female  Male Female Male Female  Male Female\nEye                                                          \nBrown         32     36    53     66   10     16     3      4\nBlue          11      9    50     34   10      7    30     64\nHazel         10      5    25     29    7      7     5      5\nGreen          3      2    15     14    7      7     8      8\n\n\n\n\n2.3.2 Matrix table\n\n# Example 2 - JobSat\n# 2-way (or 2 factors) table\n\nJobSat &lt;- matrix(c(1,2,1,0, 3,3,6,1, 10,10,14,9, 6,7,12,11), 4, 4)\ndimnames(JobSat) = list(income=c(\"&lt; 15k\", \"15-25k\", \"25-40k\", \"&gt; 40k\"),\nsatisfaction=c(\"VeryD\", \"LittleD\", \"ModerateS\", \"VeryS\"))\nJobSat\n\n        satisfaction\nincome   VeryD LittleD ModerateS VeryS\n  &lt; 15k      1       3        10     6\n  15-25k     2       3        10     7\n  25-40k     1       6        14    12\n  &gt; 40k      0       1         9    11\n\nJobSat &lt;- as.table(JobSat)\nstr(JobSat)\n\n 'table' num [1:4, 1:4] 1 2 1 0 3 3 6 1 10 10 ...\n - attr(*, \"dimnames\")=List of 2\n  ..$ income      : chr [1:4] \"&lt; 15k\" \"15-25k\" \"25-40k\" \"&gt; 40k\"\n  ..$ satisfaction: chr [1:4] \"VeryD\" \"LittleD\" \"ModerateS\" \"VeryS\"\n\nJobSat\n\n        satisfaction\nincome   VeryD LittleD ModerateS VeryS\n  &lt; 15k      1       3        10     6\n  15-25k     2       3        10     7\n  25-40k     1       6        14    12\n  &gt; 40k      0       1         9    11",
    "crumbs": [
      "DataTables",
      "vcd"
    ]
  },
  {
    "objectID": "tables/vcd.html#case-form",
    "href": "tables/vcd.html#case-form",
    "title": "vcd",
    "section": "2 Case-Form",
    "text": "2 Case-Form\n\ndataframe with factors (categorical) and numerical values.\n\n\n\nCode\n# Data as data.frame\n\ndf &lt;- read.table(header=TRUE, text=\"\nID Treatment    Sex Age Improved\n57   placebo   male  27     Some\n46   treated female  29     None\n77   treated female  30   Marked\n17   treated female  32     None\n36   placebo   male  46     Some\n23   treated   male  38   Marked \")\ndf$Sex&lt;-as.factor(df$Sex)\ndf$Treatment&lt;-as.factor(df$Treatment)\ndf$Improved&lt;-factor(df$Improved, ordered=TRUE, levels=c(\"None\",\"Some\",\"Marked\"))\ndf\n\n\n  ID Treatment    Sex Age Improved\n1 57   placebo   male  27     Some\n2 46   treated female  29     None\n3 77   treated female  30   Marked\n4 17   treated female  32     None\n5 36   placebo   male  46     Some\n6 23   treated   male  38   Marked",
    "crumbs": [
      "Tables",
      "vcd"
    ]
  },
  {
    "objectID": "tables/vcd.html#frequency-form",
    "href": "tables/vcd.html#frequency-form",
    "title": "vcd",
    "section": "3 Frequency-form",
    "text": "3 Frequency-form\n\ndataframe that has a count or frequency column\n\n\n\nCode\n# Agresti table 3.11 p.106\n\nGSS &lt;- data.frame(\n  expand.grid(sex=c(\"female\",\"male\"),\n              party=c(\"dem\",\"indep\",\"rep\")),\n  count = c(279,165,73,47,225,191)\n)\nGSS\n\n\n     sex party count\n1 female   dem   279\n2   male   dem   165\n3 female indep    73\n4   male indep    47\n5 female   rep   225\n6   male   rep   191\n\n\n\nCross Tabulation (xtabs)\n\n\n\nCode\n# usually we would want to have the cross tabulation\n# using xtabs\nxt &lt;- xtabs(count ~sex+party, data=GSS)\nxt\n\n\n        party\nsex      dem indep rep\n  female 279    73 225\n  male   165    47 191\n\n\nCode\nstr(xt)\n\n\n 'xtabs' num [1:2, 1:3] 279 165 73 47 225 191\n - attr(*, \"dimnames\")=List of 2\n  ..$ sex  : chr [1:2] \"female\" \"male\"\n  ..$ party: chr [1:3] \"dem\" \"indep\" \"rep\"\n - attr(*, \"call\")= language xtabs(formula = count ~ sex + party, data = GSS)\n\n\n\nxtab with addmargins\n\n\n# or we want to have addmargins\naddmargins(xt)\n\n        party\nsex      dem indep rep Sum\n  female 279    73 225 577\n  male   165    47 191 403\n  Sum    444   120 416 980",
    "crumbs": [
      "Tables",
      "vcd"
    ]
  },
  {
    "objectID": "tables/vcd.html#table-form",
    "href": "tables/vcd.html#table-form",
    "title": "vcd",
    "section": "4 Table Form",
    "text": "4 Table Form\n\n\nCode\n# Agresti-Table2.1 2x2 way table\n# Gender vs Belief\n# use rbind or convert from matrix\n\ntab &lt;- as.table(matrix(c(1230,357,859,413), nrow=2, byrow=TRUE,\n                        dimnames=list(gender=c(\"F\",\"M\"),\n                                      belief=c(\"Yes\",\"No\"))))\ntab\n\n\n      belief\ngender  Yes   No\n     F 1230  357\n     M  859  413\n\n\nCode\nstr(tab)\n\n\n 'table' num [1:2, 1:2] 1230 859 357 413\n - attr(*, \"dimnames\")=List of 2\n  ..$ gender: chr [1:2] \"F\" \"M\"\n  ..$ belief: chr [1:2] \"Yes\" \"No\"\n\n\n\n# table has addmargins\naddmargins(tab)\n\n      belief\ngender  Yes   No  Sum\n   F   1230  357 1587\n   M    859  413 1272\n   Sum 2089  770 2859\n\n\n\n4.1 Structable table\n\nlibrary(vcd)\n# structable representation\n# 3-way table\n\nstbl &lt;- structable(HairEyeColor)\nstr(stbl)\n\n num [1:8, 1:4] 32 36 53 66 10 16 3 4 11 9 ...\n - attr(*, \"dnames\")=List of 3\n  ..$ Hair: chr [1:4] \"Black\" \"Brown\" \"Red\" \"Blond\"\n  ..$ Eye : chr [1:4] \"Brown\" \"Blue\" \"Hazel\" \"Green\"\n  ..$ Sex : chr [1:2] \"Male\" \"Female\"\n - attr(*, \"split_vertical\")= logi [1:3] FALSE TRUE FALSE\n - attr(*, \"col.vars\")=List of 1\n  ..$ Eye: chr [1:4] \"Brown\" \"Blue\" \"Hazel\" \"Green\"\n - attr(*, \"row.vars\")=List of 2\n  ..$ Hair: chr [1:4] \"Black\" \"Brown\" \"Red\" \"Blond\"\n  ..$ Sex : chr [1:2] \"Male\" \"Female\"\n\nstbl\n\n             Eye Brown Blue Hazel Green\nHair  Sex                              \nBlack Male          32   11    10     3\n      Female        36    9     5     2\nBrown Male          53   50    25    15\n      Female        66   34    29    14\nRed   Male          10   10     7     7\n      Female        16    7     7     7\nBlond Male           3   30     5     8\n      Female         4   64     5     8\n\nHS &lt;- structable(Sex~Hair, HairEyeColor)\nHS\n\n      Sex Male Female\nHair                 \nBlack       56     52\nBrown      143    143\nRed         34     37\nBlond       46     81\n\nmosaic(HS)\n\n\n\n\n\n\n\nHSE &lt;- structable(Hair+Sex ~ Eye, HairEyeColor)\nHSE\n\n      Hair Black        Brown         Red        Blond       \n      Sex   Male Female  Male Female Male Female  Male Female\nEye                                                          \nBrown         32     36    53     66   10     16     3      4\nBlue          11      9    50     34   10      7    30     64\nHazel         10      5    25     29    7      7     5      5\nGreen          3      2    15     14    7      7     8      8\n\n\n\n\n4.2 Matrix table\n\n# Example 2 - JobSat\n# 2-way (or 2 factors) table\n\nJobSat &lt;- matrix(c(1,2,1,0, 3,3,6,1, 10,10,14,9, 6,7,12,11), 4, 4)\ndimnames(JobSat) = list(income=c(\"&lt; 15k\", \"15-25k\", \"25-40k\", \"&gt; 40k\"),\nsatisfaction=c(\"VeryD\", \"LittleD\", \"ModerateS\", \"VeryS\"))\nJobSat\n\n        satisfaction\nincome   VeryD LittleD ModerateS VeryS\n  &lt; 15k      1       3        10     6\n  15-25k     2       3        10     7\n  25-40k     1       6        14    12\n  &gt; 40k      0       1         9    11\n\nJobSat &lt;- as.table(JobSat)\nstr(JobSat)\n\n 'table' num [1:4, 1:4] 1 2 1 0 3 3 6 1 10 10 ...\n - attr(*, \"dimnames\")=List of 2\n  ..$ income      : chr [1:4] \"&lt; 15k\" \"15-25k\" \"25-40k\" \"&gt; 40k\"\n  ..$ satisfaction: chr [1:4] \"VeryD\" \"LittleD\" \"ModerateS\" \"VeryS\"\n\nJobSat\n\n        satisfaction\nincome   VeryD LittleD ModerateS VeryS\n  &lt; 15k      1       3        10     6\n  15-25k     2       3        10     7\n  25-40k     1       6        14    12\n  &gt; 40k      0       1         9    11",
    "crumbs": [
      "Tables",
      "vcd"
    ]
  },
  {
    "objectID": "datatables/createTable.html",
    "href": "datatables/createTable.html",
    "title": "createTable",
    "section": "",
    "text": "library(tidyverse)\nlibrary(data.table)\nlibrary(MASS)"
  },
  {
    "objectID": "datatables/createTable.html#library",
    "href": "datatables/createTable.html#library",
    "title": "createTable",
    "section": "",
    "text": "library(tidyverse)\nlibrary(data.table)\nlibrary(MASS)"
  },
  {
    "objectID": "datatables/createTable.html#data",
    "href": "datatables/createTable.html#data",
    "title": "createTable",
    "section": "2 Data",
    "text": "2 Data\nDevore Example 12.10\n3x3 table\n\nProd Blemish Crack Location Missing Others\nP1    34      65      17      21      13\nP2    33      52      25      19      6\nP3    32      28      16      14      10\n\n# vectors\nBlemish &lt;- c(34,33,32)\nCrack &lt;- c(65,52,28)\nLocation &lt;- c(17,25,16)\nMissing &lt;- c(21,19,14)\nOthers &lt;- c(13,6,10)\ndtable = data.table(Blemish, Crack, Location, Missing, Others)\ndf &lt;- data.frame(dtable)\ndtable\n\n   Blemish Crack Location Missing Others\n     &lt;num&gt; &lt;num&gt;    &lt;num&gt;   &lt;num&gt;  &lt;num&gt;\n1:      34    65       17      21     13\n2:      33    52       25      19      6\n3:      32    28       16      14     10\n\nstr(dtable)\n\nClasses 'data.table' and 'data.frame':  3 obs. of  5 variables:\n $ Blemish : num  34 33 32\n $ Crack   : num  65 52 28\n $ Location: num  17 25 16\n $ Missing : num  21 19 14\n $ Others  : num  13 6 10\n - attr(*, \".internal.selfref\")=&lt;externalptr&gt; \n\nstr(df)\n\n'data.frame':   3 obs. of  5 variables:\n $ Blemish : num  34 33 32\n $ Crack   : num  65 52 28\n $ Location: num  17 25 16\n $ Missing : num  21 19 14\n $ Others  : num  13 6 10"
  },
  {
    "objectID": "datatables/aggregation.html",
    "href": "datatables/aggregation.html",
    "title": "xtabs",
    "section": "",
    "text": "library(tidyverse)\n\n\n\n\ndf1 &lt;- data.frame(Reference = c(\"KRXH\", \"KRPT\", \"FHRA\", \"CZKK\", \"CQTN\", \"PZXW\", \"SZRZ\", \"RMZE\", \"STNX\", \"TMDW\"), Status = c(\"Accepted\", \"Accepted\", \"Rejected\", \"Accepted\", \"Rejected\", \"Accepted\", \"Rejected\", \"Rejected\", \"Accepted\", \"Accepted\"), Gender = c(\"Female\", \"Male\", \"Male\", \"Female\", \"Female\", \"Female\", \"Male\", \"Female\", \"Female\", \"Female\"), Test = c(\"Test1\", \"Test1\", \"Test2\", \"Test3\", \"Test1\", \"Test4\", \"Test4\", \"Test2\", \"Test3\", \"Test1\"), NewOrFollowUp = c(\"New\", \"New\", \"New\", \"New\", \"New\", \"Follow-up\", \"New\", \"New\", \"New\", \"New\"))\ndf1\n\n   Reference   Status Gender  Test NewOrFollowUp\n1       KRXH Accepted Female Test1           New\n2       KRPT Accepted   Male Test1           New\n3       FHRA Rejected   Male Test2           New\n4       CZKK Accepted Female Test3           New\n5       CQTN Rejected Female Test1           New\n6       PZXW Accepted Female Test4     Follow-up\n7       SZRZ Rejected   Male Test4           New\n8       RMZE Rejected Female Test2           New\n9       STNX Accepted Female Test3           New\n10      TMDW Accepted Female Test1           New"
  },
  {
    "objectID": "datatables/aggregation.html#libraries",
    "href": "datatables/aggregation.html#libraries",
    "title": "xtabs",
    "section": "",
    "text": "library(tidyverse)\n\n\n\n\ndf1 &lt;- data.frame(Reference = c(\"KRXH\", \"KRPT\", \"FHRA\", \"CZKK\", \"CQTN\", \"PZXW\", \"SZRZ\", \"RMZE\", \"STNX\", \"TMDW\"), Status = c(\"Accepted\", \"Accepted\", \"Rejected\", \"Accepted\", \"Rejected\", \"Accepted\", \"Rejected\", \"Rejected\", \"Accepted\", \"Accepted\"), Gender = c(\"Female\", \"Male\", \"Male\", \"Female\", \"Female\", \"Female\", \"Male\", \"Female\", \"Female\", \"Female\"), Test = c(\"Test1\", \"Test1\", \"Test2\", \"Test3\", \"Test1\", \"Test4\", \"Test4\", \"Test2\", \"Test3\", \"Test1\"), NewOrFollowUp = c(\"New\", \"New\", \"New\", \"New\", \"New\", \"Follow-up\", \"New\", \"New\", \"New\", \"New\"))\ndf1\n\n   Reference   Status Gender  Test NewOrFollowUp\n1       KRXH Accepted Female Test1           New\n2       KRPT Accepted   Male Test1           New\n3       FHRA Rejected   Male Test2           New\n4       CZKK Accepted Female Test3           New\n5       CQTN Rejected Female Test1           New\n6       PZXW Accepted Female Test4     Follow-up\n7       SZRZ Rejected   Male Test4           New\n8       RMZE Rejected Female Test2           New\n9       STNX Accepted Female Test3           New\n10      TMDW Accepted Female Test1           New"
  },
  {
    "objectID": "datatables/aggregation.html#xtabs---uses-formula-style",
    "href": "datatables/aggregation.html#xtabs---uses-formula-style",
    "title": "xtabs",
    "section": "2 xtabs - uses formula style",
    "text": "2 xtabs - uses formula style\n\n2.1 count the levels in the variable Status\n\n# find the count of levels in the variable, “Status\nxtabs(~ Status, data=df1)\n\nStatus\nAccepted Rejected \n       6        4 \n\n\n\n\n2.2 create a table of Reference vs `Status`\n\nxtabs(~ Reference + Status, data=df1)\n\n         Status\nReference Accepted Rejected\n     CQTN        0        1\n     CZKK        1        0\n     FHRA        0        1\n     KRPT        1        0\n     KRXH        1        0\n     PZXW        1        0\n     RMZE        0        1\n     STNX        1        0\n     SZRZ        0        1\n     TMDW        1        0\n\n\n\n\n2.3 create a 3-dim table of Status, Gender and Test\n\nxt &lt;- xtabs(~ Status+Gender+Test, data=df1)\nxt\n\n, , Test = Test1\n\n          Gender\nStatus     Female Male\n  Accepted      2    1\n  Rejected      1    0\n\n, , Test = Test2\n\n          Gender\nStatus     Female Male\n  Accepted      0    0\n  Rejected      1    1\n\n, , Test = Test3\n\n          Gender\nStatus     Female Male\n  Accepted      2    0\n  Rejected      0    0\n\n, , Test = Test4\n\n          Gender\nStatus     Female Male\n  Accepted      1    0\n  Rejected      0    1\n\n\n\n\n2.4 using ftable (flattening)\n\nftable(xt)\n\n                Test Test1 Test2 Test3 Test4\nStatus   Gender                             \nAccepted Female          2     0     2     1\n         Male            1     0     0     0\nRejected Female          1     1     0     0\n         Male            0     1     0     1\n\n\n\n\n2.5 two-variables table\n\nxtabs(~Status+Gender, data=df1)\n\n          Gender\nStatus     Female Male\n  Accepted      5    1\n  Rejected      2    2\n\n\n\n\n2.6 plot cross-tabulations\n\nplot(xtabs(~Status+Gender, data=df1))"
  },
  {
    "objectID": "datatables/frequency.html",
    "href": "datatables/frequency.html",
    "title": "frequency",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\ntb &lt;- read_csv(\"id, gender, lgrades\n  SD101, M, C+\n  SD102, F, F\n  SD103, F, B\n  SD104, F, A+\n  SD105, M, B\n  SD106, F, B-\n  SD107, M, A\n  SD108, M, C\n  SD109, M, B-\n  SD110, M, B-\n\")\nlvlgender= c(\"M\",\"F\")\nlvlgrades= c(\"A+\",\"A\",\"A-\",\"B+\",\"B\",\"B-\",\"C+\",\"C\",\"D+\",\"D\",\"F\")\ntb$gender&lt;-factor(tb$gender, lvlgender)\ntb$lgrades &lt;- factor(tb$lgrades,lvlgrades)\n\n\n\ntb\n\n# A tibble: 10 × 3\n   id    gender lgrades\n   &lt;chr&gt; &lt;fct&gt;  &lt;fct&gt;  \n 1 SD101 M      C+     \n 2 SD102 F      F      \n 3 SD103 F      B      \n 4 SD104 F      A+     \n 5 SD105 M      B      \n 6 SD106 F      B-     \n 7 SD107 M      A      \n 8 SD108 M      C      \n 9 SD109 M      B-     \n10 SD110 M      B-"
  },
  {
    "objectID": "datatables/frequency.html#one-way-contingency-table-grades",
    "href": "datatables/frequency.html#one-way-contingency-table-grades",
    "title": "frequency",
    "section": "1 One-way contingency table (grades)",
    "text": "1 One-way contingency table (grades)\n\n# use table function to count frequency in lgrades\ntblfreq &lt;- table(tb$lgrades) \ntblfreq\n\n\nA+  A A- B+  B B- C+  C D+  D  F \n 1  1  0  0  2  3  1  1  0  0  1 \n\n\n\n# redo table back into a dataframe\ndf &lt;- data.frame(tblfreq)\nnames(df) &lt;- c(\"grades\",\"freq\")\ndf\n\n   grades freq\n1      A+    1\n2       A    1\n3      A-    0\n4      B+    0\n5       B    2\n6      B-    3\n7      C+    1\n8       C    1\n9      D+    0\n10      D    0\n11      F    1"
  },
  {
    "objectID": "datatables/frequency.html#two-way-contingency-table-gender-grades",
    "href": "datatables/frequency.html#two-way-contingency-table-gender-grades",
    "title": "frequency",
    "section": "2 Two-way Contingency table (gender-grades)",
    "text": "2 Two-way Contingency table (gender-grades)\n\ntwoWay &lt;- table(tb$gender,tb$lgrades)\ntwoWay\n\n   \n    A+ A A- B+ B B- C+ C D+ D F\n  M  0 1  0  0 1  2  1 1  0 0 0\n  F  1 0  0  0 1  1  0 0  0 0 1"
  },
  {
    "objectID": "datatables/contingency.html",
    "href": "datatables/contingency.html",
    "title": "2x2 Contingency Table",
    "section": "",
    "text": "library(tidyverse)"
  },
  {
    "objectID": "datatables/contingency.html#libraries",
    "href": "datatables/contingency.html#libraries",
    "title": "2x2 Contingency Table",
    "section": "",
    "text": "library(tidyverse)"
  },
  {
    "objectID": "datatables/contingency.html#using-matrix",
    "href": "datatables/contingency.html#using-matrix",
    "title": "2x2 Contingency Table",
    "section": "2 Using matrix",
    "text": "2 Using matrix\n\n# Matrix: using nrows\nM1 &lt;- matrix(\n c(327,50,31,192),nrow=2,byrow=TRUE)\ncolnames(M1) &lt;- c(\"Disease\",\"NoDisease\")\nrownames(M1) &lt;- c(\"Positive\",\"Negative\")\nM1\n\n         Disease NoDisease\nPositive     327        50\nNegative      31       192\n\nclass(M1)\n\n[1] \"matrix\" \"array\""
  },
  {
    "objectID": "datatables/contingency.html#using-cbind-or-rbind",
    "href": "datatables/contingency.html#using-cbind-or-rbind",
    "title": "2x2 Contingency Table",
    "section": "3 Using cbind (or rbind)",
    "text": "3 Using cbind (or rbind)\n\nM2 &lt;- cbind(c(327,31),c(50,192))\ndimnames(M2) = list(c(\"Positive\",\"Negative\"),c(\"Disease\",\"NoDisease\"))\nM2\n\n         Disease NoDisease\nPositive     327        50\nNegative      31       192\n\nclass(M2)\n\n[1] \"matrix\" \"array\""
  },
  {
    "objectID": "datatables/contingency.html#using-dim",
    "href": "datatables/contingency.html#using-dim",
    "title": "2x2 Contingency Table",
    "section": "4 Using dim",
    "text": "4 Using dim\n\nM3 &lt;- c(327,50,31,192)\ndim(M3) &lt;- c(2,2)\ndimnames(M3) = list(c(\"Positive\",\"Negative\"),c(\"Disease\",\"NoDisease\"))\nM3\n\n         Disease NoDisease\nPositive     327        31\nNegative      50       192\n\nclass(M3)\n\n[1] \"matrix\" \"array\""
  },
  {
    "objectID": "datatables/contingency.html#simple-table-from-a-dataframe",
    "href": "datatables/contingency.html#simple-table-from-a-dataframe",
    "title": "2x2 Contingency Table",
    "section": "5 Simple Table from a dataframe",
    "text": "5 Simple Table from a dataframe\n\ndf &lt;- data.frame(\n  c(327,50),\n  c(50,192)\n)\ncolnames(df) &lt;- c(\"Disease\",\"NoDisease\")\nrownames(df) &lt;- c(\"Positive\",\"Negative\")\ndf\n\n         Disease NoDisease\nPositive     327        50\nNegative      50       192\n\nclass(df)\n\n[1] \"data.frame\"\n\ntab &lt;- as.table(as.matrix(df))\ntab\n\n         Disease NoDisease\nPositive     327        50\nNegative      50       192\n\nclass(tab)\n\n[1] \"table\"\n\naddmargins(tab)\n\n         Disease NoDisease Sum\nPositive     327        50 377\nNegative      50       192 242\nSum          377       242 619"
  },
  {
    "objectID": "datatables/contingency.html#xtabs-require-dataframe-or-tibble",
    "href": "datatables/contingency.html#xtabs-require-dataframe-or-tibble",
    "title": "2x2 Contingency Table",
    "section": "6 xtabs require dataframe or tibble",
    "text": "6 xtabs require dataframe or tibble\n\n# tribble is easier to enter table values by rows\ndf2 &lt;-tribble(\n  ~Predicted, ~Actual, ~Values,\n  \"Positive\", \"Disease\", 327,\n  \"Positive\", \"NoDisease\", 50,\n  \"Negative\", \"Disease\", 50,\n  \"Negative\", \"NoDisease\", 192\n)\ndf2\n\n# A tibble: 4 × 3\n  Predicted Actual    Values\n  &lt;chr&gt;     &lt;chr&gt;      &lt;dbl&gt;\n1 Positive  Disease      327\n2 Positive  NoDisease     50\n3 Negative  Disease       50\n4 Negative  NoDisease    192\n\n# xtabs require a dataframe or tibble, returns table\ntab2 &lt;- xtabs( Values ~ Predicted + Actual, data=df2)\naddmargins(tab2)\n\n          Actual\nPredicted  Disease NoDisease Sum\n  Negative      50       192 242\n  Positive     327        50 377\n  Sum          377       242 619\n\nclass(tab2)\n\n[1] \"xtabs\" \"table\"\n\n# a nicer table (maybe)\nftable(tab2)\n\n          Actual Disease NoDisease\nPredicted                         \nNegative              50       192\nPositive             327        50"
  },
  {
    "objectID": "datatables/gt.html",
    "href": "datatables/gt.html",
    "title": "gt",
    "section": "",
    "text": "library(tidyverse)\nlibrary(gt)"
  },
  {
    "objectID": "datatables/gt.html#another-table",
    "href": "datatables/gt.html#another-table",
    "title": "gt",
    "section": "Another table",
    "text": "Another table\n\ndf &lt;- read_csv(\"Predicted, Actual, Values\n               Positive, Disease, 327\n               Positive, NoDisease, 50\n               Negative, Disease, 50\n               Negative, NoDisease, 192\n               \")\ndf$Predicted &lt;- as.factor(df$Predicted)\ndf$Actual &lt;- as.factor(df$Actual)\ndf\n\n# A tibble: 4 × 3\n  Predicted Actual    Values\n  &lt;fct&gt;     &lt;fct&gt;      &lt;dbl&gt;\n1 Positive  Disease      327\n2 Positive  NoDisease     50\n3 Negative  Disease       50\n4 Negative  NoDisease    192\n\ngt(df)\n\n\n\n\n\n\n\nPredicted\nActual\nValues\n\n\n\n\nPositive\nDisease\n327\n\n\nPositive\nNoDisease\n50\n\n\nNegative\nDisease\n50\n\n\nNegative\nNoDisease\n192\n\n\n\n\n\n\n\n\nggplot(df, aes(x=Actual, y=Values, fill=Predicted))+\n  geom_col(position=\"dodge\",color=\"gray\")+\n  scale_fill_manual(values=c(\"pink\", \"lightblue\"))"
  },
  {
    "objectID": "datatables/dataTableEx.html",
    "href": "datatables/dataTableEx.html",
    "title": "dataTableExercises",
    "section": "",
    "text": "URL: https://www.machinelearningplus.com/data-manipulation/101-r-data-table-exercises/\n\n1. Install data.table\n\nlibrary(data.table)\n\n\n\n2. Create a data.table from lists\n\nlist_1 &lt;- c(\"a\",\"b\",\"c\",\"d\")\nlist_2 &lt;- c(\"1\",\"2\",\"3\",\"4\")\nlist_3 &lt;- c(\"aa\",\"bb\",\"cc\",\"dd\")\ndt2 &lt;- data.table(v1=list_1,v2=list_2,v3=list_3)\nclass(dt2)\n\n[1] \"data.table\" \"data.frame\"\n\ndt2\n\n       v1     v2     v3\n   &lt;char&gt; &lt;char&gt; &lt;char&gt;\n1:      a      1     aa\n2:      b      2     bb\n3:      c      3     cc\n4:      d      4     dd\n\n\n\n\n3. import BostonHousing dataset as a data.table\nhttps://raw.githubusercontent.com/selva86/datasets/master/BostonHousing.csv\n\nmycsv&lt;-\"https://raw.githubusercontent.com/selva86/datasets/master/BostonHousing.csv\"\ndt3&lt;-fread(file=mycsv)\ndt3\n\n        crim    zn indus  chas   nox    rm   age    dis   rad   tax ptratio\n       &lt;num&gt; &lt;num&gt; &lt;num&gt; &lt;int&gt; &lt;num&gt; &lt;num&gt; &lt;num&gt;  &lt;num&gt; &lt;int&gt; &lt;int&gt;   &lt;num&gt;\n  1: 0.00632    18  2.31     0 0.538 6.575  65.2 4.0900     1   296    15.3\n  2: 0.02731     0  7.07     0 0.469 6.421  78.9 4.9671     2   242    17.8\n  3: 0.02729     0  7.07     0 0.469 7.185  61.1 4.9671     2   242    17.8\n  4: 0.03237     0  2.18     0 0.458 6.998  45.8 6.0622     3   222    18.7\n  5: 0.06905     0  2.18     0 0.458 7.147  54.2 6.0622     3   222    18.7\n ---                                                                       \n502: 0.06263     0 11.93     0 0.573 6.593  69.1 2.4786     1   273    21.0\n503: 0.04527     0 11.93     0 0.573 6.120  76.7 2.2875     1   273    21.0\n504: 0.06076     0 11.93     0 0.573 6.976  91.0 2.1675     1   273    21.0\n505: 0.10959     0 11.93     0 0.573 6.794  89.3 2.3889     1   273    21.0\n506: 0.04741     0 11.93     0 0.573 6.030  80.8 2.5050     1   273    21.0\n          b lstat  medv\n      &lt;num&gt; &lt;num&gt; &lt;num&gt;\n  1: 396.90  4.98  24.0\n  2: 396.90  9.14  21.6\n  3: 392.83  4.03  34.7\n  4: 394.63  2.94  33.4\n  5: 396.90  5.33  36.2\n ---                   \n502: 391.99  9.67  22.4\n503: 396.90  9.08  20.6\n504: 396.90  5.64  23.9\n505: 393.45  6.48  22.0\n506: 396.90  7.88  11.9\n\n\n\n\n4. import only ‘n=50’ rows of BostonHousing\n\nfread(file=mycsv, nrows=50) |&gt; head()\n\n      crim    zn indus  chas   nox    rm   age    dis   rad   tax ptratio\n     &lt;num&gt; &lt;num&gt; &lt;num&gt; &lt;int&gt; &lt;num&gt; &lt;num&gt; &lt;num&gt;  &lt;num&gt; &lt;int&gt; &lt;int&gt;   &lt;num&gt;\n1: 0.00632    18  2.31     0 0.538 6.575  65.2 4.0900     1   296    15.3\n2: 0.02731     0  7.07     0 0.469 6.421  78.9 4.9671     2   242    17.8\n3: 0.02729     0  7.07     0 0.469 7.185  61.1 4.9671     2   242    17.8\n4: 0.03237     0  2.18     0 0.458 6.998  45.8 6.0622     3   222    18.7\n5: 0.06905     0  2.18     0 0.458 7.147  54.2 6.0622     3   222    18.7\n6: 0.02985     0  2.18     0 0.458 6.430  58.7 6.0622     3   222    18.7\n        b lstat  medv\n    &lt;num&gt; &lt;num&gt; &lt;num&gt;\n1: 396.90  4.98  24.0\n2: 396.90  9.14  21.6\n3: 392.83  4.03  34.7\n4: 394.63  2.94  33.4\n5: 396.90  5.33  36.2\n6: 394.12  5.21  28.7\n\n\n\n\n5. Import only crim and medv columns\n\nfread(file=mycsv, select=c('crim','medv')) |&gt; head()\n\n      crim  medv\n     &lt;num&gt; &lt;num&gt;\n1: 0.00632  24.0\n2: 0.02731  21.6\n3: 0.02729  34.7\n4: 0.03237  33.4\n5: 0.06905  36.2\n6: 0.02985  28.7\n\n\n\n\n6. get nrows, ncolumns, datatype and summary stats of each column of Cars93\n\nDT &lt;- fread('https://raw.githubusercontent.com/selva86/datasets/master/BostonHousing.csv')\nnrow(DT)\n\n[1] 506\n\nncol(DT)\n\n[1] 14\n\nsapply(DT, class)\n\n     crim        zn     indus      chas       nox        rm       age       dis \n\"numeric\" \"numeric\" \"numeric\" \"integer\" \"numeric\" \"numeric\" \"numeric\" \"numeric\" \n      rad       tax   ptratio         b     lstat      medv \n\"integer\" \"integer\" \"numeric\" \"numeric\" \"numeric\" \"numeric\" \n\nsummary(DT)\n\n      crim                zn             indus            chas        \n Min.   : 0.00632   Min.   :  0.00   Min.   : 0.46   Min.   :0.00000  \n 1st Qu.: 0.08205   1st Qu.:  0.00   1st Qu.: 5.19   1st Qu.:0.00000  \n Median : 0.25651   Median :  0.00   Median : 9.69   Median :0.00000  \n Mean   : 3.61352   Mean   : 11.36   Mean   :11.14   Mean   :0.06917  \n 3rd Qu.: 3.67708   3rd Qu.: 12.50   3rd Qu.:18.10   3rd Qu.:0.00000  \n Max.   :88.97620   Max.   :100.00   Max.   :27.74   Max.   :1.00000  \n      nox               rm             age              dis        \n Min.   :0.3850   Min.   :3.561   Min.   :  2.90   Min.   : 1.130  \n 1st Qu.:0.4490   1st Qu.:5.886   1st Qu.: 45.02   1st Qu.: 2.100  \n Median :0.5380   Median :6.208   Median : 77.50   Median : 3.207  \n Mean   :0.5547   Mean   :6.285   Mean   : 68.57   Mean   : 3.795  \n 3rd Qu.:0.6240   3rd Qu.:6.623   3rd Qu.: 94.08   3rd Qu.: 5.188  \n Max.   :0.8710   Max.   :8.780   Max.   :100.00   Max.   :12.127  \n      rad              tax           ptratio            b         \n Min.   : 1.000   Min.   :187.0   Min.   :12.60   Min.   :  0.32  \n 1st Qu.: 4.000   1st Qu.:279.0   1st Qu.:17.40   1st Qu.:375.38  \n Median : 5.000   Median :330.0   Median :19.05   Median :391.44  \n Mean   : 9.549   Mean   :408.2   Mean   :18.46   Mean   :356.67  \n 3rd Qu.:24.000   3rd Qu.:666.0   3rd Qu.:20.20   3rd Qu.:396.23  \n Max.   :24.000   Max.   :711.0   Max.   :22.00   Max.   :396.90  \n     lstat            medv      \n Min.   : 1.73   Min.   : 5.00  \n 1st Qu.: 6.95   1st Qu.:17.02  \n Median :11.36   Median :21.20  \n Mean   :12.65   Mean   :22.53  \n 3rd Qu.:16.95   3rd Qu.:25.00  \n Max.   :37.97   Max.   :50.00"
  },
  {
    "objectID": "datatables/dataTableTut.html",
    "href": "datatables/dataTableTut.html",
    "title": "dataTable",
    "section": "",
    "text": "{library(tidyverse)}"
  },
  {
    "objectID": "datatables/dataTableTut.html#data",
    "href": "datatables/dataTableTut.html#data",
    "title": "dataTable",
    "section": "1 Data",
    "text": "1 Data\n      ID Test1 Test2 Exam \n1  SD101    11    48   61    \n2  SD102     8    43   77    \n3  SD103    13    15   49    \n4  SD104    15    20   57    \n5  SD105    10    40   82     \n6  SD106    11    23   65     \n7  SD107     6    24   46    \n8  SD108    12    47   80     \n9  SD109    10    21   48     \n10 SD110     7    27   62     \n\n1.1 Create a data.table using fread\n\nlibrary(data.table)\ndt0 &lt;- fread(text = \"\nrow ID Test1 Test2 Exam \n1  SD101    11    48   61     \n2  SD102     8    43   77    \n3  SD103    13    15   49    \n4  SD104    15    20   57    \n5  SD105    10    40   82    \n6  SD106    11    23   65    \n7  SD107     6    24   46    \n8  SD108    12    47   80    \n9  SD109    10    21   48   \n10 SD110     7    27   62   \")\nclass(dt0)\n\n[1] \"data.table\" \"data.frame\"\n\n# remove the row column\ndt &lt;- dt0[,!\"row\", with=FALSE]\ndt\n\n        ID Test1 Test2  Exam\n    &lt;char&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;\n 1:  SD101    11    48    61\n 2:  SD102     8    43    77\n 3:  SD103    13    15    49\n 4:  SD104    15    20    57\n 5:  SD105    10    40    82\n 6:  SD106    11    23    65\n 7:  SD107     6    24    46\n 8:  SD108    12    47    80\n 9:  SD109    10    21    48\n10:  SD110     7    27    62\n\n\n\n\n1.2 Create a new data.table column\n(equivalent of mutate)\n\n # equivalent of mutate\ndt[, TotScore := Test1+0.4*Test2+0.6*Exam ]\ndt\n\n        ID Test1 Test2  Exam TotScore\n    &lt;char&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;num&gt;\n 1:  SD101    11    48    61     66.8\n 2:  SD102     8    43    77     71.4\n 3:  SD103    13    15    49     48.4\n 4:  SD104    15    20    57     57.2\n 5:  SD105    10    40    82     75.2\n 6:  SD106    11    23    65     59.2\n 7:  SD107     6    24    46     43.2\n 8:  SD108    12    47    80     78.8\n 9:  SD109    10    21    48     47.2\n10:  SD110     7    27    62     55.0\n\n\n\n\n1.3 Read a data.table column\n\nscore &lt;- dt[,TotScore]\nscore\n\n [1] 66.8 71.4 48.4 57.2 75.2 59.2 43.2 78.8 47.2 55.0\n\n\n\n\n1.4 Using cut to data segment and assign letter grade\n\nbreaks&lt;- c(0,40,44,49,54,59,64,69,74,79,84,100)\nlabels&lt;-c(\"F\",\"D\",\"D+\",\"C\",\"C+\",\"B-\",\"B\",\"B+\",\"A-\",\"A\",\"A+\")\nlgrades&lt;-cut(score, breaks, labels, right=TRUE)\ndt[,Grade := lgrades]\ndt\n\n        ID Test1 Test2  Exam TotScore  Grade\n    &lt;char&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;num&gt; &lt;fctr&gt;\n 1:  SD101    11    48    61     66.8      B\n 2:  SD102     8    43    77     71.4     B+\n 3:  SD103    13    15    49     48.4     D+\n 4:  SD104    15    20    57     57.2     C+\n 5:  SD105    10    40    82     75.2     A-\n 6:  SD106    11    23    65     59.2     B-\n 7:  SD107     6    24    46     43.2      D\n 8:  SD108    12    47    80     78.8     A-\n 9:  SD109    10    21    48     47.2     D+\n10:  SD110     7    27    62     55.0     C+\n\n\n\n\n1.5 Filtering rows - all B’s (B+,B,B-)\n\nBTerms &lt;- c(\"B+\",\"B\",\"B-\")\ndt[Grade %in% BTerms,]\n\n       ID Test1 Test2  Exam TotScore  Grade\n   &lt;char&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;num&gt; &lt;fctr&gt;\n1:  SD101    11    48    61     66.8      B\n2:  SD102     8    43    77     71.4     B+\n3:  SD106    11    23    65     59.2     B-"
  },
  {
    "objectID": "datatables/vcd.html",
    "href": "datatables/vcd.html",
    "title": "vcd",
    "section": "",
    "text": "vcd package from Friendly’s working with categorical data 1.\nThe three forms of categorical data are:",
    "crumbs": [
      "DataTables",
      "vcd"
    ]
  },
  {
    "objectID": "datatables/vcd.html#library",
    "href": "datatables/vcd.html#library",
    "title": "vcd",
    "section": "1 Library",
    "text": "1 Library\n\nlibrary(tidyverse)",
    "crumbs": [
      "DataTables",
      "vcd"
    ]
  },
  {
    "objectID": "datatables/vcd.html#case-form",
    "href": "datatables/vcd.html#case-form",
    "title": "vcd",
    "section": "2 Case-Form",
    "text": "2 Case-Form\n\ndataframe with factors (categorical) and numerical values.\n\n\n\nCode\n# Data as data.frame\n\ndf &lt;- read.table(header=TRUE, text=\"\nID Treatment    Sex Age Improved\n57   placebo   male  27     Some\n46   treated female  29     None\n77   treated female  30   Marked\n17   treated female  32     None\n36   placebo   male  46     Some\n23   treated   male  38   Marked \")\ndf$Sex&lt;-as.factor(df$Sex)\ndf$Treatment&lt;-as.factor(df$Treatment)\ndf$Improved&lt;-factor(df$Improved, ordered=TRUE, levels=c(\"None\",\"Some\",\"Marked\"))\ndf\n\n\n  ID Treatment    Sex Age Improved\n1 57   placebo   male  27     Some\n2 46   treated female  29     None\n3 77   treated female  30   Marked\n4 17   treated female  32     None\n5 36   placebo   male  46     Some\n6 23   treated   male  38   Marked",
    "crumbs": [
      "DataTables",
      "vcd"
    ]
  },
  {
    "objectID": "datatables/vcd.html#frequency-form",
    "href": "datatables/vcd.html#frequency-form",
    "title": "vcd",
    "section": "3 Frequency-form",
    "text": "3 Frequency-form\n\ndataframe that has a count or frequency column\n\n\n\nCode\n# Agresti table 3.11 p.106\n\nGSS &lt;- data.frame(\n  expand.grid(sex=c(\"female\",\"male\"),\n              party=c(\"dem\",\"indep\",\"rep\")),\n  count = c(279,165,73,47,225,191)\n)\nGSS\n\n\n     sex party count\n1 female   dem   279\n2   male   dem   165\n3 female indep    73\n4   male indep    47\n5 female   rep   225\n6   male   rep   191\n\n\n\nCross Tabulation (xtabs)\n\n\n\nCode\n# usually we would want to have the cross tabulation\n# using xtabs\nxt &lt;- xtabs(count ~sex+party, data=GSS)\nxt\n\n\n        party\nsex      dem indep rep\n  female 279    73 225\n  male   165    47 191\n\n\nCode\nstr(xt)\n\n\n 'xtabs' num [1:2, 1:3] 279 165 73 47 225 191\n - attr(*, \"dimnames\")=List of 2\n  ..$ sex  : chr [1:2] \"female\" \"male\"\n  ..$ party: chr [1:3] \"dem\" \"indep\" \"rep\"\n - attr(*, \"call\")= language xtabs(formula = count ~ sex + party, data = GSS)\n\n\n\nxtab with addmargins\n\n\n# or we want to have addmargins\naddmargins(xt)\n\n        party\nsex      dem indep rep Sum\n  female 279    73 225 577\n  male   165    47 191 403\n  Sum    444   120 416 980",
    "crumbs": [
      "DataTables",
      "vcd"
    ]
  },
  {
    "objectID": "datatables/vcd.html#table-form",
    "href": "datatables/vcd.html#table-form",
    "title": "vcd",
    "section": "4 Table Form",
    "text": "4 Table Form\n\n\nCode\n# Agresti-Table2.1 2x2 way table\n# Gender vs Belief\n# use rbind or convert from matrix\n\ntab &lt;- as.table(matrix(c(1230,357,859,413), nrow=2, byrow=TRUE,\n                        dimnames=list(gender=c(\"F\",\"M\"),\n                                      belief=c(\"Yes\",\"No\"))))\ntab\n\n\n      belief\ngender  Yes   No\n     F 1230  357\n     M  859  413\n\n\nCode\nstr(tab)\n\n\n 'table' num [1:2, 1:2] 1230 859 357 413\n - attr(*, \"dimnames\")=List of 2\n  ..$ gender: chr [1:2] \"F\" \"M\"\n  ..$ belief: chr [1:2] \"Yes\" \"No\"\n\n\n\n# table has addmargins\naddmargins(tab)\n\n      belief\ngender  Yes   No  Sum\n   F   1230  357 1587\n   M    859  413 1272\n   Sum 2089  770 2859\n\n\n\n4.1 Structable table\n\nlibrary(vcd)\n# structable representation\n# 3-way table\n\nstbl &lt;- structable(HairEyeColor)\nstr(stbl)\n\n num [1:8, 1:4] 32 36 53 66 10 16 3 4 11 9 ...\n - attr(*, \"dnames\")=List of 3\n  ..$ Hair: chr [1:4] \"Black\" \"Brown\" \"Red\" \"Blond\"\n  ..$ Eye : chr [1:4] \"Brown\" \"Blue\" \"Hazel\" \"Green\"\n  ..$ Sex : chr [1:2] \"Male\" \"Female\"\n - attr(*, \"split_vertical\")= logi [1:3] FALSE TRUE FALSE\n - attr(*, \"col.vars\")=List of 1\n  ..$ Eye: chr [1:4] \"Brown\" \"Blue\" \"Hazel\" \"Green\"\n - attr(*, \"row.vars\")=List of 2\n  ..$ Hair: chr [1:4] \"Black\" \"Brown\" \"Red\" \"Blond\"\n  ..$ Sex : chr [1:2] \"Male\" \"Female\"\n\nstbl\n\n             Eye Brown Blue Hazel Green\nHair  Sex                              \nBlack Male          32   11    10     3\n      Female        36    9     5     2\nBrown Male          53   50    25    15\n      Female        66   34    29    14\nRed   Male          10   10     7     7\n      Female        16    7     7     7\nBlond Male           3   30     5     8\n      Female         4   64     5     8\n\nHS &lt;- structable(Sex~Hair, HairEyeColor)\nHS\n\n      Sex Male Female\nHair                 \nBlack       56     52\nBrown      143    143\nRed         34     37\nBlond       46     81\n\nmosaic(HS)\n\n\n\n\n\n\n\nHSE &lt;- structable(Hair+Sex ~ Eye, HairEyeColor)\nHSE\n\n      Hair Black        Brown         Red        Blond       \n      Sex   Male Female  Male Female Male Female  Male Female\nEye                                                          \nBrown         32     36    53     66   10     16     3      4\nBlue          11      9    50     34   10      7    30     64\nHazel         10      5    25     29    7      7     5      5\nGreen          3      2    15     14    7      7     8      8\n\n\n\n\n4.2 Matrix table\n\n# Example 2 - JobSat\n# 2-way (or 2 factors) table\n\nJobSat &lt;- matrix(c(1,2,1,0, 3,3,6,1, 10,10,14,9, 6,7,12,11), 4, 4)\ndimnames(JobSat) = list(income=c(\"&lt; 15k\", \"15-25k\", \"25-40k\", \"&gt; 40k\"),\nsatisfaction=c(\"VeryD\", \"LittleD\", \"ModerateS\", \"VeryS\"))\nJobSat\n\n        satisfaction\nincome   VeryD LittleD ModerateS VeryS\n  &lt; 15k      1       3        10     6\n  15-25k     2       3        10     7\n  25-40k     1       6        14    12\n  &gt; 40k      0       1         9    11\n\nJobSat &lt;- as.table(JobSat)\nstr(JobSat)\n\n 'table' num [1:4, 1:4] 1 2 1 0 3 3 6 1 10 10 ...\n - attr(*, \"dimnames\")=List of 2\n  ..$ income      : chr [1:4] \"&lt; 15k\" \"15-25k\" \"25-40k\" \"&gt; 40k\"\n  ..$ satisfaction: chr [1:4] \"VeryD\" \"LittleD\" \"ModerateS\" \"VeryS\"\n\nJobSat\n\n        satisfaction\nincome   VeryD LittleD ModerateS VeryS\n  &lt; 15k      1       3        10     6\n  15-25k     2       3        10     7\n  25-40k     1       6        14    12\n  &gt; 40k      0       1         9    11",
    "crumbs": [
      "DataTables",
      "vcd"
    ]
  },
  {
    "objectID": "datatables/vcd.html#footnotes",
    "href": "datatables/vcd.html#footnotes",
    "title": "vcd",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nFriendly, M. (2013). Working with categorical data with R and the vcd and vcdExtra packages. Toronto: York University.↩︎",
    "crumbs": [
      "DataTables",
      "vcd"
    ]
  },
  {
    "objectID": "datatables/dataTable.html",
    "href": "datatables/dataTable.html",
    "title": "dataTable",
    "section": "",
    "text": "dataTables are also dataframes and thus functions-methods on dataframes are also applicable to dataTables\nfread is very useful for data input",
    "crumbs": [
      "DataTables",
      "dataTable"
    ]
  },
  {
    "objectID": "datatables/dataTable.html#library",
    "href": "datatables/dataTable.html#library",
    "title": "dataTable",
    "section": "1 Library",
    "text": "1 Library\n\nlibrary(tidyverse)\nlibrary(data.table)",
    "crumbs": [
      "DataTables",
      "dataTable"
    ]
  },
  {
    "objectID": "datatables/dataTable.html#data",
    "href": "datatables/dataTable.html#data",
    "title": "dataTable",
    "section": "2 Data",
    "text": "2 Data\n   ID Gender Test1 Test2 Exam \n1  SD101 M  11    48   61    \n2  SD102 F   8    43   77    \n3  SD103 F  13    15   49    \n4  SD104 F  15    20   57    \n5  SD105 M  10    40   82     \n6  SD106 F  11    23   65     \n7  SD107 M   6    24   46    \n8  SD108 M  12    47   80     \n9  SD109 M  10    21   48     \n10 SD110 M   7    27   62     \n\n2.1 Method 1: create data.table using fread\n\nlibrary(data.table)\n\n# note row definition\ndt0 &lt;- fread(text = \"\nrow  ID Gender Test1 Test2 Exam \n1  SD101 M   11    48   61    \n2  SD102 F    8    43   77    \n3  SD103 F   13    15   49    \n4  SD104 F   15    20   57    \n5  SD105 M   10    40   82     \n6  SD106 F   11    23   65     \n7  SD107 M    6    24   46    \n8  SD108 M   12    47   80     \n9  SD109 M   10    21   48     \n10 SD110 M    7    27   62  \")\nclass(dt0)\n\n[1] \"data.table\" \"data.frame\"\n\n# remove the row column\ndt &lt;- dt0[,!\"row\", with=FALSE]\ndt\n\n        ID Gender Test1 Test2  Exam\n    &lt;char&gt; &lt;char&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;\n 1:  SD101      M    11    48    61\n 2:  SD102      F     8    43    77\n 3:  SD103      F    13    15    49\n 4:  SD104      F    15    20    57\n 5:  SD105      M    10    40    82\n 6:  SD106      F    11    23    65\n 7:  SD107      M     6    24    46\n 8:  SD108      M    12    47    80\n 9:  SD109      M    10    21    48\n10:  SD110      M     7    27    62\n\n\n\n\n2.2 Method 2: create data.table using vectors or lists\n\nID2 &lt;- str_c(\"SD\",101:110)\nGender2 &lt;- c(\"M\",\"F\",\"F\",\"F\",\"M\",\"F\",\"M\",\"M\",\"M\",\"M\")\nTest21 &lt;- c(11,8,13,15,10,11,6,12,10,7)\nTest22 &lt;- c(48,43,15,20,40,23,24,47,21,27)\nExam23 &lt;- c(61,77,49,57,82,65,46,80,48,62)\ndt2 &lt;- data.table(ID2,Gender2,Test21,Test22,Exam23)\nclass(dt2)\n\n[1] \"data.table\" \"data.frame\"",
    "crumbs": [
      "DataTables",
      "dataTable"
    ]
  },
  {
    "objectID": "datatables/dataTable.html#data.table-manipulation",
    "href": "datatables/dataTable.html#data.table-manipulation",
    "title": "dataTable",
    "section": "3 data.Table Manipulation",
    "text": "3 data.Table Manipulation\n\n3.1 Create a new data.table column\n\n# equivalent of mutate\n# just define with a := sign\n\ndt[, TotScore := Test1+0.4*Test2+0.6*Exam ]\ndt\n\n        ID Gender Test1 Test2  Exam TotScore\n    &lt;char&gt; &lt;char&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;num&gt;\n 1:  SD101      M    11    48    61     66.8\n 2:  SD102      F     8    43    77     71.4\n 3:  SD103      F    13    15    49     48.4\n 4:  SD104      F    15    20    57     57.2\n 5:  SD105      M    10    40    82     75.2\n 6:  SD106      F    11    23    65     59.2\n 7:  SD107      M     6    24    46     43.2\n 8:  SD108      M    12    47    80     78.8\n 9:  SD109      M    10    21    48     47.2\n10:  SD110      M     7    27    62     55.0\n\n\n\n\n3.2 Select multiple rows and columns\n\ndt[1:4,c('Test1','Test2'), with=FALSE]\n\n   Test1 Test2\n   &lt;int&gt; &lt;int&gt;\n1:    11    48\n2:     8    43\n3:    13    15\n4:    15    20\n\n\n\n\n3.3 Read a data.table column to a vector\n\nscore &lt;- dt[,TotScore]\nscore\n\n [1] 66.8 71.4 48.4 57.2 75.2 59.2 43.2 78.8 47.2 55.0\n\n\n\n\n3.4 Using cut to data segment and assign letter grade\n\nbreaks&lt;- c(0,40,44,49,54,59,64,69,74,79,84,100)\nlabels&lt;-c(\"F\",\"D\",\"D+\",\"C\",\"C+\",\"B-\",\"B\",\"B+\",\"A-\",\"A\",\"A+\")\nlgrades&lt;-cut(score, breaks, labels, right=TRUE)\ndt[,Grade := lgrades]\ndt\n\n        ID Gender Test1 Test2  Exam TotScore  Grade\n    &lt;char&gt; &lt;char&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;num&gt; &lt;fctr&gt;\n 1:  SD101      M    11    48    61     66.8      B\n 2:  SD102      F     8    43    77     71.4     B+\n 3:  SD103      F    13    15    49     48.4     D+\n 4:  SD104      F    15    20    57     57.2     C+\n 5:  SD105      M    10    40    82     75.2     A-\n 6:  SD106      F    11    23    65     59.2     B-\n 7:  SD107      M     6    24    46     43.2      D\n 8:  SD108      M    12    47    80     78.8     A-\n 9:  SD109      M    10    21    48     47.2     D+\n10:  SD110      M     7    27    62     55.0     C+\n\n\n\n\n3.5 Filtering rows - all B’s (B+,B,B-)\n\nBTerms &lt;- c(\"B+\",\"B\",\"B-\")\ndt[Grade %in% BTerms,]\n\n       ID Gender Test1 Test2  Exam TotScore  Grade\n   &lt;char&gt; &lt;char&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;num&gt; &lt;fctr&gt;\n1:  SD101      M    11    48    61     66.8      B\n2:  SD102      F     8    43    77     71.4     B+\n3:  SD106      F    11    23    65     59.2     B-\n\n\n\n\n3.6 Getting row numbers\n\nr1 &lt;- dt[,.I[Grade=='A-']]\nr1\n\n[1] 5 8\n\n# alternatively\nr2 &lt;- dt[,which(Grade=='A-')]\ndt[r2,]\n\n       ID Gender Test1 Test2  Exam TotScore  Grade\n   &lt;char&gt; &lt;char&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;num&gt; &lt;fctr&gt;\n1:  SD105      M    10    40    82     75.2     A-\n2:  SD108      M    12    47    80     78.8     A-\n\n\n\n\n3.7 Count numbers in each grade (Grouping)\n\nlvlgrades= as_factor(c(\"A+\",\"A\",\"A-\",\"B+\",\"B\",\"B-\",\"C+\",\"C\",\"D+\",\"D\",\"F\"))\ndt[, .N, by=Grade]\n\n    Grade     N\n   &lt;fctr&gt; &lt;int&gt;\n1:      B     1\n2:     B+     1\n3:     D+     2\n4:     C+     2\n5:     A-     2\n6:     B-     1\n7:      D     1\n\n\n\n\n3.8 Mean TotScore by Gender (Grouping)\n\ndt_m &lt;- dt[,.(meanTotScore = round(mean(TotScore),2)),by=Gender]\ndt_m\n\n   Gender meanTotScore\n   &lt;char&gt;        &lt;num&gt;\n1:      M        61.03\n2:      F        59.05\n\n\n\n\n3.9 Means of Columns\n\ndt3 &lt;- dt[,.(mt1&lt;-mean(Test1), \n      mt2&lt;-mean(Test2),\n      mt3&lt;-mean(Exam))]\ndt3\n\n      V1    V2    V3\n   &lt;num&gt; &lt;num&gt; &lt;num&gt;\n1:  10.3  30.8  62.7\n\nsetnames(dt3, c('mt1','mt2','mt3'))\ndt3\n\n     mt1   mt2   mt3\n   &lt;num&gt; &lt;num&gt; &lt;num&gt;\n1:  10.3  30.8  62.7",
    "crumbs": [
      "DataTables",
      "dataTable"
    ]
  },
  {
    "objectID": "datatables/xtab.html",
    "href": "datatables/xtab.html",
    "title": "xtab",
    "section": "",
    "text": "library(tidyverse)\nlibrary(gt)",
    "crumbs": [
      "DataTables",
      "xtab"
    ]
  },
  {
    "objectID": "datatables/xtab.html#one-way-contingency-table-grades",
    "href": "datatables/xtab.html#one-way-contingency-table-grades",
    "title": "frequency",
    "section": "1 One-way contingency table (grades)",
    "text": "1 One-way contingency table (grades)\n\n# use table function to count frequency in lgrades\ntblfreq &lt;- table(tb$lgrades) \ntblfreq\n\n\nA+  A A- B+  B B- C+  C D+  D  F \n 1  1  0  0  2  3  1  1  0  0  1 \n\n\n\n# redo table back into a dataframe\ndf &lt;- data.frame(tblfreq)\nnames(df) &lt;- c(\"grades\",\"freq\")\ndf\n\n   grades freq\n1      A+    1\n2       A    1\n3      A-    0\n4      B+    0\n5       B    2\n6      B-    3\n7      C+    1\n8       C    1\n9      D+    0\n10      D    0\n11      F    1",
    "crumbs": [
      "DataTables",
      "xtab"
    ]
  },
  {
    "objectID": "datatables/xtab.html#two-way-contingency-table-gender-grades",
    "href": "datatables/xtab.html#two-way-contingency-table-gender-grades",
    "title": "frequency",
    "section": "2 Two-way Contingency table (gender-grades)",
    "text": "2 Two-way Contingency table (gender-grades)\n\ntwoWay &lt;- table(tb$gender,tb$lgrades)\ntwoWay\n\n   \n    A+ A A- B+ B B- C+ C D+ D F\n  M  0 1  0  0 1  2  1 1  0 0 0\n  F  1 0  0  0 1  1  0 0  0 0 1",
    "crumbs": [
      "DataTables",
      "xtab"
    ]
  },
  {
    "objectID": "datatables/xtab.html#library",
    "href": "datatables/xtab.html#library",
    "title": "xtab",
    "section": "",
    "text": "library(tidyverse)\nlibrary(gt)",
    "crumbs": [
      "DataTables",
      "xtab"
    ]
  },
  {
    "objectID": "datatables/xtab.html#data",
    "href": "datatables/xtab.html#data",
    "title": "xtab",
    "section": "2 Data",
    "text": "2 Data\nAgresti Table 2.1\n\n\nCode\ndata = data.frame(\n  Gender = c(\"Females\",\"Males\",\"Total\"),\n  Yes = c(1230, 859, 2089),\n  No = c(357,413,770),\n  Total = c(1587,1272,2859)\n)\ndata %&gt;% gt() %&gt;%\n  tab_options(table.width = px(400)) %&gt;%\n  tab_header(title=\"Belief in afterlife by Gender\") %&gt;%\n  tab_spanner(\n    label=\"Belief in Afterlife\",\n    columns = c(Yes,No)) |&gt;\n  tab_caption(caption=\"caption here\")\n\n\n\n\n\n\ncaption here\n\n\n\n\n\n\n\n\nBelief in afterlife by Gender\n\n\nGender\n\nBelief in Afterlife\n\nTotal\n\n\nYes\nNo\n\n\n\n\nFemales\n1230\n357\n1587\n\n\nMales\n859\n413\n1272\n\n\nTotal\n2089\n770\n2859\n\n\n\n\n\n\n\nThe fastest way to enter the contingency table is to first enter as a matrix and then convert it to table for subsequent summary. addmargins work for both matrix and table forms.\n\nM &lt;- matrix (c(1230,357, 859,413 ), nrow=2, byrow=TRUE,\n                  dimnames = list (c(\"Females\",\"Males\"),\n                                   c(\"yes\",\"no\")))\nM\n\n         yes  no\nFemales 1230 357\nMales    859 413\n\nN &lt;- addmargins(M)\nstr(N)\n\n num [1:3, 1:3] 1230 859 2089 357 413 ...\n - attr(*, \"dimnames\")=List of 2\n  ..$ : chr [1:3] \"Females\" \"Males\" \"Sum\"\n  ..$ : chr [1:3] \"yes\" \"no\" \"Sum\"",
    "crumbs": [
      "DataTables",
      "xtab"
    ]
  },
  {
    "objectID": "datatypes/matrices.html#creating-matrices",
    "href": "datatypes/matrices.html#creating-matrices",
    "title": "Matrices",
    "section": "",
    "text": "# define rows and cols\n# default by cols\n\nM &lt;- matrix(c(1, 2, 3, 4, 5, 6), nrow=2, ncol=3,\n            dimnames = list(c(\"r1\",\"r2\"),\n                            c(\"c1\",\"c2\",\"c3\")))\nM\n\n   c1 c2 c3\nr1  1  3  5\nr2  2  4  6\n\nstr(M)\n\n num [1:2, 1:3] 1 2 3 4 5 6\n - attr(*, \"dimnames\")=List of 2\n  ..$ : chr [1:2] \"r1\" \"r2\"\n  ..$ : chr [1:3] \"c1\" \"c2\" \"c3\"\n\n\n\n# uses byrow=TRUE\nN &lt;- matrix(c(11:22), byrow=TRUE, ncol=4,\n            dimnames = list(c(\"R1\",\"R2\",\"R3\"),\n                            c(\"C1\",\"C2\",\"C3\",\"C4\")))\nN\n\n   C1 C2 C3 C4\nR1 11 12 13 14\nR2 15 16 17 18\nR3 19 20 21 22",
    "crumbs": [
      "Datatypes",
      "matrices"
    ]
  },
  {
    "objectID": "datatypes/matrices.html#matrix-manipulation",
    "href": "datatypes/matrices.html#matrix-manipulation",
    "title": "Matrices",
    "section": "2 Matrix manipulation",
    "text": "2 Matrix manipulation\n\n# baseR - transpose\nP &lt;- t(M)\nP\n\n   r1 r2\nc1  1  2\nc2  3  4\nc3  5  6",
    "crumbs": [
      "Datatypes",
      "matrices"
    ]
  },
  {
    "objectID": "datatypes/matrices.html#some-matrix-manipulation",
    "href": "datatypes/matrices.html#some-matrix-manipulation",
    "title": "Matrices",
    "section": "2 Some matrix manipulation",
    "text": "2 Some matrix manipulation\n\n# baseR - transpose\nP &lt;- t(M)\nP\n\n   r1 r2\nc1  1  2\nc2  3  4\nc3  5  6\n\n\n\n# baseR - multiplication\n# M x N (2x3)*(3x4)\nM %*% N\n\n    C1  C2  C3  C4\nr1 151 160 169 178\nr2 196 208 220 232",
    "crumbs": [
      "Datatypes",
      "matrices"
    ]
  },
  {
    "objectID": "tables/xtab.html#library",
    "href": "tables/xtab.html#library",
    "title": "xtabs",
    "section": "1 Library",
    "text": "1 Library\n\nlibrary(tidyverse)",
    "crumbs": [
      "Tables",
      "xtab"
    ]
  },
  {
    "objectID": "tables/xtab.html#data",
    "href": "tables/xtab.html#data",
    "title": "xtabs",
    "section": "2 Data",
    "text": "2 Data\n\n\nCode\n# dataframe\ndf = read.table(header=TRUE, text=\"\n     Gender Party Value\n     Female Democrat 495\n     Female Republican 272\n     Female Independent 590\n     Male Democrat 330\n     Male Republican 265\n     Male Independent 498 \")\n  \ndf\n\n\n  Gender       Party Value\n1 Female    Democrat   495\n2 Female  Republican   272\n3 Female Independent   590\n4   Male    Democrat   330\n5   Male  Republican   265\n6   Male Independent   498\n\n\n\n2.1 xtab form (formula)\n\nxtabs( Value ~ Gender+Party, data=df)\n\n        Party\nGender   Democrat Independent Republican\n  Female      495         590        272\n  Male        330         498        265",
    "crumbs": [
      "Tables",
      "xtab"
    ]
  },
  {
    "objectID": "datatypes/vectors.html#named-vector-to-tibble",
    "href": "datatypes/vectors.html#named-vector-to-tibble",
    "title": "Vectors",
    "section": "3 named vector to tibble",
    "text": "3 named vector to tibble\n\n# islands is a named vector (continental land mass)\n# we convert it to a tibble using enframe and\n# select top five islands\nlibrary(tidyverse)\ntibble::enframe(islands) |&gt; slice_max(value, n=5)\n\n# A tibble: 5 × 2\n  name          value\n  &lt;chr&gt;         &lt;dbl&gt;\n1 Asia          16988\n2 Africa        11506\n3 North America  9390\n4 South America  6795\n5 Antarctica     5500",
    "crumbs": [
      "Datatypes",
      "vectors"
    ]
  },
  {
    "objectID": "tables/table.html",
    "href": "tables/table.html",
    "title": "table",
    "section": "",
    "text": "table works on dataframes and tibbles.\nused for counting categories into a frequency table.\ntable output is a named vector\naddmargins function works for matrix and table forms.\nlibrary(tidyverse)",
    "crumbs": [
      "Tables",
      "table"
    ]
  },
  {
    "objectID": "tables/table.html#data",
    "href": "tables/table.html#data",
    "title": "table",
    "section": "1 Data",
    "text": "1 Data\n\n\nCode\ntb &lt;- read_csv(\"id, gender, lgrades\n               SD101, M, C+\n               SD102, F, F\n               SD103, F, B\n               SD104, F, A+\n               SD105, M, B\n               SD106, F, B-\n               SD107, M, A\n               SD108, M, C\n               SD109, M, B-\n               SD110, M, B-\n               \")\nlvlgender &lt;- c(\"F\",\"M\")\nlvlgrades &lt;- c(\"A+\",\"A\",\"A-\",\"B+\",\"B\",\"B-\",\"C+\",\"C\",\"D+\",\"D\",\"F\")\ntb$gender &lt;- factor(tb$gender, levels=lvlgender)\ntb$lgrades &lt;- factor(tb$lgrades, levels=lvlgrades)\ntb\n\n\n# A tibble: 10 × 3\n   id    gender lgrades\n   &lt;chr&gt; &lt;fct&gt;  &lt;fct&gt;  \n 1 SD101 M      C+     \n 2 SD102 F      F      \n 3 SD103 F      B      \n 4 SD104 F      A+     \n 5 SD105 M      B      \n 6 SD106 F      B-     \n 7 SD107 M      A      \n 8 SD108 M      C      \n 9 SD109 M      B-     \n10 SD110 M      B-",
    "crumbs": [
      "Tables",
      "table"
    ]
  },
  {
    "objectID": "tables/table.html#one-way-contingency",
    "href": "tables/table.html#one-way-contingency",
    "title": "table",
    "section": "2 one-way contingency",
    "text": "2 one-way contingency\n\n# table - one way\ntbl1 &lt;- table(tb$lgrades)\ntbl1\n\n\nA+  A A- B+  B B- C+  C D+  D  F \n 1  1  0  0  2  3  1  1  0  0  1 \n\nclass(tbl1)\n\n[1] \"table\"\n\n\n\n# convert table to dataframe\ndf&lt;-data.frame(tbl1) |&gt; setNames( c(\"grades\",\"freq\"))\ndf\n\n   grades freq\n1      A+    1\n2       A    1\n3      A-    0\n4      B+    0\n5       B    2\n6      B-    3\n7      C+    1\n8       C    1\n9      D+    0\n10      D    0\n11      F    1",
    "crumbs": [
      "Tables",
      "table"
    ]
  },
  {
    "objectID": "tables/table.html#two-way-contingency",
    "href": "tables/table.html#two-way-contingency",
    "title": "table",
    "section": "3 two-way contingency",
    "text": "3 two-way contingency\n\n# gender-lgrades\ntbl2 &lt;- table(tb$gender, tb$lgrades)\ntbl2\n\n   \n    A+ A A- B+ B B- C+ C D+ D F\n  F  1 0  0  0 1  1  0 0  0 0 1\n  M  0 1  0  0 1  2  1 1  0 0 0\n\nclass(tbl2)\n\n[1] \"table\"\n\n\n\n3.1 addmargins(table, FUN)\n\naddmargins(tbl2, FUN=sum)\n\nMargins computed over dimensions\nin the following order:\n1: \n2: \n\n\n     \n      A+  A A- B+  B B- C+  C D+  D  F sum\n  F    1  0  0  0  1  1  0  0  0  0  1   4\n  M    0  1  0  0  1  2  1  1  0  0  0   6\n  sum  1  1  0  0  2  3  1  1  0  0  1  10",
    "crumbs": [
      "Tables",
      "table"
    ]
  },
  {
    "objectID": "tables/table.html#grades-freq-in-dataframe",
    "href": "tables/table.html#grades-freq-in-dataframe",
    "title": "table",
    "section": "4 grades-freq in dataframe",
    "text": "4 grades-freq in dataframe\n\n# redo table back into a dataframe\ndf &lt;- data.frame(oneWay)\nnames(df) &lt;- c(\"grades\",\"freq\")\ndf\n\n   grades freq\n1      A+    1\n2       A    1\n3      A-    0\n4      B+    0\n5       B    2\n6      B-    3\n7      C+    1\n8       C    1\n9      D+    0\n10      D    0\n11      F    1",
    "crumbs": [
      "Tables",
      "table"
    ]
  },
  {
    "objectID": "tables/table.html#column-plot",
    "href": "tables/table.html#column-plot",
    "title": "table",
    "section": "5 column plot",
    "text": "5 column plot\n\nggplot(df, aes(x=grades, y=freq))+\n  geom_col(fill=\"lightblue\", color=\"black\")",
    "crumbs": [
      "Tables",
      "table"
    ]
  },
  {
    "objectID": "tables/gt.html#contingency-table",
    "href": "tables/gt.html#contingency-table",
    "title": "gt",
    "section": "Contingency table",
    "text": "Contingency table\n\ndf &lt;- read_csv(\"Group, Yes, No\n               Placebo, 189, 10845\n               Aspirin, 104, 10933\n               \")\ndf$Group &lt;- as.factor(df$Group)\ndf\n\n# A tibble: 2 × 3\n  Group     Yes    No\n  &lt;fct&gt;   &lt;dbl&gt; &lt;dbl&gt;\n1 Placebo   189 10845\n2 Aspirin   104 10933\n\ngt(df) |&gt;\n  tab_header(\n    title=md(\"Cross classification\"),\n    subtitle=md(\"Aspirin use and myocardial infarction\")\n  ) |&gt;\n  tab_spanner(\n    label = \"Mycardial Infarction\",\n    columns = c(Yes, No)\n  )\n\n\n\n\n\n\n\n\n\n\n\n\nCross classification\n\n\nAspirin use and myocardial infarction\n\n\nGroup\n\nMycardial Infarction\n\n\n\nYes\nNo\n\n\n\n\nPlacebo\n189\n10845\n\n\nAspirin\n104\n10933",
    "crumbs": [
      "Tables",
      "gt"
    ]
  },
  {
    "objectID": "tables/gt.html#gt-contingency-table",
    "href": "tables/gt.html#gt-contingency-table",
    "title": "gt",
    "section": "gt contingency table",
    "text": "gt contingency table\n\n# gt operates on dataframes\ndf &lt;- read_csv(\"Group, Yes, No\n               Placebo, 189, 10845\n               Aspirin, 104, 10933\n               \")\ndf$Group &lt;- as.factor(df$Group)\ndf\n\n# A tibble: 2 × 3\n  Group     Yes    No\n  &lt;fct&gt;   &lt;dbl&gt; &lt;dbl&gt;\n1 Placebo   189 10845\n2 Aspirin   104 10933\n\ngt(df) |&gt;\n  tab_header(\n    title=md(\"Cross classification\"),\n    subtitle=md(\"Aspirin use and myocardial infarction\")\n  ) |&gt;\n  tab_spanner(\n    label = \"Mycardial Infarction\",\n    columns = c(Yes, No)\n  )\n\n\n\n\n\n\n\n\n\n\n\n\nCross classification\n\n\nAspirin use and myocardial infarction\n\n\nGroup\n\nMycardial Infarction\n\n\n\nYes\nNo\n\n\n\n\nPlacebo\n189\n10845\n\n\nAspirin\n104\n10933",
    "crumbs": [
      "Tables",
      "gt"
    ]
  },
  {
    "objectID": "tables/gt.html#gt-on-contingency-table",
    "href": "tables/gt.html#gt-on-contingency-table",
    "title": "gt",
    "section": "gt on contingency table",
    "text": "gt on contingency table\n\ndf &lt;- read.table(header=TRUE, text=\"\n          Group Yes No\n          Placebo 189 10845\n          Aspirin 104 10933 \")\ndf\n\n    Group Yes    No\n1 Placebo 189 10845\n2 Aspirin 104 10933\n\ngt(df) |&gt;\n  tab_header(\n    title=md(\"Cross classification\"),\n    subtitle=md(\"Aspirin use and myocardial infarction\")\n  ) |&gt;\n  tab_spanner(\n    label = \"Mycardial Infarction\",\n    columns = c(Yes, No)\n  )\n\n\n\n\n\n\n\n\n\n\n\n\nCross classification\n\n\nAspirin use and myocardial infarction\n\n\nGroup\n\nMycardial Infarction\n\n\n\nYes\nNo\n\n\n\n\nPlacebo\n189\n10845\n\n\nAspirin\n104\n10933\n\n\n\n\n\n\n\n\ndf2 &lt;- read.table(header=TRUE, text=\"\n          Group Yes No\n          Placebo 189 10845\n          Aspirin 104 10933 \")\ndf2\n\n    Group Yes    No\n1 Placebo 189 10845\n2 Aspirin 104 10933\n\ngt(df2)\n\n\n\n\n\n\n\nGroup\nYes\nNo\n\n\n\n\nPlacebo\n189\n10845\n\n\nAspirin\n104\n10933",
    "crumbs": [
      "Tables",
      "gt"
    ]
  },
  {
    "objectID": "tables/table.html#one-way-frequency-contingency_",
    "href": "tables/table.html#one-way-frequency-contingency_",
    "title": "table",
    "section": "2 one-way frequency (contingency_\\)",
    "text": "2 one-way frequency (contingency_\\)\n\n# table - one way\ntbl1 &lt;- table(tb$lgrades)\ntbl1\n\n\nA+  A A- B+  B B- C+  C D+  D  F \n 1  1  0  0  2  3  1  1  0  0  1 \n\nclass(tbl1)\n\n[1] \"table\"\n\n\n\n# convert table to dataframe\ndf&lt;-data.frame(tbl1) |&gt; setNames( c(\"grades\",\"freq\"))\ndf\n\n   grades freq\n1      A+    1\n2       A    1\n3      A-    0\n4      B+    0\n5       B    2\n6      B-    3\n7      C+    1\n8       C    1\n9      D+    0\n10      D    0\n11      F    1",
    "crumbs": [
      "Tables",
      "table"
    ]
  },
  {
    "objectID": "tables/table.html#one-way-contingency-frequency",
    "href": "tables/table.html#one-way-contingency-frequency",
    "title": "table",
    "section": "2 one-way contingency (frequency)",
    "text": "2 one-way contingency (frequency)\n\n# table - one way\n# table will do the count in the vector\ntbl1 &lt;- table(tb$lgrades)\ntbl1\n\n\nA+  A A- B+  B B- C+  C D+  D  F \n 1  1  0  0  2  3  1  1  0  0  1 \n\nclass(tbl1)\n\n[1] \"table\"\n\n\n\n# convert table to dataframe\n# setNames() is available in stats package\ndf&lt;-data.frame(tbl1) |&gt; setNames(c(\"grades\",\"freq\"))\ndf\n\n   grades freq\n1      A+    1\n2       A    1\n3      A-    0\n4      B+    0\n5       B    2\n6      B-    3\n7      C+    1\n8       C    1\n9      D+    0\n10      D    0\n11      F    1",
    "crumbs": [
      "Tables",
      "table"
    ]
  },
  {
    "objectID": "tables/table.html#data---frequency",
    "href": "tables/table.html#data---frequency",
    "title": "table",
    "section": "2 Data - Frequency",
    "text": "2 Data - Frequency\n\n\nCode\ntb &lt;- read_csv(\"id, gender, lgrades\n               SD101, M, C+\n               SD102, F, F\n               SD103, F, B\n               SD104, F, A+\n               SD105, M, B\n               SD106, F, B-\n               SD107, M, A\n               SD108, M, C\n               SD109, M, B-\n               SD110, M, B-\n               \")\nlvlgender &lt;- c(\"F\",\"M\")\nlvlgrades &lt;- c(\"A+\",\"A\",\"A-\",\"B+\",\"B\",\"B-\",\"C+\",\"C\",\"D+\",\"D\",\"F\")\ntb$gender &lt;- factor(tb$gender, levels=lvlgender)\ntb$lgrades &lt;- factor(tb$lgrades, levels=lvlgrades)\ntb\n\n\n# A tibble: 10 × 3\n   id    gender lgrades\n   &lt;chr&gt; &lt;fct&gt;  &lt;fct&gt;  \n 1 SD101 M      C+     \n 2 SD102 F      F      \n 3 SD103 F      B      \n 4 SD104 F      A+     \n 5 SD105 M      B      \n 6 SD106 F      B-     \n 7 SD107 M      A      \n 8 SD108 M      C      \n 9 SD109 M      B-     \n10 SD110 M      B-     \n\n\n\n2.1 one-way frequency table\n\n# table - one way\n# table will do the count in the vector\ntbl1 &lt;- table(tb$lgrades)\ntbl1\n\n\nA+  A A- B+  B B- C+  C D+  D  F \n 1  1  0  0  2  3  1  1  0  0  1 \n\nclass(tbl1)\n\n[1] \"table\"\n\n\n\n\n2.2 named-vector (table)\nThe table function returns a named vector.\n\n# to return the first row\nnames(tbl1) \n\n [1] \"A+\" \"A\"  \"A-\" \"B+\" \"B\"  \"B-\" \"C+\" \"C\"  \"D+\" \"D\"  \"F\" \n\n# to return a table of values\n# convert to vector of values\nv &lt;- unname(tbl1) |&gt; as.vector()\nv \n\n [1] 1 1 0 0 2 3 1 1 0 0 1\n\n\n\n\n2.3 Set table to dataframe\n\n# convert table to dataframe\n# setNames() is available in stats package\ndf&lt;-data.frame(tbl1) |&gt; setNames(c(\"grades\",\"freq\"))\ndf\n\n   grades freq\n1      A+    1\n2       A    1\n3      A-    0\n4      B+    0\n5       B    2\n6      B-    3\n7      C+    1\n8       C    1\n9      D+    0\n10      D    0\n11      F    1\n\n\n\n\n2.4 two-way frequency table\n\n# gender-lgrades\ntbl2 &lt;- table(tb$gender, tb$lgrades)\ntbl2\n\n   \n    A+ A A- B+ B B- C+ C D+ D F\n  F  1 0  0  0 1  1  0 0  0 0 1\n  M  0 1  0  0 1  2  1 1  0 0 0\n\ndimnames(tbl2)\n\n[[1]]\n[1] \"F\" \"M\"\n\n[[2]]\n [1] \"A+\" \"A\"  \"A-\" \"B+\" \"B\"  \"B-\" \"C+\" \"C\"  \"D+\" \"D\"  \"F\" \n\nclass(tbl2)\n\n[1] \"table\"\n\n\n\n\n2.5 Get values from table\n\nv1 &lt;- tbl2[1,] |&gt; unname() |&gt; as.vector()\nv2 &lt;- tbl2[2,] |&gt; unname() |&gt; as.vector()\nv1 \n\n [1] 1 0 0 0 1 1 0 0 0 0 1\n\nv2\n\n [1] 0 1 0 0 1 2 1 1 0 0 0\n\n\n\n\n2.6 addmargins(table, FUN)\n\naddmargins(tbl2, FUN=sum)\n\nMargins computed over dimensions\nin the following order:\n1: \n2: \n\n\n     \n      A+  A A- B+  B B- C+  C D+  D  F sum\n  F    1  0  0  0  1  1  0  0  0  0  1   4\n  M    0  1  0  0  1  2  1  1  0  0  0   6\n  sum  1  1  0  0  2  3  1  1  0  0  1  10",
    "crumbs": [
      "Tables",
      "table"
    ]
  },
  {
    "objectID": "tables/table.html#data---contingency",
    "href": "tables/table.html#data---contingency",
    "title": "table",
    "section": "2 Data - Contingency",
    "text": "2 Data - Contingency\n\n\n\n\n\n\n\ncreate a contingency table in matrix form first and then convert to table.\naddmargins works for matrix and table forms\n\n\n\n\n\nM &lt;- matrix (c(1230,357, 859,413 ), nrow=2, byrow=TRUE,\n                  dimnames = list (c(\"Females\",\"Males\"),\n                                   c(\"yes\",\"no\")))\nM\n\n         yes  no\nFemales 1230 357\nMales    859 413\n\nN &lt;- addmargins(M)\nN\n\n         yes  no  Sum\nFemales 1230 357 1587\nMales    859 413 1272\nSum     2089 770 2859",
    "crumbs": [
      "Tables",
      "table"
    ]
  },
  {
    "objectID": "tables/table.html#data---frequency-table",
    "href": "tables/table.html#data---frequency-table",
    "title": "table",
    "section": "1 Data - Frequency Table",
    "text": "1 Data - Frequency Table\n\n\nCode\ntb &lt;- read_csv(\"id, gender, lgrades\n               SD101, M, C+\n               SD102, F, F\n               SD103, F, B\n               SD104, F, A+\n               SD105, M, B\n               SD106, F, B-\n               SD107, M, A\n               SD108, M, C\n               SD109, M, B-\n               SD110, M, B-\n               \")\nlvlgender &lt;- c(\"F\",\"M\")\nlvlgrades &lt;- c(\"A+\",\"A\",\"A-\",\"B+\",\"B\",\"B-\",\"C+\",\"C\",\"D+\",\"D\",\"F\")\ntb$gender &lt;- factor(tb$gender, levels=lvlgender)\ntb$lgrades &lt;- factor(tb$lgrades, levels=lvlgrades)\ntb\n\n\n# A tibble: 10 × 3\n   id    gender lgrades\n   &lt;chr&gt; &lt;fct&gt;  &lt;fct&gt;  \n 1 SD101 M      C+     \n 2 SD102 F      F      \n 3 SD103 F      B      \n 4 SD104 F      A+     \n 5 SD105 M      B      \n 6 SD106 F      B-     \n 7 SD107 M      A      \n 8 SD108 M      C      \n 9 SD109 M      B-     \n10 SD110 M      B-     \n\n\n\n1.1 one-way frequency table\n\n# table - one way\n# table will do the count in the vector\ntbl1 &lt;- table(tb$lgrades)\ntbl1\n\n\nA+  A A- B+  B B- C+  C D+  D  F \n 1  1  0  0  2  3  1  1  0  0  1 \n\nclass(tbl1)\n\n[1] \"table\"\n\n\n\n# convert table to dataframe\n# setNames() is available in stats package\ndf&lt;-data.frame(tbl1) |&gt; setNames(c(\"grades\",\"freq\"))\ndf\n\n   grades freq\n1      A+    1\n2       A    1\n3      A-    0\n4      B+    0\n5       B    2\n6      B-    3\n7      C+    1\n8       C    1\n9      D+    0\n10      D    0\n11      F    1\n\n\n\n\n1.2 two-way frequency table\n\n# gender-lgrades\ntbl2 &lt;- table(tb$gender, tb$lgrades)\ntbl2\n\n   \n    A+ A A- B+ B B- C+ C D+ D F\n  F  1 0  0  0 1  1  0 0  0 0 1\n  M  0 1  0  0 1  2  1 1  0 0 0\n\nclass(tbl2)\n\n[1] \"table\"\n\ndimnames(tbl2)\n\n[[1]]\n[1] \"F\" \"M\"\n\n[[2]]\n [1] \"A+\" \"A\"  \"A-\" \"B+\" \"B\"  \"B-\" \"C+\" \"C\"  \"D+\" \"D\"  \"F\" \n\n\n\n\n1.3 addmargins(table, FUN)\n\naddmargins(tbl2, FUN=sum)\n\nMargins computed over dimensions\nin the following order:\n1: \n2: \n\n\n     \n      A+  A A- B+  B B- C+  C D+  D  F sum\n  F    1  0  0  0  1  1  0  0  0  0  1   4\n  M    0  1  0  0  1  2  1  1  0  0  0   6\n  sum  1  1  0  0  2  3  1  1  0  0  1  10",
    "crumbs": [
      "Tables",
      "table"
    ]
  },
  {
    "objectID": "tables/table.html#data---contingency-table",
    "href": "tables/table.html#data---contingency-table",
    "title": "table",
    "section": "2 Data - Contingency Table",
    "text": "2 Data - Contingency Table\n\n\n\n\n\n\n\ncreate a contingency table in matrix form first and then convert to table.\naddmargins works for matrix and table forms\n\n\n\n\n\nM &lt;- matrix (c(1230,357, 859,413 ), nrow=2, byrow=TRUE,\n                  dimnames = list (c(\"Females\",\"Males\"),\n                                   c(\"yes\",\"no\")))\nclass(M)\n\n[1] \"matrix\" \"array\" \n\naddmargins(M)\n\n         yes  no  Sum\nFemales 1230 357 1587\nMales    859 413 1272\nSum     2089 770 2859\n\ntbl3 &lt;- as.table(M)\nclass(tbl3)\n\n[1] \"table\"\n\naddmargins(tbl3)\n\n         yes   no  Sum\nFemales 1230  357 1587\nMales    859  413 1272\nSum     2089  770 2859",
    "crumbs": [
      "Tables",
      "table"
    ]
  },
  {
    "objectID": "tables/table.html#data---frequency-tables",
    "href": "tables/table.html#data---frequency-tables",
    "title": "table",
    "section": "2 Data - Frequency Tables",
    "text": "2 Data - Frequency Tables\n\n\nCode\ntb &lt;- read_csv(\"id, gender, lgrades\n               SD101, M, C+\n               SD102, F, F\n               SD103, F, B\n               SD104, F, A+\n               SD105, M, B\n               SD106, F, B-\n               SD107, M, A\n               SD108, M, C\n               SD109, M, B-\n               SD110, M, B-\n               \")\nlvlgender &lt;- c(\"F\",\"M\")\nlvlgrades &lt;- c(\"A+\",\"A\",\"A-\",\"B+\",\"B\",\"B-\",\"C+\",\"C\",\"D+\",\"D\",\"F\")\ntb$gender &lt;- factor(tb$gender, levels=lvlgender)\ntb$lgrades &lt;- factor(tb$lgrades, levels=lvlgrades)\ntb\n\n\n# A tibble: 10 × 3\n   id    gender lgrades\n   &lt;chr&gt; &lt;fct&gt;  &lt;fct&gt;  \n 1 SD101 M      C+     \n 2 SD102 F      F      \n 3 SD103 F      B      \n 4 SD104 F      A+     \n 5 SD105 M      B      \n 6 SD106 F      B-     \n 7 SD107 M      A      \n 8 SD108 M      C      \n 9 SD109 M      B-     \n10 SD110 M      B-     \n\n\n\n2.1 one-way frequency table\n\n# table - one way\n# table will do the count in the vector\ntbl1 &lt;- table(tb$lgrades)\ntbl1\n\n\nA+  A A- B+  B B- C+  C D+  D  F \n 1  1  0  0  2  3  1  1  0  0  1 \n\nclass(tbl1)\n\n[1] \"table\"\n\n\n\n# convert table to dataframe\n# setNames() is available in stats package\ndf&lt;-data.frame(tbl1) |&gt; setNames(c(\"grades\",\"freq\"))\ndf\n\n   grades freq\n1      A+    1\n2       A    1\n3      A-    0\n4      B+    0\n5       B    2\n6      B-    3\n7      C+    1\n8       C    1\n9      D+    0\n10      D    0\n11      F    1\n\n\n\n\n2.2 two-way frequency table\n\n# gender-lgrades\ntbl2 &lt;- table(tb$gender, tb$lgrades)\ntbl2\n\n   \n    A+ A A- B+ B B- C+ C D+ D F\n  F  1 0  0  0 1  1  0 0  0 0 1\n  M  0 1  0  0 1  2  1 1  0 0 0\n\nclass(tbl2)\n\n[1] \"table\"\n\ndimnames(tbl2)\n\n[[1]]\n[1] \"F\" \"M\"\n\n[[2]]\n [1] \"A+\" \"A\"  \"A-\" \"B+\" \"B\"  \"B-\" \"C+\" \"C\"  \"D+\" \"D\"  \"F\" \n\n\n\n\n2.3 addmargins(table, FUN)\n\naddmargins(tbl2, FUN=sum)\n\nMargins computed over dimensions\nin the following order:\n1: \n2: \n\n\n     \n      A+  A A- B+  B B- C+  C D+  D  F sum\n  F    1  0  0  0  1  1  0  0  0  0  1   4\n  M    0  1  0  0  1  2  1  1  0  0  0   6\n  sum  1  1  0  0  2  3  1  1  0  0  1  10",
    "crumbs": [
      "Tables",
      "table"
    ]
  },
  {
    "objectID": "tables/table.html#data---contingency-tables",
    "href": "tables/table.html#data---contingency-tables",
    "title": "table",
    "section": "1 Data - Contingency Tables",
    "text": "1 Data - Contingency Tables\n\ncreate a contingency table in matrix form first and then convert to table.\naddmargins works for matrix and table forms\n\n\n1.1 Matrix form\n\n# Table 2.2 of Agresti\nM &lt;- matrix (c(189,10845,104,10933), nrow=2, byrow=TRUE,\n                dimnames = list(group=c(\"Placebo\",\"Aspirin\"),\n                                c(\"yes\",\"no\")))\nclass(M)\n\n[1] \"matrix\" \"array\" \n\naddmargins(M)\n\n         \ngroup     yes    no   Sum\n  Placebo 189 10845 11034\n  Aspirin 104 10933 11037\n  Sum     293 21778 22071\n\n\n\n\n1.2 Table form\n\nlibrary(gt)\n# gt acts on tb and df only\ntbl3 &lt;- as.table(M)\nclass(tbl3)\n\n[1] \"table\"\n\ntbl3\n\n         \ngroup       yes    no\n  Placebo   189 10845\n  Aspirin   104 10933\n\ntbl4 &lt;- addmargins(tbl3,2)\ntbl4\n\n         \ngroup       yes    no   Sum\n  Placebo   189 10845 11034\n  Aspirin   104 10933 11037\n\n\n\n\n1.3 Proportions table\n\n# margin=1 proportionates the rowSums\nP &lt;- prop.table(tbl3, margin=1) |&gt; round(4)\nP\n\n         \ngroup        yes     no\n  Placebo 0.0171 0.9829\n  Aspirin 0.0094 0.9906\n\n\n\n\n1.4 Proportions test\n\n# Wald CI for proportion differences\nprop.test(tbl3, conf.level=0.95, correct=FALSE)\n\n\n    2-sample test for equality of proportions without continuity correction\n\ndata:  tbl3\nX-squared = 25.014, df = 1, p-value = 5.692e-07\nalternative hypothesis: two.sided\n95 percent confidence interval:\n 0.004687751 0.010724297\nsample estimates:\n    prop 1     prop 2 \n0.01712887 0.00942285",
    "crumbs": [
      "Tables",
      "table"
    ]
  },
  {
    "objectID": "tables/xtab.html#data-df",
    "href": "tables/xtab.html#data-df",
    "title": "xtabs",
    "section": "2 Data (df)",
    "text": "2 Data (df)\n\n\nCode\n# dataframe\ndf = read.table(header=TRUE, text=\"\n     Gender Party Value\n     Female Democrat 495\n     Female Republican 272\n     Female Independent 590\n     Male Democrat 330\n     Male Republican 265\n     Male Independent 498 \")\n  \ndf\n\n\n  Gender       Party Value\n1 Female    Democrat   495\n2 Female  Republican   272\n3 Female Independent   590\n4   Male    Democrat   330\n5   Male  Republican   265\n6   Male Independent   498\n\n\n\n2.1 xtab form\n\nxtab &lt;- xtabs( Value ~ Gender+Party, data=df)\n\n\n\n2.2 addmargins\n\naddmargins(xtab,2)\n\n        Party\nGender   Democrat Independent Republican  Sum\n  Female      495         590        272 1357\n  Male        330         498        265 1093",
    "crumbs": [
      "Tables",
      "xtab"
    ]
  },
  {
    "objectID": "tables/xtab.html#data---contingency",
    "href": "tables/xtab.html#data---contingency",
    "title": "xtabs",
    "section": "2 Data - contingency",
    "text": "2 Data - contingency\n\n\nCode\n# dataframe\ndf = read.table(header=TRUE, text=\"\n     Gender Party Value\n     Female Democrat 495\n     Female Republican 272\n     Female Independent 590\n     Male Democrat 330\n     Male Republican 265\n     Male Independent 498 \")\ndf\n\n\n  Gender       Party Value\n1 Female    Democrat   495\n2 Female  Republican   272\n3 Female Independent   590\n4   Male    Democrat   330\n5   Male  Republican   265\n6   Male Independent   498\n\n\n\n2.1 xtab form\n\nxtab &lt;- xtabs( Value ~ Gender+Party, data=df)\nclass(xtab)\n\n[1] \"xtabs\" \"table\"\n\n\n\n\n2.2 addmargins\n\naddmargins(xtab,2)\n\n        Party\nGender   Democrat Independent Republican  Sum\n  Female      495         590        272 1357\n  Male        330         498        265 1093",
    "crumbs": [
      "Tables",
      "xtab"
    ]
  },
  {
    "objectID": "tables/xtab.html#data---df",
    "href": "tables/xtab.html#data---df",
    "title": "xtabs",
    "section": "2 Data - df",
    "text": "2 Data - df\n\n\nCode\n# dataframe\ndf = read.table(header=TRUE, text=\"\n     Gender Party Value\n     Female Democrat 495\n     Female Republican 272\n     Female Independent 590\n     Male Democrat 330\n     Male Republican 265\n     Male Independent 498 \")\ndf\n\n\n  Gender       Party Value\n1 Female    Democrat   495\n2 Female  Republican   272\n3 Female Independent   590\n4   Male    Democrat   330\n5   Male  Republican   265\n6   Male Independent   498\n\n\n\n2.1 xtab form\n\nxtab &lt;- xtabs( Value ~ Gender+Party, data=df)\nclass(xtab)\n\n[1] \"xtabs\" \"table\"\n\n\n\n\n2.2 addmargins\n\naddmargins(xtab,2)\n\n        Party\nGender   Democrat Independent Republican  Sum\n  Female      495         590        272 1357\n  Male        330         498        265 1093",
    "crumbs": [
      "Tables",
      "xtab"
    ]
  },
  {
    "objectID": "tables/xtab.html#data---dataframe",
    "href": "tables/xtab.html#data---dataframe",
    "title": "xtabs",
    "section": "2 Data - dataframe",
    "text": "2 Data - dataframe\n\n\nCode\n# dataframe\ndf = read.table(header=TRUE, text=\"\n     Gender Party Value\n     Female Democrat 495\n     Female Republican 272\n     Female Independent 590\n     Male Democrat 330\n     Male Republican 265\n     Male Independent 498 \")\ndf\n\n\n  Gender       Party Value\n1 Female    Democrat   495\n2 Female  Republican   272\n3 Female Independent   590\n4   Male    Democrat   330\n5   Male  Republican   265\n6   Male Independent   498\n\n\n\n2.1 xtab form\n\ntab &lt;- xtabs( Value ~ Gender+Party, data=df)\nclass(tab)\n\n[1] \"xtabs\" \"table\"\n\ntab\n\n        Party\nGender   Democrat Independent Republican\n  Female      495         590        272\n  Male        330         498        265\n\n\n\n\n2.2 addmargins\n\naddmargins(tab,2)\n\n        Party\nGender   Democrat Independent Republican  Sum\n  Female      495         590        272 1357\n  Male        330         498        265 1093",
    "crumbs": [
      "Tables",
      "xtab"
    ]
  },
  {
    "objectID": "tables/flextable.html",
    "href": "tables/flextable.html",
    "title": "flexTable",
    "section": "",
    "text": "flextable takes a data.frame and returns a flextable. flextable also allows you to merge cells, add header rows, add footer rows, change all formatting and specify how data should be displayed in cells. Table contents can also contain a mix of content types such as text and images.",
    "crumbs": [
      "Tables",
      "flextable"
    ]
  },
  {
    "objectID": "tables/flextable.html#library",
    "href": "tables/flextable.html#library",
    "title": "flexTable",
    "section": "Library",
    "text": "Library\n\nlibrary(tidyverse)\nlibrary(flextable)",
    "crumbs": [
      "Tables",
      "flextable"
    ]
  },
  {
    "objectID": "tables/flextable.html#data",
    "href": "tables/flextable.html#data",
    "title": "flexTable",
    "section": "Data",
    "text": "Data\n\n\nCode\ntb &lt;- tibble::enframe(islands) %&gt;% slice_max(value, n=5)\ntb     \n\n\n# A tibble: 5 × 2\n  name          value\n  &lt;chr&gt;         &lt;dbl&gt;\n1 Asia          16988\n2 Africa        11506\n3 North America  9390\n4 South America  6795\n5 Antarctica     5500"
  },
  {
    "objectID": "tables/flextable.html#data1",
    "href": "tables/flextable.html#data1",
    "title": "flexTable",
    "section": "Data1",
    "text": "Data1\n\n\nCode\ntb &lt;- tibble::enframe(islands) %&gt;% slice_max(value, n=5)\ntb     \n\n\n# A tibble: 5 × 2\n  name          value\n  &lt;chr&gt;         &lt;dbl&gt;\n1 Asia          16988\n2 Africa        11506\n3 North America  9390\n4 South America  6795\n5 Antarctica     5500\n\n\n\nFlextable\n\nft &lt;- tb |&gt; flextable(cwidth=c(2,1)) |&gt; theme_box()\nft\n\nLandmass of Top 5 ContinentsnamevalueAsia16,988Africa11,506North America9,390South America6,795Antarctica5,500",
    "crumbs": [
      "Tables",
      "flextable"
    ]
  },
  {
    "objectID": "tables/flextable.html#flextable",
    "href": "tables/flextable.html#flextable",
    "title": "flexTable",
    "section": "Flextable",
    "text": "Flextable\n\nft &lt;- tb |&gt; flextable(cwidth=c(2,1)) |&gt; theme_box()\nft\n\nLandmasses of the WorldnamevalueAsia16,988Africa11,506North America9,390South America6,795Antarctica5,500",
    "crumbs": [
      "Tables",
      "flextable"
    ]
  },
  {
    "objectID": "tables/flextable.html#data2",
    "href": "tables/flextable.html#data2",
    "title": "flexTable",
    "section": "Data2",
    "text": "Data2\n\ndf &lt;- read.table(header=TRUE, text=\"\n          Group Yes No\n          Placebo 189 10845\n          Aspirin 104 10933 \")\ndf\n\n    Group Yes    No\n1 Placebo 189 10845\n2 Aspirin 104 10933\n\n\n\nFlextable\n\nft &lt;- flextable(df)\nft \n\nCross ClassificationGroupYesNoPlacebo18910,845Aspirin10410,933",
    "crumbs": [
      "Tables",
      "flextable"
    ]
  },
  {
    "objectID": "tables/flextable.html#data1---tibble",
    "href": "tables/flextable.html#data1---tibble",
    "title": "flexTable",
    "section": "Data1 - tibble",
    "text": "Data1 - tibble\n\n\nCode\ntb &lt;- tibble::enframe(islands) %&gt;% slice_max(value, n=5)\ntb     \n\n\n# A tibble: 5 × 2\n  name          value\n  &lt;chr&gt;         &lt;dbl&gt;\n1 Asia          16988\n2 Africa        11506\n3 North America  9390\n4 South America  6795\n5 Antarctica     5500\n\n\n\nFlextable\n\n# | tbl-cap: \"Landmass of Top 5 Continents\"\nft &lt;- tb |&gt; flextable(cwidth=c(2,1)) |&gt; theme_box()\nft\n\nLandmass of Top 5 ContinentsnamevalueAsia16,988Africa11,506North America9,390South America6,795Antarctica5,500",
    "crumbs": [
      "Tables",
      "flextable"
    ]
  },
  {
    "objectID": "tables/flextable.html#data2---dataframe",
    "href": "tables/flextable.html#data2---dataframe",
    "title": "flexTable",
    "section": "Data2 - dataframe",
    "text": "Data2 - dataframe\n\ndf &lt;- read.table(header=TRUE, text=\"\n          Group Yes No\n          Placebo 189 10845\n          Aspirin 104 10933 \")\ndf\n\n    Group Yes    No\n1 Placebo 189 10845\n2 Aspirin 104 10933\n\n\n\nFlextable\n\nft &lt;- flextable(df)\nft \n\nCross ClassificationGroupYesNoPlacebo18910,845Aspirin10410,933",
    "crumbs": [
      "Tables",
      "flextable"
    ]
  },
  {
    "objectID": "tables/table.html#section",
    "href": "tables/table.html#section",
    "title": "table",
    "section": "3 ",
    "text": "3",
    "crumbs": [
      "Tables",
      "table"
    ]
  },
  {
    "objectID": "tables/table.html#data---table",
    "href": "tables/table.html#data---table",
    "title": "table",
    "section": "1 Data - table",
    "text": "1 Data - table\n\ntable function is in baseR and creates a contingency table from a matrix form.\naddmargins works for matrix and table forms\n\n\n1.1 Matrix form\n\n# Table 2.2 of Agresti\nM &lt;- matrix (c(189,10845,104,10933), nrow=2, byrow=TRUE,\n             dimnames = list(group=c(\"Placebo\",\"Aspirin\"),\n                                c(\"yes\",\"no\")))\nclass(M)\n\n[1] \"matrix\" \"array\" \n\naddmargins(M)\n\n         \ngroup     yes    no   Sum\n  Placebo 189 10845 11034\n  Aspirin 104 10933 11037\n  Sum     293 21778 22071\n\n\n\n\n1.2 Table form\n\ntbl3 &lt;- as.table(M)\nclass(tbl3)\n\n[1] \"table\"\n\naddmargins(tbl3,2)\n\n         \ngroup       yes    no   Sum\n  Placebo   189 10845 11034\n  Aspirin   104 10933 11037\n\n\n\n\n1.3 Proportions table\n\n# margin=1 proportionates the rowSums\nptbl &lt;- prop.table(tbl3, margin=1) |&gt; round(4)\nptbl\n\n         \ngroup        yes     no\n  Placebo 0.0171 0.9829\n  Aspirin 0.0094 0.9906\n\n\n\n\n1.4 Proportions test\n\n# Wald CI for proportion differences\nprop.test(tbl3, conf.level=0.95, correct=FALSE)\n\n\n    2-sample test for equality of proportions without continuity correction\n\ndata:  tbl3\nX-squared = 25.014, df = 1, p-value = 5.692e-07\nalternative hypothesis: two.sided\n95 percent confidence interval:\n 0.004687751 0.010724297\nsample estimates:\n    prop 1     prop 2 \n0.01712887 0.00942285",
    "crumbs": [
      "Tables",
      "table"
    ]
  },
  {
    "objectID": "tables/table.html#data---tb-df",
    "href": "tables/table.html#data---tb-df",
    "title": "table",
    "section": "2 Data - tb, df",
    "text": "2 Data - tb, df\n\n\nCode\ntb &lt;- read_csv(\"id, gender, lgrades\n               SD101, M, C+\n               SD102, F, F\n               SD103, F, B\n               SD104, F, A+\n               SD105, M, B\n               SD106, F, B-\n               SD107, M, A\n               SD108, M, C\n               SD109, M, B-\n               SD110, M, B-\n               \")\nlvlgender &lt;- c(\"F\",\"M\")\nlvlgrades &lt;- c(\"A+\",\"A\",\"A-\",\"B+\",\"B\",\"B-\",\"C+\",\"C\",\"D+\",\"D\",\"F\")\ntb$gender &lt;- factor(tb$gender, levels=lvlgender)\ntb$lgrades &lt;- factor(tb$lgrades, levels=lvlgrades)\ntb\n\n\n# A tibble: 10 × 3\n   id    gender lgrades\n   &lt;chr&gt; &lt;fct&gt;  &lt;fct&gt;  \n 1 SD101 M      C+     \n 2 SD102 F      F      \n 3 SD103 F      B      \n 4 SD104 F      A+     \n 5 SD105 M      B      \n 6 SD106 F      B-     \n 7 SD107 M      A      \n 8 SD108 M      C      \n 9 SD109 M      B-     \n10 SD110 M      B-     \n\n\n\n2.1 one-way frequency table\n\n# table - one way\n# table will do the count in the vector\ntbl1 &lt;- table(tb$lgrades)\ntbl1\n\n\nA+  A A- B+  B B- C+  C D+  D  F \n 1  1  0  0  2  3  1  1  0  0  1 \n\nclass(tbl1)\n\n[1] \"table\"\n\n\n\n# convert table to dataframe\n# setNames() is available in stats package\ndf&lt;-data.frame(tbl1) |&gt; setNames(c(\"grades\",\"freq\"))\ndf\n\n   grades freq\n1      A+    1\n2       A    1\n3      A-    0\n4      B+    0\n5       B    2\n6      B-    3\n7      C+    1\n8       C    1\n9      D+    0\n10      D    0\n11      F    1\n\n\n\n\n2.2 two-way frequency table\n\n# gender-lgrades\ntbl2 &lt;- table(tb$gender, tb$lgrades)\ntbl2\n\n   \n    A+ A A- B+ B B- C+ C D+ D F\n  F  1 0  0  0 1  1  0 0  0 0 1\n  M  0 1  0  0 1  2  1 1  0 0 0\n\nclass(tbl2)\n\n[1] \"table\"\n\ndimnames(tbl2)\n\n[[1]]\n[1] \"F\" \"M\"\n\n[[2]]\n [1] \"A+\" \"A\"  \"A-\" \"B+\" \"B\"  \"B-\" \"C+\" \"C\"  \"D+\" \"D\"  \"F\" \n\n\n\n\n2.3 addmargins(table, FUN)\n\naddmargins(tbl2, FUN=sum)\n\nMargins computed over dimensions\nin the following order:\n1: \n2: \n\n\n     \n      A+  A A- B+  B B- C+  C D+  D  F sum\n  F    1  0  0  0  1  1  0  0  0  0  1   4\n  M    0  1  0  0  1  2  1  1  0  0  0   6\n  sum  1  1  0  0  2  3  1  1  0  0  1  10",
    "crumbs": [
      "Tables",
      "table"
    ]
  },
  {
    "objectID": "tables/table.html#data---table-tbl",
    "href": "tables/table.html#data---table-tbl",
    "title": "table",
    "section": "1 Data - table (tbl)",
    "text": "1 Data - table (tbl)\n\ntable function is in baseR and creates a contingency table from a matrix form.\naddmargins works for matrix and table forms\n\n\n1.1 Matrix form\n\n# Table 2.2 of Agresti\nM &lt;- matrix (c(189,10845,104,10933), nrow=2, byrow=TRUE,\n             dimnames = list(group=c(\"Placebo\",\"Aspirin\"),\n                                c(\"yes\",\"no\")))\nclass(M)\n\n[1] \"matrix\" \"array\" \n\nM\n\n         \ngroup     yes    no\n  Placebo 189 10845\n  Aspirin 104 10933\n\n# margins added to matrix M (or later as table)\naddmargins(M) \n\n         \ngroup     yes    no   Sum\n  Placebo 189 10845 11034\n  Aspirin 104 10933 11037\n  Sum     293 21778 22071\n\n\n\n\n1.2 Table form\n\n# convert M to table\n\ntbl3 &lt;- as.table(M)\nclass(tbl3)\n\n[1] \"table\"\n\n# margins added to table\naddmargins(tbl3,2)\n\n         \ngroup       yes    no   Sum\n  Placebo   189 10845 11034\n  Aspirin   104 10933 11037\n\n\n\n\n1.3 Proportions table\n\n# margin=1 proportionates the rowSums\nptbl &lt;- prop.table(tbl3, margin=1) |&gt; round(4)\nptbl\n\n         \ngroup        yes     no\n  Placebo 0.0171 0.9829\n  Aspirin 0.0094 0.9906\n\n\n\n\n1.4 Proportions test\n\n# Wald CI for proportion differences\nprop.test(tbl3, conf.level=0.95, correct=FALSE)\n\n\n    2-sample test for equality of proportions without continuity correction\n\ndata:  tbl3\nX-squared = 25.014, df = 1, p-value = 5.692e-07\nalternative hypothesis: two.sided\n95 percent confidence interval:\n 0.004687751 0.010724297\nsample estimates:\n    prop 1     prop 2 \n0.01712887 0.00942285",
    "crumbs": [
      "Tables",
      "table"
    ]
  },
  {
    "objectID": "tables/table1.html",
    "href": "tables/table1.html",
    "title": "table1",
    "section": "",
    "text": "library(table1)",
    "crumbs": [
      "Tables",
      "table1"
    ]
  },
  {
    "objectID": "tables/table1.html#data-1",
    "href": "tables/table1.html#data-1",
    "title": "table1",
    "section": "1 Data 1",
    "text": "1 Data 1\n\nlibrary(boot)\nmelanoma2 &lt;- melanoma\nstr(melanoma2)\n\n'data.frame':   205 obs. of  7 variables:\n $ time     : num  10 30 35 99 185 204 210 232 232 279 ...\n $ status   : num  3 3 2 3 1 1 1 3 1 1 ...\n $ sex      : num  1 1 1 0 1 1 1 0 1 0 ...\n $ age      : num  76 56 41 71 52 28 77 60 49 68 ...\n $ year     : num  1972 1968 1977 1968 1965 ...\n $ thickness: num  6.76 0.65 1.34 2.9 12.08 ...\n $ ulcer    : num  1 0 0 0 1 1 1 1 1 1 ...\n\nhead(melanoma2)\n\n  time status sex age year thickness ulcer\n1   10      3   1  76 1972      6.76     1\n2   30      3   1  56 1968      0.65     0\n3   35      2   1  41 1977      1.34     0\n4   99      3   0  71 1968      2.90     0\n5  185      1   1  52 1965     12.08     1\n6  204      1   1  28 1971      4.84     1\n\nmelanoma2$status &lt;- \n  factor(melanoma2$status, \n         levels=c(2,1,3),\n         labels=c(\"Alive\", # Reference\n                  \"Melanoma death\",\n                  \"Non-melanoma death\"))\n\n\n1.1 table1\n\ntable1(~ factor(sex)+age+factor(ulcer)+thickness| status, data=melanoma2)\n\n\n\n\n\n\n\n\n\n\n\n\n\nAlive\n(N=134)\nMelanoma death\n(N=57)\nNon-melanoma death\n(N=14)\nOverall\n(N=205)\n\n\n\n\nfactor(sex)\n\n\n\n\n\n\n0\n91 (67.9%)\n28 (49.1%)\n7 (50.0%)\n126 (61.5%)\n\n\n1\n43 (32.1%)\n29 (50.9%)\n7 (50.0%)\n79 (38.5%)\n\n\nage\n\n\n\n\n\n\nMean (SD)\n50.0 (15.9)\n55.1 (17.9)\n65.3 (10.9)\n52.5 (16.7)\n\n\nMedian [Min, Max]\n52.0 [4.00, 84.0]\n56.0 [14.0, 95.0]\n65.0 [49.0, 86.0]\n54.0 [4.00, 95.0]\n\n\nfactor(ulcer)\n\n\n\n\n\n\n0\n92 (68.7%)\n16 (28.1%)\n7 (50.0%)\n115 (56.1%)\n\n\n1\n42 (31.3%)\n41 (71.9%)\n7 (50.0%)\n90 (43.9%)\n\n\nthickness\n\n\n\n\n\n\nMean (SD)\n2.24 (2.33)\n4.31 (3.57)\n3.72 (3.63)\n2.92 (2.96)\n\n\nMedian [Min, Max]\n1.36 [0.100, 12.9]\n3.54 [0.320, 17.4]\n2.26 [0.160, 12.6]\n1.94 [0.100, 17.4]\n\n\n\n\n\n\n\n|"
  },
  {
    "objectID": "tables/table1.html#data-1---df",
    "href": "tables/table1.html#data-1---df",
    "title": "table1",
    "section": "1 Data 1 - df",
    "text": "1 Data 1 - df\n\nlibrary(boot)\nmelanoma2 &lt;- melanoma\nstr(melanoma2)\n\n'data.frame':   205 obs. of  7 variables:\n $ time     : num  10 30 35 99 185 204 210 232 232 279 ...\n $ status   : num  3 3 2 3 1 1 1 3 1 1 ...\n $ sex      : num  1 1 1 0 1 1 1 0 1 0 ...\n $ age      : num  76 56 41 71 52 28 77 60 49 68 ...\n $ year     : num  1972 1968 1977 1968 1965 ...\n $ thickness: num  6.76 0.65 1.34 2.9 12.08 ...\n $ ulcer    : num  1 0 0 0 1 1 1 1 1 1 ...\n\nhead(melanoma2)\n\n  time status sex age year thickness ulcer\n1   10      3   1  76 1972      6.76     1\n2   30      3   1  56 1968      0.65     0\n3   35      2   1  41 1977      1.34     0\n4   99      3   0  71 1968      2.90     0\n5  185      1   1  52 1965     12.08     1\n6  204      1   1  28 1971      4.84     1\n\nmelanoma2$status &lt;- \n  factor(melanoma2$status, \n         levels=c(2,1,3),\n         labels=c(\"Alive\", # Reference\n                  \"Melanoma\", \n                  \"Non-melanoma\"))\n\nmelanoma2$sex &lt;- \n  factor(melanoma2$sex, levels=c(1,0),\n         labels=c(\"Male\",\"Female\"))\n\nmelanoma2$ulcer &lt;-\n  factor(melanoma2$ulcer, levels=c(0,1),\n         labels=c(\"Absent\", \n                  \"Present\"))\n\nlabel(melanoma2$sex)       &lt;- \"Sex\"\nlabel(melanoma2$age)       &lt;- \"Age\"\nlabel(melanoma2$ulcer)     &lt;- \"Ulceration\"\nlabel(melanoma2$thickness) &lt;- \"Thicknessᵃ\"\n\nunits(melanoma2$age)       &lt;- \"years\"\nunits(melanoma2$thickness) &lt;- \"mm\"\n\ncaption &lt;- \"Basic Stats\"\nfootnote &lt;- \"ᵃ Also known as Breslow thickness\"\n\n\n1.1 table1\n\ntable1(~ sex + age + ulcer + thickness | status, data=melanoma2,\n    overall=c(left=\"Total\"), caption=caption, footnote=footnote)\n\nBasic Stats\n\n\n\n\nTotal(N=205)\nAlive(N=134)\nMelanoma(N=57)\nNon-melanoma(N=14)\n\nᵃ Also known as Breslow thickness\n\n\n\n\nSex\n\n\n\n\n\n\nMale\n79 (38.5%)\n43 (32.1%)\n29 (50.9%)\n7 (50.0%)\n\n\nFemale\n126 (61.5%)\n91 (67.9%)\n28 (49.1%)\n7 (50.0%)\n\n\nAge (years)\n\n\n\n\n\n\nMean (SD)\n52.5 (16.7)\n50.0 (15.9)\n55.1 (17.9)\n65.3 (10.9)\n\n\nMedian [Min, Max]\n54.0 [4.00, 95.0]\n52.0 [4.00, 84.0]\n56.0 [14.0, 95.0]\n65.0 [49.0, 86.0]\n\n\nUlceration\n\n\n\n\n\n\nAbsent\n115 (56.1%)\n92 (68.7%)\n16 (28.1%)\n7 (50.0%)\n\n\nPresent\n90 (43.9%)\n42 (31.3%)\n41 (71.9%)\n7 (50.0%)\n\n\nThicknessᵃ (mm)\n\n\n\n\n\n\nMean (SD)\n2.92 (2.96)\n2.24 (2.33)\n4.31 (3.57)\n3.72 (3.63)\n\n\nMedian [Min, Max]\n1.94 [0.100, 17.4]\n1.36 [0.100, 12.9]\n3.54 [0.320, 17.4]\n2.26 [0.160, 12.6]",
    "crumbs": [
      "Tables",
      "table1"
    ]
  },
  {
    "objectID": "tables/table1.html#data-2--",
    "href": "tables/table1.html#data-2--",
    "title": "table1",
    "section": "2 Data 2 -",
    "text": "2 Data 2 -\n\nlibrary(survival)\n\ndat &lt;- subset(survival::pbc, !is.na(trt))  # Exclude subjects not randomized\n\ndat$trt     &lt;- factor(dat$trt, levels=1:2, labels=c(\"D-penicillamine\", \"Placebo\"))\ndat$sex     &lt;- factor(dat$sex, levels=c(\"m\", \"f\"), labels=c(\"Male\", \"Female\"))\ndat$stage   &lt;- factor(dat$stage, levels=1:4, labels=paste(\"Stage\", 1:4))\ndat$edema   &lt;- factor(dat$edema, levels=c(0, 0.5, 1),\n                      labels=c(\"No edema\",\n                               \"Untreated or successfully treated\",\n                               \"Edema despite diuretic therapy\"))\ndat$spiders &lt;- as.logical(dat$spiders)\ndat$hepato  &lt;- as.logical(dat$hepato)\ndat$ascites &lt;- as.logical(dat$ascites)\n\nlabel(dat$age)      &lt;- \"Age (y)\"\nlabel(dat$sex)      &lt;- \"Sex\"\nlabel(dat$stage)    &lt;- \"Histologic stage of disease\"\nlabel(dat$edema)    &lt;- \"Edema status\"\nlabel(dat$spiders)  &lt;- \"Blood vessel malformations in the skin\"\nlabel(dat$hepato)   &lt;- \"Presence of hepatomegaly or enlarged liver\"\nlabel(dat$ascites)  &lt;- \"Presence of ascites\"\nlabel(dat$platelet) &lt;- \"Platelet count (&times; 10&lt;sup&gt;9&lt;/sup&gt; per liter)\"\nlabel(dat$protime)  &lt;- \"Standardised blood clotting time\"\nlabel(dat$albumin)  &lt;- \"Serum albumin (g/dL)\"\nlabel(dat$alk.phos) &lt;- \"Alkaline phosphotase (U/L)\"\nlabel(dat$ast)      &lt;- \"Aspartate aminotransferase (U/mL)\"\nlabel(dat$bili)     &lt;- \"Serum bilirubin (mg/dL)\"\nlabel(dat$chol)     &lt;- \"Serum cholesterol (mg/dL)\"\nlabel(dat$copper)   &lt;- \"Urine copper (&mu;g/day)\"\nlabel(dat$trig)     &lt;- \"Triglycerides (mg/dL)\"\n\ntable1(~ age + sex + stage + edema + spiders + hepato + ascites +\n         platelet + protime + albumin + alk.phos + ast + bili + chol +\n         copper + trig | trt, data=dat)\n\n\n\n\n\n\n\n\n\n\n\n\nD-penicillamine\n(N=158)\nPlacebo\n(N=154)\nOverall\n(N=312)\n\n\n\n\nAge (y)\n\n\n\n\n\nMean (SD)\n51.4 (11.0)\n48.6 (9.96)\n50.0 (10.6)\n\n\nMedian [Min, Max]\n51.9 [26.3, 78.4]\n48.1 [30.6, 74.5]\n49.8 [26.3, 78.4]\n\n\nSex\n\n\n\n\n\nMale\n21 (13.3%)\n15 (9.7%)\n36 (11.5%)\n\n\nFemale\n137 (86.7%)\n139 (90.3%)\n276 (88.5%)\n\n\nHistologic stage of disease\n\n\n\n\n\nStage 1\n12 (7.6%)\n4 (2.6%)\n16 (5.1%)\n\n\nStage 2\n35 (22.2%)\n32 (20.8%)\n67 (21.5%)\n\n\nStage 3\n56 (35.4%)\n64 (41.6%)\n120 (38.5%)\n\n\nStage 4\n55 (34.8%)\n54 (35.1%)\n109 (34.9%)\n\n\nEdema status\n\n\n\n\n\nNo edema\n132 (83.5%)\n131 (85.1%)\n263 (84.3%)\n\n\nUntreated or successfully treated\n16 (10.1%)\n13 (8.4%)\n29 (9.3%)\n\n\nEdema despite diuretic therapy\n10 (6.3%)\n10 (6.5%)\n20 (6.4%)\n\n\nBlood vessel malformations in the skin\n\n\n\n\n\nYes\n45 (28.5%)\n45 (29.2%)\n90 (28.8%)\n\n\nNo\n113 (71.5%)\n109 (70.8%)\n222 (71.2%)\n\n\nPresence of hepatomegaly or enlarged liver\n\n\n\n\n\nYes\n73 (46.2%)\n87 (56.5%)\n160 (51.3%)\n\n\nNo\n85 (53.8%)\n67 (43.5%)\n152 (48.7%)\n\n\nPresence of ascites\n\n\n\n\n\nYes\n14 (8.9%)\n10 (6.5%)\n24 (7.7%)\n\n\nNo\n144 (91.1%)\n144 (93.5%)\n288 (92.3%)\n\n\nPlatelet count (× 109 per liter)\n\n\n\n\n\nMean (SD)\n259 (100)\n265 (90.7)\n262 (95.6)\n\n\nMedian [Min, Max]\n255 [62.0, 563]\n260 [71.0, 487]\n257 [62.0, 563]\n\n\nMissing\n2 (1.3%)\n2 (1.3%)\n4 (1.3%)\n\n\nStandardised blood clotting time\n\n\n\n\n\nMean (SD)\n10.7 (0.851)\n10.8 (1.14)\n10.7 (1.00)\n\n\nMedian [Min, Max]\n10.6 [9.00, 14.1]\n10.6 [9.20, 17.1]\n10.6 [9.00, 17.1]\n\n\nSerum albumin (g/dL)\n\n\n\n\n\nMean (SD)\n3.52 (0.443)\n3.52 (0.396)\n3.52 (0.420)\n\n\nMedian [Min, Max]\n3.57 [2.10, 4.64]\n3.55 [1.96, 4.38]\n3.55 [1.96, 4.64]\n\n\nAlkaline phosphotase (U/L)\n\n\n\n\n\nMean (SD)\n2020 (2180)\n1940 (2100)\n1980 (2140)\n\n\nMedian [Min, Max]\n1210 [369, 11600]\n1280 [289, 13900]\n1260 [289, 13900]\n\n\nAspartate aminotransferase (U/mL)\n\n\n\n\n\nMean (SD)\n120 (54.5)\n125 (58.9)\n123 (56.7)\n\n\nMedian [Min, Max]\n112 [26.4, 338]\n117 [28.4, 457]\n115 [26.4, 457]\n\n\nSerum bilirubin (mg/dL)\n\n\n\n\n\nMean (SD)\n2.87 (3.63)\n3.65 (5.28)\n3.26 (4.53)\n\n\nMedian [Min, Max]\n1.40 [0.300, 20.0]\n1.30 [0.300, 28.0]\n1.35 [0.300, 28.0]\n\n\nSerum cholesterol (mg/dL)\n\n\n\n\n\nMean (SD)\n365 (210)\n374 (252)\n370 (232)\n\n\nMedian [Min, Max]\n316 [127, 1710]\n304 [120, 1780]\n310 [120, 1780]\n\n\nMissing\n18 (11.4%)\n10 (6.5%)\n28 (9.0%)\n\n\nUrine copper (μg/day)\n\n\n\n\n\nMean (SD)\n97.6 (90.6)\n97.7 (80.5)\n97.6 (85.6)\n\n\nMedian [Min, Max]\n73.0 [9.00, 588]\n73.0 [4.00, 558]\n73.0 [4.00, 588]\n\n\nMissing\n1 (0.6%)\n1 (0.6%)\n2 (0.6%)\n\n\nTriglycerides (mg/dL)\n\n\n\n\n\nMean (SD)\n124 (71.5)\n125 (58.5)\n125 (65.1)\n\n\nMedian [Min, Max]\n106 [33.0, 598]\n113 [44.0, 432]\n108 [33.0, 598]\n\n\nMissing\n19 (12.0%)\n11 (7.1%)\n30 (9.6%)",
    "crumbs": [
      "Tables",
      "table1"
    ]
  },
  {
    "objectID": "tables/table1.html#data-2---dat",
    "href": "tables/table1.html#data-2---dat",
    "title": "table1",
    "section": "2 Data 2 - dat",
    "text": "2 Data 2 - dat\n\nlibrary(survival)\n\ndat &lt;- subset(survival::pbc, !is.na(trt))  # Exclude subjects not randomized\n\ndat$trt     &lt;- factor(dat$trt, levels=1:2, labels=c(\"D-penicillamine\", \"Placebo\"))\ndat$sex     &lt;- factor(dat$sex, levels=c(\"m\", \"f\"), labels=c(\"Male\", \"Female\"))\ndat$stage   &lt;- factor(dat$stage, levels=1:4, labels=paste(\"Stage\", 1:4))\ndat$edema   &lt;- factor(dat$edema, levels=c(0, 0.5, 1),\n                      labels=c(\"No edema\",\n                               \"Untreated or successfully treated\",\n                               \"Edema despite diuretic therapy\"))\ndat$spiders &lt;- as.logical(dat$spiders)\ndat$hepato  &lt;- as.logical(dat$hepato)\ndat$ascites &lt;- as.logical(dat$ascites)\n\nlabel(dat$age)      &lt;- \"Age (y)\"\nlabel(dat$sex)      &lt;- \"Sex\"\nlabel(dat$stage)    &lt;- \"Histologic stage of disease\"\nlabel(dat$edema)    &lt;- \"Edema status\"\nlabel(dat$spiders)  &lt;- \"Blood vessel malformations in the skin\"\nlabel(dat$hepato)   &lt;- \"Presence of hepatomegaly or enlarged liver\"\nlabel(dat$ascites)  &lt;- \"Presence of ascites\"\nlabel(dat$platelet) &lt;- \"Platelet count (&times; 10&lt;sup&gt;9&lt;/sup&gt; per liter)\"\nlabel(dat$protime)  &lt;- \"Standardised blood clotting time\"\nlabel(dat$albumin)  &lt;- \"Serum albumin (g/dL)\"\nlabel(dat$alk.phos) &lt;- \"Alkaline phosphotase (U/L)\"\nlabel(dat$ast)      &lt;- \"Aspartate aminotransferase (U/mL)\"\nlabel(dat$bili)     &lt;- \"Serum bilirubin (mg/dL)\"\nlabel(dat$chol)     &lt;- \"Serum cholesterol (mg/dL)\"\nlabel(dat$copper)   &lt;- \"Urine copper (&mu;g/day)\"\nlabel(dat$trig)     &lt;- \"Triglycerides (mg/dL)\"\n\ntable1(~ age + sex + stage + edema + spiders + hepato + ascites +\n         platelet + protime + albumin + alk.phos + ast + bili + chol +\n         copper + trig | trt, data=dat)\n\n\n\n\n\n\n\n\n\n\n\n\nD-penicillamine\n(N=158)\nPlacebo\n(N=154)\nOverall\n(N=312)\n\n\n\n\nAge (y)\n\n\n\n\n\nMean (SD)\n51.4 (11.0)\n48.6 (9.96)\n50.0 (10.6)\n\n\nMedian [Min, Max]\n51.9 [26.3, 78.4]\n48.1 [30.6, 74.5]\n49.8 [26.3, 78.4]\n\n\nSex\n\n\n\n\n\nMale\n21 (13.3%)\n15 (9.7%)\n36 (11.5%)\n\n\nFemale\n137 (86.7%)\n139 (90.3%)\n276 (88.5%)\n\n\nHistologic stage of disease\n\n\n\n\n\nStage 1\n12 (7.6%)\n4 (2.6%)\n16 (5.1%)\n\n\nStage 2\n35 (22.2%)\n32 (20.8%)\n67 (21.5%)\n\n\nStage 3\n56 (35.4%)\n64 (41.6%)\n120 (38.5%)\n\n\nStage 4\n55 (34.8%)\n54 (35.1%)\n109 (34.9%)\n\n\nEdema status\n\n\n\n\n\nNo edema\n132 (83.5%)\n131 (85.1%)\n263 (84.3%)\n\n\nUntreated or successfully treated\n16 (10.1%)\n13 (8.4%)\n29 (9.3%)\n\n\nEdema despite diuretic therapy\n10 (6.3%)\n10 (6.5%)\n20 (6.4%)\n\n\nBlood vessel malformations in the skin\n\n\n\n\n\nYes\n45 (28.5%)\n45 (29.2%)\n90 (28.8%)\n\n\nNo\n113 (71.5%)\n109 (70.8%)\n222 (71.2%)\n\n\nPresence of hepatomegaly or enlarged liver\n\n\n\n\n\nYes\n73 (46.2%)\n87 (56.5%)\n160 (51.3%)\n\n\nNo\n85 (53.8%)\n67 (43.5%)\n152 (48.7%)\n\n\nPresence of ascites\n\n\n\n\n\nYes\n14 (8.9%)\n10 (6.5%)\n24 (7.7%)\n\n\nNo\n144 (91.1%)\n144 (93.5%)\n288 (92.3%)\n\n\nPlatelet count (× 109 per liter)\n\n\n\n\n\nMean (SD)\n259 (100)\n265 (90.7)\n262 (95.6)\n\n\nMedian [Min, Max]\n255 [62.0, 563]\n260 [71.0, 487]\n257 [62.0, 563]\n\n\nMissing\n2 (1.3%)\n2 (1.3%)\n4 (1.3%)\n\n\nStandardised blood clotting time\n\n\n\n\n\nMean (SD)\n10.7 (0.851)\n10.8 (1.14)\n10.7 (1.00)\n\n\nMedian [Min, Max]\n10.6 [9.00, 14.1]\n10.6 [9.20, 17.1]\n10.6 [9.00, 17.1]\n\n\nSerum albumin (g/dL)\n\n\n\n\n\nMean (SD)\n3.52 (0.443)\n3.52 (0.396)\n3.52 (0.420)\n\n\nMedian [Min, Max]\n3.57 [2.10, 4.64]\n3.55 [1.96, 4.38]\n3.55 [1.96, 4.64]\n\n\nAlkaline phosphotase (U/L)\n\n\n\n\n\nMean (SD)\n2020 (2180)\n1940 (2100)\n1980 (2140)\n\n\nMedian [Min, Max]\n1210 [369, 11600]\n1280 [289, 13900]\n1260 [289, 13900]\n\n\nAspartate aminotransferase (U/mL)\n\n\n\n\n\nMean (SD)\n120 (54.5)\n125 (58.9)\n123 (56.7)\n\n\nMedian [Min, Max]\n112 [26.4, 338]\n117 [28.4, 457]\n115 [26.4, 457]\n\n\nSerum bilirubin (mg/dL)\n\n\n\n\n\nMean (SD)\n2.87 (3.63)\n3.65 (5.28)\n3.26 (4.53)\n\n\nMedian [Min, Max]\n1.40 [0.300, 20.0]\n1.30 [0.300, 28.0]\n1.35 [0.300, 28.0]\n\n\nSerum cholesterol (mg/dL)\n\n\n\n\n\nMean (SD)\n365 (210)\n374 (252)\n370 (232)\n\n\nMedian [Min, Max]\n316 [127, 1710]\n304 [120, 1780]\n310 [120, 1780]\n\n\nMissing\n18 (11.4%)\n10 (6.5%)\n28 (9.0%)\n\n\nUrine copper (μg/day)\n\n\n\n\n\nMean (SD)\n97.6 (90.6)\n97.7 (80.5)\n97.6 (85.6)\n\n\nMedian [Min, Max]\n73.0 [9.00, 588]\n73.0 [4.00, 558]\n73.0 [4.00, 588]\n\n\nMissing\n1 (0.6%)\n1 (0.6%)\n2 (0.6%)\n\n\nTriglycerides (mg/dL)\n\n\n\n\n\nMean (SD)\n124 (71.5)\n125 (58.5)\n125 (65.1)\n\n\nMedian [Min, Max]\n106 [33.0, 598]\n113 [44.0, 432]\n108 [33.0, 598]\n\n\nMissing\n19 (12.0%)\n11 (7.1%)\n30 (9.6%)",
    "crumbs": [
      "Tables",
      "table1"
    ]
  },
  {
    "objectID": "datasets/datasets.html#baser-datasets",
    "href": "datasets/datasets.html#baser-datasets",
    "title": "WebR",
    "section": "",
    "text": "library(datasets)\ndata()",
    "crumbs": [
      "DataSets",
      "DataSets"
    ]
  },
  {
    "objectID": "datatypes/numbers.html#numeric",
    "href": "datatypes/numbers.html#numeric",
    "title": "numbers",
    "section": "",
    "text": "# default is double\na &lt;- 2+3\nclass(a)\n\n[1] \"numeric\"\n\ntypeof(a)\n\n[1] \"double\"\n\nstr(a)\n\n num 5\n\n\n\n\n\n\n# convert with as.integer\na1 &lt;- as.integer(a)\nclass(a1)\n\n[1] \"integer\"\n\ntypeof(a1)\n\n[1] \"integer\"\n\nstr(a1)\n\n int 5\n\n# add L if you want integer\nb &lt;- 2L + 3L\ntypeof(b)\n\n[1] \"integer\"\n\n\n\n\n\n\n# float-decimals\nc &lt;- pi/3\nc(c,typeof(c))\n\n[1] \"1.0471975511966\" \"double\"         \n\nstr(c)\n\n num 1.05",
    "crumbs": [
      "Datatypes",
      "numbers"
    ]
  },
  {
    "objectID": "datatypes/numbers.html#sequence-of-numbers",
    "href": "datatypes/numbers.html#sequence-of-numbers",
    "title": "numbers",
    "section": "2 Sequence of numbers",
    "text": "2 Sequence of numbers\n\n# ascending sequence\nseq(1:12)\n\n [1]  1  2  3  4  5  6  7  8  9 10 11 12\n\n# or descending\nseq(from=12, to=1)\n\n [1] 12 11 10  9  8  7  6  5  4  3  2  1\n\n# by increments of 2\nseq(from=1,to=12, by=2)\n\n[1]  1  3  5  7  9 11\n\n# or\nseq(1,12,2)\n\n[1]  1  3  5  7  9 11\n\n# have 5 divisions\nseq(from=1, to=12, length.out=5)\n\n[1]  1.00  3.75  6.50  9.25 12.00",
    "crumbs": [
      "Datatypes",
      "numbers"
    ]
  },
  {
    "objectID": "datatypes/numbers.html#order-and-rank",
    "href": "datatypes/numbers.html#order-and-rank",
    "title": "numbers",
    "section": "3 Order and Rank",
    "text": "3 Order and Rank\n\nv &lt;- c(10,3,22,45,50,40)\nsortv &lt;- sort(v)\nv\n\n[1] 10  3 22 45 50 40\n\nsortv\n\n[1]  3 10 22 40 45 50\n\no &lt;- order(v) # returns the \"indices\" of the vector when sorted\n\nr &lt;- rank(v) # tells you the rank order of the numbers\nr\n\n[1] 2 1 3 5 6 4",
    "crumbs": [
      "Datatypes",
      "numbers"
    ]
  },
  {
    "objectID": "datatypes/strings.html#stringr-functions",
    "href": "datatypes/strings.html#stringr-functions",
    "title": "Strings",
    "section": "2 stringr functions",
    "text": "2 stringr functions\n\n2.1 merge 2 strings - concat\n\n# str_c to concat strings\ns2 &lt;- str_c(s1,  \" ALREADY\") |&gt; print()\n\n[1] \"I ate ALREADY\"\n\n\n\n\n2.2 string properties\n\n# lowercase\nstr_to_lower(s2)\n\n[1] \"i ate already\"\n\nstr_length(s2)\n\n[1] 13\n\n\n\n\n2.3 str_trim, str_replace_all\n\n# removes trailing spaces\ns3 &lt;- str_trim(s2, side=\"both\")\ns3\n\n[1] \"I ate ALREADY\"\n\n# removes all spaces\ns4 &lt;- str_replace_all(s2, \"[ ]\",\"\")\ns4\n\n[1] \"IateALREADY\"\n\n\n\n\n\n2.4 strsplit (returns a list)\n\n# output of website crawling\nt0 &lt;- \"gets%better%every%day\"\nt1 &lt;- strsplit(t0,split='%')\nt1\n\n[[1]]\n[1] \"gets\"   \"better\" \"every\"  \"day\"   \n\ntypeof(t1)\n\n[1] \"list\"\n\n\n\n\n2.5 split into chars\n\n# split= may be omitted\nu0 &lt;- c(\"The quick brown fox jumps over the lazy dog\")\nu1 &lt;- strsplit(u0,\"\")\nu1\n\n[[1]]\n [1] \"T\" \"h\" \"e\" \" \" \"q\" \"u\" \"i\" \"c\" \"k\" \" \" \"b\" \"r\" \"o\" \"w\" \"n\" \" \" \"f\" \"o\" \"x\"\n[20] \" \" \"j\" \"u\" \"m\" \"p\" \"s\" \" \" \"o\" \"v\" \"e\" \"r\" \" \" \"t\" \"h\" \"e\" \" \" \"l\" \"a\" \"z\"\n[39] \"y\" \" \" \"d\" \"o\" \"g\"\n\n\n\n\n2.6 split into words\n\nu2 &lt;- strsplit(u0, \" \")\nu2\n\n[[1]]\n[1] \"The\"   \"quick\" \"brown\" \"fox\"   \"jumps\" \"over\"  \"the\"   \"lazy\"  \"dog\"  \n\n\n\n\n2.7 regex can be used in strsplit\n\nv0 &lt;- \"all16i5need6is4a%long8vacation\"\nv1 &lt;- strsplit(v0,\"[0-9,%]+\")\nv1\n\n[[1]]\n[1] \"all\"      \"i\"        \"need\"     \"is\"       \"a\"        \"long\"     \"vacation\"",
    "crumbs": [
      "Datatypes",
      "strings"
    ]
  },
  {
    "objectID": "datatypes/strings.html#sequences",
    "href": "datatypes/strings.html#sequences",
    "title": "Strings",
    "section": "3 Sequences",
    "text": "3 Sequences\n\nletters[seq( from = 1, to = 10 )]\n\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\"\n\nLETTERS[seq(from=1,to=10,by=2)]\n\n[1] \"A\" \"C\" \"E\" \"G\" \"I\"\n\nletters[1:26]\n\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\"\n\n\n\n3.1 Order and Rank\n\nl &lt;- c(\"F\",\"A\",\"C\",\"E\")\nl\n\n[1] \"F\" \"A\" \"C\" \"E\"\n\no &lt;- order(l) |&gt; print()\n\n[1] 2 3 4 1\n\nl[o]\n\n[1] \"A\" \"C\" \"E\" \"F\"\n\nr &lt;- rank(l) |&gt; print()\n\n[1] 4 1 2 3",
    "crumbs": [
      "Datatypes",
      "strings"
    ]
  },
  {
    "objectID": "dataframes/flextable.html",
    "href": "dataframes/flextable.html",
    "title": "flexTable",
    "section": "",
    "text": "flextable takes a data.frame and returns a flextable. flextable also allows you to merge cells, add header rows, add footer rows, change all formatting and specify how data should be displayed in cells. Table contents can also contain a mix of content types such as text and images.",
    "crumbs": [
      "DataFrames",
      "flextable"
    ]
  },
  {
    "objectID": "dataframes/flextable.html#library",
    "href": "dataframes/flextable.html#library",
    "title": "flexTable",
    "section": "Library",
    "text": "Library\n\nlibrary(tidyverse)\nlibrary(flextable)",
    "crumbs": [
      "DataFrames",
      "flextable"
    ]
  },
  {
    "objectID": "dataframes/flextable.html#data1---tibble",
    "href": "dataframes/flextable.html#data1---tibble",
    "title": "flexTable",
    "section": "Data1 - tibble",
    "text": "Data1 - tibble\n\n\nCode\ntb &lt;- tibble::enframe(islands) %&gt;% slice_max(value, n=5)\ntb     \n\n\n# A tibble: 5 × 2\n  name          value\n  &lt;chr&gt;         &lt;dbl&gt;\n1 Asia          16988\n2 Africa        11506\n3 North America  9390\n4 South America  6795\n5 Antarctica     5500\n\n\n\nFlextable\n\n# | tbl-cap: \"Landmass of Top 5 Continents\"\nft &lt;- tb |&gt; flextable(cwidth=c(2,1)) |&gt; theme_box()\nft\n\nLandmass of Top 5 ContinentsnamevalueAsia16,988Africa11,506North America9,390South America6,795Antarctica5,500",
    "crumbs": [
      "DataFrames",
      "flextable"
    ]
  },
  {
    "objectID": "dataframes/flextable.html#data2---dataframe",
    "href": "dataframes/flextable.html#data2---dataframe",
    "title": "flexTable",
    "section": "Data2 - dataframe",
    "text": "Data2 - dataframe\n\ndf &lt;- read.table(header=TRUE, text=\"\n          Group Yes No\n          Placebo 189 10845\n          Aspirin 104 10933 \")\ndf\n\n    Group Yes    No\n1 Placebo 189 10845\n2 Aspirin 104 10933\n\n\n\nFlextable\n\nft &lt;- flextable(df)\nft \n\nCross ClassificationGroupYesNoPlacebo18910,845Aspirin10410,933",
    "crumbs": [
      "DataFrames",
      "flextable"
    ]
  },
  {
    "objectID": "dataframes/gt.html",
    "href": "dataframes/gt.html",
    "title": "gt",
    "section": "",
    "text": "gt() formats tables out of dataframes and tibbles\n\n\n\n\n\nLibrary\n\nlibrary(tidyverse)\nlibrary(gt)\n\n\n\nData\n\n\nCode\n# islands is a named vector (continental land mass)\n# we convert it to a tibble using enframe and\n# select top five islands\n\ntbl&lt;-tibble::enframe(islands) %&gt;% slice_max(value, n=5)\ntbl\n\n\n# A tibble: 5 × 2\n  name          value\n  &lt;chr&gt;         &lt;dbl&gt;\n1 Asia          16988\n2 Africa        11506\n3 North America  9390\n4 South America  6795\n5 Antarctica     5500\n\n\n\n\nBasic gt on tibble\n\n# basic gt table\ngt(tbl) |&gt;\n  tab_header(\n    title = md(\"Landmasses of the World\")) |&gt;\n  tab_caption(\n    caption= md(\"Top 5 selected\")) |&gt;\n  fmt_number(sep_mark=\",\",decimals=0)\n\n\n\n\n\nTop 5 selected\n\n\nLandmasses of the World\n\n\nname\nvalue\n\n\n\n\nAsia\n16,988\n\n\nAfrica\n11,506\n\n\nNorth America\n9,390\n\n\nSouth America\n6,795\n\n\nAntarctica\n5,500\n\n\n\n\n\n\n\n\n\ngt on data.frame\n\ndf &lt;- read.table(header=TRUE, text=\"\n          Group Yes No\n          Placebo 189 10845\n          Aspirin 104 10933 \")\ndf\n\n    Group Yes    No\n1 Placebo 189 10845\n2 Aspirin 104 10933\n\ngt(df) |&gt;\n  tab_header(\n    title=md(\"Cross classification\"),\n    subtitle=md(\"Aspirin use and myocardial infarction\")\n  ) |&gt;\n  tab_spanner(\n    label = \"Mycardial Infarction\",\n    columns = c(Yes, No)\n  ) \n\n\n\n\n\n\n\n\n\n\n\n\nCross classification\n\n\nAspirin use and myocardial infarction\n\n\nGroup\n\nMycardial Infarction\n\n\n\nYes\nNo\n\n\n\n\nPlacebo\n189\n10845\n\n\nAspirin\n104\n10933",
    "crumbs": [
      "DataFrames",
      "gt"
    ]
  },
  {
    "objectID": "yaml.html#yaml---default",
    "href": "yaml.html#yaml---default",
    "title": "yaml",
    "section": "",
    "text": "---\ntitle: \"yaml\"\nformat: html\nnumber-sections: true\nwarning: false\n---",
    "crumbs": [
      "Preface",
      "yaml"
    ]
  },
  {
    "objectID": "yaml.html#yaml---extended-pdf",
    "href": "yaml.html#yaml---extended-pdf",
    "title": "yaml",
    "section": "2 yaml - extended pdf",
    "text": "2 yaml - extended pdf\ntitle: \"yaml\"\nformat:\n  html: default\n  pdf: \n    pagesize: A4\n    include-in-header:\n      text: |\n        \\usepackage{scrlayer-scrpage}\n        \\rohead{\"yaml\"}\nnumber-sections: true\nwarning: false",
    "crumbs": [
      "Preface",
      "yaml"
    ]
  },
  {
    "objectID": "yaml.html#yaml---default-html",
    "href": "yaml.html#yaml---default-html",
    "title": "yaml",
    "section": "",
    "text": "title: \"yaml\"\nformat: html\nnumber-sections: true\nwarning: false",
    "crumbs": [
      "Preface",
      "yaml"
    ]
  },
  {
    "objectID": "yaml.html#yaml---html",
    "href": "yaml.html#yaml---html",
    "title": "yaml",
    "section": "",
    "text": "title: \"yaml\"\nformat: html\nnumber-sections: true\nwarning: false",
    "crumbs": [
      "Preface",
      "yaml"
    ]
  },
  {
    "objectID": "yaml.html#yaml---with-pdf",
    "href": "yaml.html#yaml---with-pdf",
    "title": "yaml",
    "section": "2 yaml - with pdf",
    "text": "2 yaml - with pdf\ntitle: \"yaml\"\nformat:\n  html: default\n  pdf: \n    pagesize: A4\n    include-in-header:\n      text: |\n        \\usepackage{scrlayer-scrpage}\n        \\rohead{\"yaml\"}\nnumber-sections: true\nwarning: false",
    "crumbs": [
      "Preface",
      "yaml"
    ]
  },
  {
    "objectID": "yaml.html#code-block---yaml-html",
    "href": "yaml.html#code-block---yaml-html",
    "title": "yaml",
    "section": "",
    "text": "title: \"yaml\"\nformat: html\nnumber-sections: true\nwarning: false",
    "crumbs": [
      "Preface",
      "yaml"
    ]
  },
  {
    "objectID": "yaml.html#code-block-r",
    "href": "yaml.html#code-block-r",
    "title": "yaml",
    "section": "2 Code-block R",
    "text": "2 Code-block R\n{r library}\n#| code-fold: TRUE\n#| eval: FALSE\n#| warning: FALSE\n\nlibrary(tidyverse)\nlibrary(gt)\nlibrary(here)\ntheme_set(theme_bw())",
    "crumbs": [
      "Preface",
      "yaml"
    ]
  },
  {
    "objectID": "yaml.html#code-block-yaml-html",
    "href": "yaml.html#code-block-yaml-html",
    "title": "yaml",
    "section": "",
    "text": "title: \"yaml\"\nformat: html\nnumber-sections: true\nwarning: false\n\n\ntitle: \"yaml\"\nformat:\n  html: default\n  pdf: \n    pagesize: A4\n    include-in-header:\n      text: |\n        \\usepackage{scrlayer-scrpage}\n        \\rohead{\"yaml\"}\nnumber-sections: true\nwarning: false",
    "crumbs": [
      "Preface",
      "yaml"
    ]
  },
  {
    "objectID": "yaml.html#code-block-yaml---with-pdf",
    "href": "yaml.html#code-block-yaml---with-pdf",
    "title": "yaml",
    "section": "2 Code-block: yaml - with pdf",
    "text": "2 Code-block: yaml - with pdf\ntitle: \"yaml\"\nformat:\n  html: default\n  pdf: \n    pagesize: A4\n    include-in-header:\n      text: |\n        \\usepackage{scrlayer-scrpage}\n        \\rohead{\"yaml\"}\nnumber-sections: true\nwarning: false",
    "crumbs": [
      "Preface",
      "yaml"
    ]
  },
  {
    "objectID": "yaml.html#code-block-yaml-with-pdf",
    "href": "yaml.html#code-block-yaml-with-pdf",
    "title": "yaml",
    "section": "2 Code-block yaml : with pdf",
    "text": "2 Code-block yaml : with pdf\ntitle: \"yaml\"\nformat:\n  html: default\n  pdf: \n    pagesize: A4\n    include-in-header:\n      text: |\n        \\usepackage{scrlayer-scrpage}\n        \\rohead{\"yaml\"}\nnumber-sections: true\nwarning: false",
    "crumbs": [
      "Preface",
      "yaml"
    ]
  },
  {
    "objectID": "yaml.html#footnote",
    "href": "yaml.html#footnote",
    "title": "yaml",
    "section": "3 Footnote",
    "text": "3 Footnote\nDevore’s book. [^1]\n\n[^1]: Devore, Jay L, Kenneth N Berk, Matthew A Carlton, et al. \n2021. Modern Mathematical Statistics with Applications. \nVol. 285. Springer.\nDevore’s book as a footnote.1\n… the footnote is usually written on the next line but will appear at the bottom of the page as a footnote. This footnote is in QMarkdown. A LaTeX footnote is different and has a separate \\footnote command. Tip: check for extra backslashes if footnote is not working.",
    "crumbs": [
      "Preface",
      "yaml"
    ]
  },
  {
    "objectID": "yaml.html#footnotes",
    "href": "yaml.html#footnotes",
    "title": "yaml",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nDevore, Jay L, Kenneth N Berk, Matthew A Carlton, et al. 2021. Modern Mathematical Statistics with Applications. Vol. 285. Springer.↩︎",
    "crumbs": [
      "Preface",
      "yaml"
    ]
  },
  {
    "objectID": "yaml.html#references",
    "href": "yaml.html#references",
    "title": "yaml",
    "section": "4 References",
    "text": "4 References\nAdd this in the yaml of Reference.qmd, where WebR.bib is the Bibdesk file of BibLaTeX (.bib) references. @* below lists all references.\nbibliography: WebR.bib\nnocite: |\n  @*",
    "crumbs": [
      "Preface",
      "yaml"
    ]
  },
  {
    "objectID": "index.html#other-websites",
    "href": "index.html#other-websites",
    "title": "WebR",
    "section": "1 Other websites",
    "text": "1 Other websites\n\nykwongWebR : R Basics\nykwongWebStats: Mathematical Statistics with R\nykwongWebSurv : Survival Analysis with R",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "wblocks.html",
    "href": "wblocks.html",
    "title": "Blocks in HTML",
    "section": "",
    "text": "{/R Code Chunk}\n\n# normal executable\nqnorm(0.95)\n\n[1] 1.644854\n\n\n\n #| eval: false\nqnorm(0.95)\n\n(No output)",
    "crumbs": [
      "Preface",
      "wblocks"
    ]
  },
  {
    "objectID": "wblocks.html#r-code-chunk",
    "href": "wblocks.html#r-code-chunk",
    "title": "Blocks in HTML",
    "section": "",
    "text": "{/R Code Chunk}\n\n# normal executable\nqnorm(0.95)\n\n[1] 1.644854\n\n\n\n #| eval: false\nqnorm(0.95)\n\n(No output)",
    "crumbs": [
      "Preface",
      "wblocks"
    ]
  },
  {
    "objectID": "wblocks.html#display---code-block",
    "href": "wblocks.html#display---code-block",
    "title": "Blocks in HTML",
    "section": "2 Display - Code block",
    "text": "2 Display - Code block\n{ / Code Block... &lt;source code display&gt; }\n\n2.1 Display R\n# style=\"border:black 1px solid\"\n\nqnorm(0.95)\n\n\n2.2 Display latex\n\\begin{align}\n  \\bar x = \\frac{\\sum x_i}{n} \\\\\n  \\sigma^2\n\\end{align}\n\n\n2.3 Display data default\n{border: black 1px solid; background: white}\n\nSource: Example 8.17 Devore\nData: vector of measurements\n\n22.7 16.3 13.6 16.8 29.9 15.9 14.0 15.0 14.1 18.1 22.8 27.6 \n16.4 16.1 19.0 13.5 18.9 20.2 19.7 18.2 15.4 15.7 19.0 11.5 \n18.4 16.0 16.9 12.0 40.1 19.2",
    "crumbs": [
      "Preface",
      "wblocks"
    ]
  },
  {
    "objectID": "wblocks.html#tex-block-for-latex",
    "href": "wblocks.html#tex-block-for-latex",
    "title": "Blocks in HTML",
    "section": "3 TeX Block for LaTeX",
    "text": "3 TeX Block for LaTeX\n{ / TeX Block... }\n\n3.1 Snippets in tex block\nUse shift-cmd-p and Expand snippet at cursor\n\nFor example: ali*  to expand to \n   \\begin{align*}\n      |\n   \\end{align*}\n\n\n3.2 TeX Block for equations\nSample mean\n\\[\\begin{align*}\n  \\bar x = \\frac{\\sum x_i}{n} \\tag{1.1}\n\\end{align*}\\]\nSample variance\n\\[\\begin{align*}\n  S^2 = \\frac{\\sum (X_i - \\bar X)}{n-1}  \\tag{1.2}\n\\end{align*}\\]\n\n\n3.3 TeX Block - \\boxed equations\nIntegration by parts:\n\\[\\begin{equation}\n  \\boxed{ \\int udv = uv - \\int vdu }\n\\end{equation}\\]\n\\begin{equation}\n  \\boxed{ \\int udv = uv - \\int vdu }\n\\end{equation}\n\n\n3.4 TeX Block - tex-table using array\nExample Collett-Table 2.7\n\\[\\begin{array}{c c c c }\n\\hline\n\\text{Group} & \\text{Number of Deaths} & \\text{Number Surviving} & \\text{Number at Risk} \\\\\n      & \\text{at $t_{(j)}$} & \\text{beyond $t_{(j)}$} & \\text{just before $t_{(j)}$} \\\\\n\\hline\n\\rm{I} & d_{1j} & n_{1j}-d_{1j} & n_{1j} \\\\\n\\rm{II} & d_{2j} & n_{2j}-d_{2j} & n_{2j} \\\\\n\\hline\n\\text{Total} & d_{j} & n_{j}-d_{j} & n_{j} \\\\\n\\hline\n\\end{array}\\]\nnote: tabular not supported, use array to form a tex-table\n\\begin{array}{c c c c } \n\\hline \n\\text{Group} & \\text{Number of Deaths} & \\text{Number Surviving} & \\text{Number at Risk} \\\\ \n      & \\text{at $t_{(j)}$} & \\text{beyond $t_{(j)}$} & \\text{just before $t_{(j)}$} \\\\ \n\\hline\n\\rm{I} & d_{1j} & n_{1j}-d_{1j} & n_{1j} \\\\ \n\\rm{II} & d_{2j} & n_{2j}-d_{2j} & n_{2j} \\\\ \n\\hline\n\\text{Total} & d_{j} & n_{j}-d_{j} & n_{j} \\\\ \n\\hline \n\\end{array}\n\n\n3.5 TeX block with Div block over it\n# div-block - style=border: 1px solid; background:white; padding-right:1cm\n\n\\[\\begin{align}\nSample\\ mean\\\\\n  \\bar x &= \\frac{\\sum x_i}{n} \\tag{1.1}\\\\\n  \nSample\\ variance\\\\\n  S^2 &= \\frac{\\sum (X_i - \\bar X)}{n-1}. \\tag{1.2}\n\\end{align}\\]",
    "crumbs": [
      "Preface",
      "wblocks"
    ]
  },
  {
    "objectID": "wblocks.html#div-block",
    "href": "wblocks.html#div-block",
    "title": "Blocks in HTML",
    "section": "4 Div Block",
    "text": "4 Div Block\n{/ Div... } can format with css html\n\n4.1 Div block - embed TeX\n\n\\[\n\\int udv = uv - \\int vdu\n\\]\n\n\n\n4.2 Div Block - css and padding\n\n\\(\\textbf{Gosset's Theorem}\\)\nIf \\(X_1, X_2, \\ldots, X_n\\) is a random sample from a \\(N(\\mu, \\sigma)\\) distribution, then the rv\n\\[\n\\frac{\\bar X - \\mu}{S/\\sqrt{n}}\n\\]\nhas the t distribution with (n-1) degrees of freedom, \\(t_{n-1}.\\)",
    "crumbs": [
      "Preface",
      "wblocks"
    ]
  },
  {
    "objectID": "index.html#housekeeping",
    "href": "index.html#housekeeping",
    "title": "WebR",
    "section": "2 HouseKeeping",
    "text": "2 HouseKeeping\n\nyaml: html, pdf, footnote and references\nwblocks: code blocks, tex blocks and div blocks",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#websites",
    "href": "index.html#websites",
    "title": "WebR",
    "section": "1 Websites",
    "text": "1 Websites\n\nykwongWebR : R Basics\nykwongWebStats: Mathematical Statistics with R\nykwongWebSurv : Survival Analysis with R\nykwongWebNpar : Non-parametric Statistics with R\nykwongWebLA : Linear Algebra with Julia",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#others",
    "href": "index.html#others",
    "title": "WebR",
    "section": "2 Others",
    "text": "2 Others\n\nyaml: html, pdf, footnote and references\nqblocks: code blocks, tex blocks and div blocks\nqtex: selected tex codes",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "qblocks.html",
    "href": "qblocks.html",
    "title": "Blocks in HTML",
    "section": "",
    "text": "{/R Code Chunk}\n\n# normal executable\nqnorm(0.95)\n\n[1] 1.644854\n\n\n\n #| eval: false\nqnorm(0.95)\n\n(No output)",
    "crumbs": [
      "Preface",
      "qblocks"
    ]
  },
  {
    "objectID": "qblocks.html#r-code-chunk",
    "href": "qblocks.html#r-code-chunk",
    "title": "Blocks in HTML",
    "section": "",
    "text": "{/R Code Chunk}\n\n# normal executable\nqnorm(0.95)\n\n[1] 1.644854\n\n\n\n #| eval: false\nqnorm(0.95)\n\n(No output)",
    "crumbs": [
      "Preface",
      "qblocks"
    ]
  },
  {
    "objectID": "qblocks.html#display---code-block",
    "href": "qblocks.html#display---code-block",
    "title": "Blocks in HTML",
    "section": "2 Display - Code block",
    "text": "2 Display - Code block\n{ / Code Block... &lt;source code display&gt; }\n\n2.1 Display R\n# style=\"border:black 1px solid\"\n\nqnorm(0.95)\n\n\n2.2 Display latex\n\\begin{align}\n  \\bar x = \\frac{\\sum x_i}{n} \\\\\n  \\sigma^2\n\\end{align}\n\n\n2.3 Display data default\n{border: black 1px solid; background: white}\n\nSource: Example 8.17 Devore\nData: vector of measurements\n\n22.7 16.3 13.6 16.8 29.9 15.9 14.0 15.0 14.1 18.1 22.8 27.6 \n16.4 16.1 19.0 13.5 18.9 20.2 19.7 18.2 15.4 15.7 19.0 11.5 \n18.4 16.0 16.9 12.0 40.1 19.2",
    "crumbs": [
      "Preface",
      "qblocks"
    ]
  },
  {
    "objectID": "qblocks.html#tex-block-for-latex",
    "href": "qblocks.html#tex-block-for-latex",
    "title": "Blocks in HTML",
    "section": "3 TeX Block for LaTeX",
    "text": "3 TeX Block for LaTeX\n{ / TeX Block... }\n\n3.1 Snippets in tex block\nUse shift-cmd-p and Expand snippet at cursor\n\nFor example: ali*  to expand to \n   \\begin{align*}\n      |\n   \\end{align*}\n\n\n3.2 TeX Block for equations\nSample mean\n\\[\\begin{align*}\n  \\bar x = \\frac{\\sum x_i}{n} \\tag{1.1}\n\\end{align*}\\]\nSample variance\n\\[\\begin{align*}\n  S^2 = \\frac{\\sum (X_i - \\bar X)}{n-1}  \\tag{1.2}\n\\end{align*}\\]\n\n\n3.3 TeX Block - \\boxed equations\nIntegration by parts:\n\\[\\begin{equation}\n  \\boxed{ \\int udv = uv - \\int vdu }\n\\end{equation}\\]\n\\begin{equation}\n  \\boxed{ \\int udv = uv - \\int vdu }\n\\end{equation}\n\n\n3.4 TeX Block - tex-table using array\nExample Collett-Table 2.7\n\\[\\begin{array}{c c c c }\n\\hline\n\\text{Group} & \\text{Number of Deaths} & \\text{Number Surviving} & \\text{Number at Risk} \\\\\n      & \\text{at $t_{(j)}$} & \\text{beyond $t_{(j)}$} & \\text{just before $t_{(j)}$} \\\\\n\\hline\n\\rm{I} & d_{1j} & n_{1j}-d_{1j} & n_{1j} \\\\\n\\rm{II} & d_{2j} & n_{2j}-d_{2j} & n_{2j} \\\\\n\\hline\n\\text{Total} & d_{j} & n_{j}-d_{j} & n_{j} \\\\\n\\hline\n\\end{array}\\]\nnote: tabular not supported, use array to form a tex-table\n\\begin{array}{c c c c } \n\\hline \n\\text{Group} & \\text{Number of Deaths} & \\text{Number Surviving} & \\text{Number at Risk} \\\\ \n      & \\text{at $t_{(j)}$} & \\text{beyond $t_{(j)}$} & \\text{just before $t_{(j)}$} \\\\ \n\\hline\n\\rm{I} & d_{1j} & n_{1j}-d_{1j} & n_{1j} \\\\ \n\\rm{II} & d_{2j} & n_{2j}-d_{2j} & n_{2j} \\\\ \n\\hline\n\\text{Total} & d_{j} & n_{j}-d_{j} & n_{j} \\\\ \n\\hline \n\\end{array}\n\n\n3.5 TeX block with Div block over it\n# div-block - style=border: 1px solid; background:white; padding-right:1cm\n\n\\[\\begin{align}\nSample\\ mean\\\\\n  \\bar x &= \\frac{\\sum x_i}{n} \\tag{1.1}\\\\\n  \nSample\\ variance\\\\\n  S^2 &= \\frac{\\sum (X_i - \\bar X)}{n-1}. \\tag{1.2}\n\\end{align}\\]",
    "crumbs": [
      "Preface",
      "qblocks"
    ]
  },
  {
    "objectID": "qblocks.html#div-block",
    "href": "qblocks.html#div-block",
    "title": "Blocks in HTML",
    "section": "3 Div Block",
    "text": "3 Div Block\n{/ Div... } can format with css html\n\n3.1 Div block - embed TeX\n\n\\[\n\\int udv = uv - \\int vdu\n\\]\n\n\n\n3.2 Div Block - css and padding\n\n\\(\\textbf{Gosset's Theorem}\\)\nIf \\(X_1, X_2, \\ldots, X_n\\) is a random sample from a \\(N(\\mu, \\sigma)\\) distribution, then the rv\n\\[\n\\frac{\\bar X - \\mu}{S/\\sqrt{n}}\n\\]\nhas the t distribution with (n-1) degrees of freedom, \\(t_{n-1}.\\)",
    "crumbs": [
      "Preface",
      "qblocks"
    ]
  },
  {
    "objectID": "qtex.html",
    "href": "qtex.html",
    "title": "Selected TeX Codes",
    "section": "",
    "text": "(use cmd-shift-p and expand at cursor)\n\nali*\n\nbegin{align*}\n  |\n\\end{align*}\n\narray\n\n\\begin{array}{c c c}\n\\hline\n  |\n\\end{array}",
    "crumbs": [
      "Preface",
      "qtex"
    ]
  },
  {
    "objectID": "qtex.html#selected-tex-codes",
    "href": "qtex.html#selected-tex-codes",
    "title": "Selected Tex Codes",
    "section": "",
    "text": "(use cmd-shift-p and expand at cursor`)\n\nali*\n\nbegin{align*}\n  |\n\\end{align*}\n\narray\n\n\\begin{array}{c c c}\n\\hline\n  |\n\\end{array}"
  },
  {
    "objectID": "qtex.html#tex-snippets",
    "href": "qtex.html#tex-snippets",
    "title": "Selected TeX Codes",
    "section": "",
    "text": "(use cmd-shift-p and expand at cursor)\n\nali*\n\nbegin{align*}\n  |\n\\end{align*}\n\narray\n\n\\begin{array}{c c c}\n\\hline\n  |\n\\end{array}",
    "crumbs": [
      "Preface",
      "qtex"
    ]
  },
  {
    "objectID": "qtex.html#snippets",
    "href": "qtex.html#snippets",
    "title": "Selected Tex Codes",
    "section": "",
    "text": "(use cmd-shift-p and expand at cursor`)\n\nali*\n\nbegin{align*}\n  |\n\\end{align*}\n\narray\n\n\\begin{array}{c c c}\n\\hline\n  |\n\\end{array}"
  },
  {
    "objectID": "qtex.html#equations",
    "href": "qtex.html#equations",
    "title": "Selected TeX Codes",
    "section": "2 Equations",
    "text": "2 Equations\n(\\blacksquare, \\tag, align*, \\\\[12pt] )\nMake the substitution $u = x/\\beta$, so that $x=\\beta u$ and $dx = \\beta du$: \n\\begin{align*}\n    \\int_0^\\infty x^{\\alpha-1}e^{-x/\\beta} dx \n     &=  \\int_0^\\infty (\\beta u)^{\\alpha-1} e^{-u} \\beta du \\\\[12pt]\n   & = \\int_0^\\infty u^{\\alpha-1}e^{-u} du \\\\[12pt]\n   & = \\int_0^\\infty x^{\\alpha-1}e^{-x} dx \\\\[12pt]\n   & = \\Gamma(\\alpha) \\qquad\\blacksquare \\tag{4.5}\n \\end{align*}\nMake the substitution \\(u= x/\\beta\\), so that \\(x=\\beta u\\) and \\(dx = \\beta du\\):\n\\[\\begin{align*}\n    \\int_0^\\infty x^{\\alpha-1}e^{-x/\\beta} dx\n     &=  \\int_0^\\infty (\\beta u)^{\\alpha-1} e^{-u} \\beta du \\\\[12pt]\n   & = \\int_0^\\infty u^{\\alpha-1}e^{-u} du \\\\[12pt]\n   & = \\int_0^\\infty x^{\\alpha-1}e^{-x} dx \\\\[12pt]\n   & = \\Gamma(\\alpha) \\qquad\\blacksquare \\tag{4.5}\n\\end{align*}\\]",
    "crumbs": [
      "Preface",
      "qtex"
    ]
  },
  {
    "objectID": "qtex.html#tables",
    "href": "qtex.html#tables",
    "title": "Selected Tex Codes",
    "section": "3 Tables",
    "text": "3 Tables",
    "crumbs": [
      "Preface",
      "qtex"
    ]
  },
  {
    "objectID": "qtex.html#tex-tables",
    "href": "qtex.html#tex-tables",
    "title": "Selected TeX Codes",
    "section": "3 TeX Tables",
    "text": "3 TeX Tables\n\n3.1 TeX Block - Tex-table using array\nExample Collett 1 - Table 2.7\n\\[\\begin{array}{c c c c }\n\\hline\n\\text{Group} & \\text{Number of Deaths} & \\text{Number Surviving} & \\text{Number at Risk} \\\\\n      & \\text{at $t_{(j)}$} & \\text{beyond $t_{(j)}$} & \\text{just before $t_{(j)}$} \\\\\n\\hline\n\\rm{I} & d_{1j} & n_{1j}-d_{1j} & n_{1j} \\\\\n\\rm{II} & d_{2j} & n_{2j}-d_{2j} & n_{2j} \\\\\n\\hline\n\\text{Total} & d_{j} & n_{j}-d_{j} & n_{j} \\\\\n\\hline\n\\end{array}\\]\nnote: tabular not supported, use array to form a Tex-table\n\\begin{array}{c c c c } \n\\hline \n\\text{Group} & \\text{Number of Deaths} & \\text{Number Surviving} & \\text{Number at Risk} \\\\ \n      & \\text{at $t_{(j)}$} & \\text{beyond $t_{(j)}$} & \\text{just before $t_{(j)}$} \\\\ \n\\hline\n\\rm{I} & d_{1j} & n_{1j}-d_{1j} & n_{1j} \\\\ \n\\rm{II} & d_{2j} & n_{2j}-d_{2j} & n_{2j} \\\\ \n\\hline\n\\text{Total} & d_{j} & n_{j}-d_{j} & n_{j} \\\\ \n\\hline \n\\end{array}\n\n\n3.2 TeX block with Div block over it\n# div-block - style=border: 1px solid; background:white; padding-right:1cm\n\n\\[\\begin{align}\nSample\\ mean\\\\\n  \\bar x &= \\frac{\\sum x_i}{n} \\tag{1.1}\\\\\n  \nSample\\ variance\\\\\n  S^2 &= \\frac{\\sum (X_i - \\bar X)}{n-1}. \\tag{1.2}\n\\end{align}\\]",
    "crumbs": [
      "Preface",
      "qtex"
    ]
  },
  {
    "objectID": "qtex.html#footnotes",
    "href": "qtex.html#footnotes",
    "title": "Selected TeX Codes",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nDevore, Jay L, Kenneth N Berk, Matthew A Carlton, et al. 2021. Modern Mathematical Statistics with Applications. Vol. 285. Springer.↩︎",
    "crumbs": [
      "Preface",
      "qtex"
    ]
  },
  {
    "objectID": "yaml.html#citations",
    "href": "yaml.html#citations",
    "title": "yaml",
    "section": "5 Citations",
    "text": "5 Citations\nCitations can be styled using for example, csl: nature.csl in yaml. The citation is embedded as [@kuhn2022t] giving the output (Kuhn and Silge 2022).",
    "crumbs": [
      "Preface",
      "yaml"
    ]
  },
  {
    "objectID": "qtex.html#equations-in-qmd",
    "href": "qtex.html#equations-in-qmd",
    "title": "Selected TeX Codes",
    "section": "2 Equations in qmd",
    "text": "2 Equations in qmd\n(\\blacksquare, \\tag, align*, \\\\[12pt] )\nMake the substitution $u = x/\\beta$, so that $x=\\beta u$ and $dx = \\beta du$: \n\\begin{align*}\n    \\int_0^\\infty x^{\\alpha-1}e^{-x/\\beta} dx \n     &=  \\int_0^\\infty (\\beta u)^{\\alpha-1} e^{-u} \\beta du \\\\[12pt]\n   & = \\int_0^\\infty u^{\\alpha-1}e^{-u} du \\\\[12pt]\n   & = \\int_0^\\infty x^{\\alpha-1}e^{-x} dx \\\\[12pt]\n   & = \\Gamma(\\alpha) \\qquad\\blacksquare \\tag{4.5}\n \\end{align*}\nMake the substitution \\(u= x/\\beta\\), so that \\(x=\\beta u\\) and \\(dx = \\beta du\\):\n\\[\\begin{align*}\n    \\int_0^\\infty x^{\\alpha-1}e^{-x/\\beta} dx\n     &=  \\int_0^\\infty (\\beta u)^{\\alpha-1} e^{-u} \\beta du \\\\[12pt]\n   & = \\int_0^\\infty u^{\\alpha-1}e^{-u} du \\\\[12pt]\n   & = \\int_0^\\infty x^{\\alpha-1}e^{-x} dx \\\\[12pt]\n   & = \\Gamma(\\alpha) \\qquad\\blacksquare \\tag{4.5}\n\\end{align*}\\]",
    "crumbs": [
      "Preface",
      "qtex"
    ]
  },
  {
    "objectID": "qtex.html#equations-in-tex-block",
    "href": "qtex.html#equations-in-tex-block",
    "title": "Selected TeX Codes",
    "section": "2 Equations in TeX block",
    "text": "2 Equations in TeX block\n(\\blacksquare, \\tag, align*, \\\\[12pt] )\n\nProposition 1 \\[\\int_0^\\infty x^{\\alpha-1}e^{-x/\\beta} dx  = \\Gamma(\\alpha)\\]\n\n\nProof. \nMake the substitution \\(u= x/\\beta\\), so that \\(x=\\beta u\\) and \\(dx = \\beta du\\):\n\\[\\begin{align*}\n    \\int_0^\\infty x^{\\alpha-1}e^{-x/\\beta} dx\n     &=  \\int_0^\\infty (\\beta u)^{\\alpha-1} e^{-u} \\beta du \\\\[12pt]\n   & = \\int_0^\\infty u^{\\alpha-1}e^{-u} du \\\\[12pt]\n   & = \\int_0^\\infty x^{\\alpha-1}e^{-x} dx \\\\[12pt]\n   & = \\Gamma(\\alpha) \\qquad\\blacksquare \\tag{4.5}\n\\end{align*}\\]\n\nMake the substitution $u = x/\\beta$, so that $x=\\beta u$ and $dx = \\beta du$: \n\\begin{align*}\n    \\int_0^\\infty x^{\\alpha-1}e^{-x/\\beta} dx \n     &=  \\int_0^\\infty (\\beta u)^{\\alpha-1} e^{-u} \\beta du \\\\[12pt]\n   & = \\int_0^\\infty u^{\\alpha-1}e^{-u} du \\\\[12pt]\n   & = \\int_0^\\infty x^{\\alpha-1}e^{-x} dx \\\\[12pt]\n   & = \\Gamma(\\alpha) \\qquad\\blacksquare \\tag{4.5}\n \\end{align*}\n\n2.1 TeX Block - \\boxed equations\nIntegration by parts:\n\\[\\begin{equation}\n  \\boxed{ \\int udv = uv - \\int vdu }\n\\end{equation}\\]\n\\begin{equation}\n  \\boxed{ \\int udv = uv - \\int vdu }\n\\end{equation}",
    "crumbs": [
      "Preface",
      "qtex"
    ]
  },
  {
    "objectID": "qtex.html#theorems-and-proof-in-div-and-tex-block",
    "href": "qtex.html#theorems-and-proof-in-div-and-tex-block",
    "title": "Selected TeX Codes",
    "section": "2 Theorems and proof in Div and TeX block",
    "text": "2 Theorems and proof in Div and TeX block\n(\\blacksquare, \\tag, align*, \\\\[12pt] )\n\nProposition 1 \\[\\int_0^\\infty x^{\\alpha-1}e^{-x/\\beta} dx  = \\Gamma(\\alpha)\\]\n\n\nProof. \nMake the substitution \\(u= x/\\beta\\), so that \\(x=\\beta u\\) and \\(dx = \\beta du\\):\n\\[\\begin{align*}\n    \\int_0^\\infty x^{\\alpha-1}e^{-x/\\beta} dx\n     &=  \\int_0^\\infty (\\beta u)^{\\alpha-1} e^{-u} \\beta du \\\\[12pt]\n   & = \\int_0^\\infty u^{\\alpha-1}e^{-u} du \\\\[12pt]\n   & = \\int_0^\\infty x^{\\alpha-1}e^{-x} dx \\\\[12pt]\n   & = \\Gamma(\\alpha) \\qquad\\blacksquare \\tag{4.5}\n\\end{align*}\\]\n\nMake the substitution $u = x/\\beta$, so that $x=\\beta u$ and $dx = \\beta du$: \n\\begin{align*}\n    \\int_0^\\infty x^{\\alpha-1}e^{-x/\\beta} dx \n     &=  \\int_0^\\infty (\\beta u)^{\\alpha-1} e^{-u} \\beta du \\\\[12pt]\n   & = \\int_0^\\infty u^{\\alpha-1}e^{-u} du \\\\[12pt]\n   & = \\int_0^\\infty x^{\\alpha-1}e^{-x} dx \\\\[12pt]\n   & = \\Gamma(\\alpha) \\qquad\\blacksquare \\tag{4.5}\n \\end{align*}\n\n2.1 TeX Block - \\boxed equations\nIntegration by parts:\n\\[\\begin{equation}\n  \\boxed{ \\int udv = uv - \\int vdu }\n\\end{equation}\\]\n\\begin{equation}\n  \\boxed{ \\int udv = uv - \\int vdu }\n\\end{equation}",
    "crumbs": [
      "Preface",
      "qtex"
    ]
  },
  {
    "objectID": "qtex.html#theorems-and-proof-in-div-and-tex-blocks",
    "href": "qtex.html#theorems-and-proof-in-div-and-tex-blocks",
    "title": "Selected TeX Codes",
    "section": "2 Theorems and proof in Div and TeX blocks",
    "text": "2 Theorems and proof in Div and TeX blocks\n(\\blacksquare, \\tag, align*, \\\\[12pt] )\n(#thm-;#lem-;#cor-;#prp;#cnj-;#def-;#exm-;#exr-;#sol-;#rem-)\n(.proof)\n\nProposition 1 \\[\\int_0^\\infty x^{\\alpha-1}e^{-x/\\beta} dx  = \\Gamma(\\alpha)\\]\n\n\nProof. \nMake the substitution \\(u= x/\\beta\\), so that \\(x=\\beta u\\) and \\(dx = \\beta du\\):\n\\[\\begin{align*}\n    \\int_0^\\infty x^{\\alpha-1}e^{-x/\\beta} dx\n     &=  \\int_0^\\infty (\\beta u)^{\\alpha-1} e^{-u} \\beta du \\\\[12pt]\n   & = \\int_0^\\infty u^{\\alpha-1}e^{-u} du \\\\[12pt]\n   & = \\int_0^\\infty x^{\\alpha-1}e^{-x} dx \\\\[12pt]\n   & = \\Gamma(\\alpha) \\qquad\\blacksquare \\tag{4.5}\n\\end{align*}\\]\n\nMake the substitution $u = x/\\beta$, so that $x=\\beta u$ and $dx = \\beta du$: \n\\begin{align*}\n    \\int_0^\\infty x^{\\alpha-1}e^{-x/\\beta} dx \n     &=  \\int_0^\\infty (\\beta u)^{\\alpha-1} e^{-u} \\beta du \\\\[12pt]\n   & = \\int_0^\\infty u^{\\alpha-1}e^{-u} du \\\\[12pt]\n   & = \\int_0^\\infty x^{\\alpha-1}e^{-x} dx \\\\[12pt]\n   & = \\Gamma(\\alpha) \\qquad\\blacksquare \\tag{4.5}\n \\end{align*}\n\n2.1 TeX Block - \\boxed equations\nIntegration by parts:\n\\[\\begin{equation}\n  \\boxed{ \\int udv = uv - \\int vdu }\n\\end{equation}\\]\n\\begin{equation}\n  \\boxed{ \\int udv = uv - \\int vdu }\n\\end{equation}",
    "crumbs": [
      "Preface",
      "qtex"
    ]
  },
  {
    "objectID": "qtex.html#theorems-and-proofs-in-div-and-tex-blocks",
    "href": "qtex.html#theorems-and-proofs-in-div-and-tex-blocks",
    "title": "Selected TeX Codes",
    "section": "2 Theorems and proofs in div and tex blocks",
    "text": "2 Theorems and proofs in div and tex blocks\n\\blacksquare, \\tag, align*\n#thm-; #lem-; #cor-; #prp; #cnj-; #def-; \n#exm-; #exr-; #sol-; #rem-\n.proof\n\nProposition 1 \\[\\int_0^\\infty x^{\\alpha-1}e^{-x/\\beta} dx  = \\Gamma(\\alpha) \\tag{4.5}\\]\n\n\nProof. \nMake the substitution \\(u= x/\\beta\\), so that \\(x=\\beta u\\) and \\(dx = \\beta du\\):\n\\[\\begin{align*}\n    \\int_0^\\infty x^{\\alpha-1}e^{-x/\\beta} dx\n     &=  \\int_0^\\infty (\\beta u)^{\\alpha-1} e^{-u} \\beta du \\\\[12pt]\n   & = \\int_0^\\infty u^{\\alpha-1}e^{-u} du \\\\[12pt]\n   & = \\int_0^\\infty x^{\\alpha-1}e^{-x} dx \\\\[12pt]\n   & = \\Gamma(\\alpha) \\qquad\\blacksquare\n\\end{align*}\\]\n\nMake the substitution $u = x/\\beta$, so that $x=\\beta u$ and $dx = \\beta du$: \n\\begin{align*}\n    \\int_0^\\infty x^{\\alpha-1}e^{-x/\\beta} dx \n     &=  \\int_0^\\infty (\\beta u)^{\\alpha-1} e^{-u} \\beta du \\\\[12pt]\n   & = \\int_0^\\infty u^{\\alpha-1}e^{-u} du \\\\[12pt]\n   & = \\int_0^\\infty x^{\\alpha-1}e^{-x} dx \\\\[12pt]\n   & = \\Gamma(\\alpha) \\qquad\\blacksquare \\tag{4.5}\n \\end{align*}\n\n2.1 TeX Block - \\boxed equations\nIntegration by parts:\n\\[\\begin{equation}\n  \\boxed{ \\int udv = uv - \\int vdu }\n\\end{equation}\\]\n\\begin{equation}\n  \\boxed{ \\int udv = uv - \\int vdu }\n\\end{equation}",
    "crumbs": [
      "Preface",
      "qtex"
    ]
  },
  {
    "objectID": "qtex.html#section",
    "href": "qtex.html#section",
    "title": "Selected TeX Codes",
    "section": "4 ",
    "text": "4",
    "crumbs": [
      "Preface",
      "qtex"
    ]
  },
  {
    "objectID": "qtex.html#theorems-and-proofs-in-div-blocks",
    "href": "qtex.html#theorems-and-proofs-in-div-blocks",
    "title": "Selected TeX Codes",
    "section": "2 Theorems and proofs in div blocks",
    "text": "2 Theorems and proofs in div blocks\n\\blacksquare, \\tag, align*\n#thm-; #lem-; #cor-; #prp; #cnj-; #def-; \n#exm-; #exr-; #sol-; #rem-\n.proof\n\nProposition 1 \\[\\int_0^\\infty x^{\\alpha-1}e^{-x/\\beta} dx  = \\Gamma(\\alpha) \\tag{4.5}\\]\n\n\nProof. \nMake the substitution \\(u= x/\\beta\\), so that \\(x=\\beta u\\) and \\(dx = \\beta du\\):\n\\[\\begin{align*}\n    \\int_0^\\infty x^{\\alpha-1}e^{-x/\\beta} dx\n     &=  \\int_0^\\infty (\\beta u)^{\\alpha-1} e^{-u} \\beta du \\\\[12pt]\n   & = \\int_0^\\infty u^{\\alpha-1}e^{-u} du \\\\[12pt]\n   & = \\int_0^\\infty x^{\\alpha-1}e^{-x} dx \\\\[12pt]\n   & = \\Gamma(\\alpha) \\qquad\\blacksquare\n\\end{align*}\\]\n\nMake the substitution $u = x/\\beta$, so that $x=\\beta u$ and $dx = \\beta du$: \n\\begin{align*}\n    \\int_0^\\infty x^{\\alpha-1}e^{-x/\\beta} dx \n     &=  \\int_0^\\infty (\\beta u)^{\\alpha-1} e^{-u} \\beta du \\\\[12pt]\n   & = \\int_0^\\infty u^{\\alpha-1}e^{-u} du \\\\[12pt]\n   & = \\int_0^\\infty x^{\\alpha-1}e^{-x} dx \\\\[12pt]\n   & = \\Gamma(\\alpha) \\qquad\\blacksquare \\tag{4.5}\n \\end{align*}\n\n2.1 TeX Block - \\boxed equations\nIntegration by parts:\n\\[\\begin{equation}\n  \\boxed{ \\int udv = uv - \\int vdu }\n\\end{equation}\\]\n\\begin{equation}\n  \\boxed{ \\int udv = uv - \\int vdu }\n\\end{equation}",
    "crumbs": [
      "Preface",
      "qtex"
    ]
  }
]